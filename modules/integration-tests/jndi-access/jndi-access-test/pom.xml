<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>jndi-access-test-parent</artifactId>
        <groupId>org.rhq</groupId>
        <version>4.6.0-SNAPSHOT</version>
    </parent>

    <groupId>org.rhq</groupId>
    <artifactId>jndi-access-test</artifactId>
    <packaging>jar</packaging>

    <name>JNDI access integration test</name>
    <description>Tests for local and remote JNDI access from within serverside scripts.</description>

    <properties>
        <jboss.zip>${settings.localRepository}/org/jboss/as/jboss-as-dist/${jboss.version}/jboss-as-dist-${jboss.version}.zip</jboss.zip>
        <jboss.unzip.location>${basedir}/target/jboss-as-${jboss.version}</jboss.unzip.location>
        <jnp.port>54987</jnp.port>
        <jnp.rmiPort>54988</jnp.rmiPort>
    </properties>

    <dependencies>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.14</version>
            <scope>runtime</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-dist</artifactId>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
 
        <dependency>
            <groupId>org.jboss.as</groupId>
            <artifactId>jboss-as-ejb3</artifactId>
            <version>${jboss.version}</version>
            <scope>test</scope>
        </dependency>
       
        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-scripting-api</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-scripting-javascript</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-scripting-python</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.rhq</groupId>
            <artifactId>rhq-script-bindings</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Arquillian -->
        <dependency>
           <groupId>org.jboss.arquillian.testng</groupId>
           <artifactId>arquillian-testng-container</artifactId>
           <scope>test</scope>
        </dependency>
        
        <dependency>
           <groupId>org.jboss.arquillian.protocol</groupId>
           <artifactId>arquillian-protocol-servlet</artifactId>
           <scope>provided</scope>
        </dependency>
                
        <dependency>
            <groupId>org.jboss.shrinkwrap</groupId>
            <artifactId>shrinkwrap-api</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-api</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-api-maven</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.shrinkwrap.resolver</groupId>
            <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
            <scope>test</scope>
        </dependency>
<<<<<<< HEAD
        
        <!-- We'll try remote connections using JNP -->
=======

        <!-- 3rd Party Deps -->

        <!-- required by RHQ server classes, as well as EJB3 Embedded -->
        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>1.6.1-jboss</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>hibernate</groupId>
            <artifactId>hibernate3</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <dependency>
            <groupId>hibernate-annotations</groupId>
            <artifactId>hibernate-annotations</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <dependency>
            <groupId>hibernate-entitymanager</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>
        
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>javax.persistence</groupId>
            <artifactId>persistence-api</artifactId>
            <version>1.0</version>
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-annotations-ejb3</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <!-- includes the org.jboss.ejb3.StrictMaxPool class, which is needed 
            by the PoolClass annotation used on some of our SLSB's -->
        <dependency>
            <groupId>jboss</groupId>
            <artifactId>jboss-ejb3</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <!-- for the transaction interrupt EJB3 interceptor -->
        <dependency>
            <groupId>org.jboss.transaction</groupId>
            <artifactId>jboss-jta</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <dependency>
            <groupId>org.opensymphony.quartz</groupId>
            <artifactId>quartz</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS itself, which the container build has packaged with 1.6.5 -->
        </dependency>

        <dependency>
            <groupId>org.opensymphony.quartz</groupId>
            <artifactId>quartz-oracle</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement 
                section. -->
            <scope>provided</scope> <!-- by JBossAS itself, which the container build has packaged with 1.6.5 -->
        </dependency>

        <!-- This is needed cglib which is in turn needed by hibernate -->
>>>>>>> lkrejci/code-coverage
        <dependency>
           <groupId>jboss</groupId>
           <artifactId>jnp-client</artifactId>
           <version>4.2.2.GA</version>
           <scope>test</scope>
        </dependency>
        
        <!-- This is here only to ensure the build order and HAS TO COME AS LAST to avoid any classpath
             collisions. -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>jndi-access-remote-server</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <profiles>
        <profile>
            <id>managed-test-server</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            
            <dependencies>
               <dependency>
                  <groupId>org.jboss.as</groupId>
                  <artifactId>jboss-as-arquillian-container-managed</artifactId>
                  <version>${jboss.version}</version>
                  <scope>test</scope>
               </dependency>               
            </dependencies>
        </profile>

        <profile>
            <id>remote-test-server</id>
                        
            <dependencies>
               <dependency>
                  <groupId>org.jboss.spec</groupId>
                  <artifactId>jboss-javaee-6.0</artifactId>
                  <version>1.0.0.Final</version>
                  <type>pom</type>
                  <scope>provided</scope>
               </dependency>

               <dependency>
                  <groupId>org.jboss.as</groupId>
                  <artifactId>jboss-as-arquillian-container-remote</artifactId>
                  <version>${jboss.version}</version>
                  <scope>test</scope>
               </dependency>               
            </dependencies>
        </profile>
    </profiles>
    
    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>

        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>Prepare AS7 for test</id>
                        <phase>process-test-resources</phase>
                        <configuration>
                            <target>
                                <unzip src="${jboss.zip}" dest="${jboss.unzip.location}/.." />  
                                <copy file="src/test/resources/security.policy" toDir="${jboss.unzip.location}"/>                              
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- Everything but the web service tests, this is the standard 
                    test execution -->
                <configuration>
                    <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
                    <groups>${rhq.testng.includedGroups}</groups>
                    <systemPropertyVariables>
                        <deploymentDirectory>target/test-classes</deploymentDirectory>
                        <test.server.jar.path>${settings.localRepository}/org/rhq/jndi-access-remote-server/${project.version}/jndi-access-remote-server-${project.version}.jar</test.server.jar.path>
                        <jnp.port>${jnp.port}</jnp.port>
                        <jnp.rmiPort>${jnp.rmiPort}</jnp.rmiPort>
                    </systemPropertyVariables>
<<<<<<< HEAD
=======
                    <argLine>${jacoco.unit-test.args} -Djava.security.manager -Djava.security.policy==${basedir}/target/test-classes/security.policy</argLine>
                    <additionalClasspathElements>
                        <!-- The below is required for tests to run against 
                            Oracle. -->
                        <additionalClasspathElement>${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar</additionalClasspathElement>
                    </additionalClasspathElements>
>>>>>>> lkrejci/code-coverage
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
