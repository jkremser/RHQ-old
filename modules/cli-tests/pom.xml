<project
   xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-parent</artifactId>
      <version>4.0.0-SNAPSHOT</version>
   </parent>

   <artifactId>rhq-cli-tests</artifactId>

   <name>RHQ CLI Tests</name>
   <description>RHQ Enterprise Remote Command Line Interface</description>

   <properties>
      <rhq.server.name>localhost</rhq.server.name>  
   </properties>

   <dependencies>
      <dependency>
         <groupId>${groupId}</groupId>
         <artifactId>rhq-remoting-cli</artifactId>
         <version>${version}</version>
      </dependency>

      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <version>5.8</version>
         <classifier>jdk15</classifier>
      </dependency>

      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>1.4</version>
      </dependency>

      <dependency>
         <groupId>commons-lang</groupId>
         <artifactId>commons-lang</artifactId>
         <version>2.4</version>
      </dependency>

      <dependency>
         <groupId>jboss</groupId>
         <artifactId>jboss-j2ee</artifactId>
      </dependency>
      
    <dependency>
      <groupId>oswego-concurrent</groupId>
      <artifactId>concurrent</artifactId>
    </dependency>
      
   </dependencies>

   <build>
      <resources>
         <resource>
            <directory>src/main/script</directory>
         </resource>
      </resources>
      <testResources>
         <testResource>
            <directory>src/test/script</directory>
         </testResource>
      </testResources>

      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
               <skip>true</skip>
            </configuration>
         </plugin>

        <plugin>
           <artifactId>maven-antrun-plugin</artifactId>
           <executions>
              <execution>
                <id>test-scripts</id>
                <phase>test</phase>
                <configuration>
                   <tasks>
                      <java classname="org.rhq.enterprise.remoting.cli.ScriptTestRunner"
                            classpathref="maven.test.classpath"
                            resultproperty="script.tests.failed"
                            fork="true">
                         
                         <sysproperty key="script.dir" value="${basedir}/src/test/script"/>
                         <sysproperty key="test.output.dir" value="${basedir}/target/surefire-reports"/>
                         <sysproperty key="test" value="${test}"/>
                         <sysproperty key="rhq.server.name" value="${rhq.server.name}"/>
                      </java>

                      <fail message="There were test failures">
                         <condition>
                            <isfailure code="${script.tests.failed}"/>
                         </condition>
                      </fail>
                   </tasks>
                </configuration>
                <goals>
                   <goal>run</goal>
                </goals>
              </execution>
           </executions>
        </plugin>
      </plugins>
   </build>


   <profiles>

      <!-- Unlike most of RHQ, this module requires JDK6, so replace the Java 5 bootclasspath that was added to the compiler args by the root POM with a bootclasspath based on the java.home sysprop (which should be Java 6 or later if the enforcer plugin did its job). -->
      <profile>
         <id>check-java-api</id>

         <activation>
            <property>
               <name>java5.home</name>
            </property>
         </activation>
         
         <build>
           <plugins>
              <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                  <compilerArguments>
                    <bootclasspath>${java.home}/lib/rt.jar${path.separator}${java.home}/lib/jsse.jar${path.separator}${java.home}/lib/jce.jar</bootclasspath>
                  </compilerArguments>
                </configuration>
              </plugin>
            </plugins>
          </build>
      </profile>
     <profile>
      <id>cobertura</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
        <build>
         <plugins>
           <plugin>
             <artifactId>maven-antrun-plugin</artifactId>    
             <version>1.1</version>
              <dependencies>
               <dependency>
                 <groupId>net.sourceforge.cobertura</groupId>
                 <artifactId>cobertura</artifactId>
                 <version>1.9.4.1</version>       
                 <scope>test</scope>
               </dependency>
             </dependencies>
             <executions>                         
              <execution>              
               <id>cobertura-instrument</id>
               <phase>process-test-classes</phase>
                 <configuration>                  
                   <tasks> 
                   <!-- prepare directory structure for cobertura-->
                   <mkdir dir="target/cobertura" /> 
                   <mkdir dir="target/cobertura/backup"/>
                   <!-- backup all classes so that we can instrument the original classes-->
                   <copy toDir="target/cobertura/backup" verbose="true" overwrite="true">
                      <fileset dir="target/classes">
                         <include name="**/*.class" />                         
                      </fileset>
                   </copy>
                   <!-- create a properties file and save there location of cobertura data file-->
                   <touch file="target/classes/cobertura.properties"/>
                   <echo file="target/classes/cobertura.properties">net.sourceforge.cobertura.datafile=${project.build.directory}/cobertura/cobertura.ser</echo>
                   <taskdef classpathref="maven.plugin.classpath" resource="tasks.properties" />
                   <!-- instrument all classes in target/classes directory -->
                   <cobertura-instrument datafile="${project.build.directory}/cobertura/cobertura.ser" todir="${project.build.directory}/classes">
                     <fileset dir="${project.build.directory}/classes">                     
                        <include name="**/*.class"/>
                      </fileset>
                    </cobertura-instrument>
                   </tasks>
                 </configuration>
               <goals>
                 <goal>run</goal>
               </goals>
              </execution>                            
              <execution>
               <id>cobertura-report</id>
               <phase>prepare-package</phase>
                 <configuration>
                   <tasks>
                     <taskdef classpathref="maven.plugin.classpath" resource="tasks.properties" />
                     <!-- prepare directory structure for cobertura-->
                     <mkdir dir="target/cobertura" />
                     <mkdir dir="target/site/cobertura" />
                     <!-- restore classes from backup folder to classes folder -->
                     <copy toDir="target/classes" verbose="true" overwrite="true">
                      <fileset dir="target/cobertura/backup">
                         <include name="**/*.class" />                         
                      </fileset>
                     </copy>
                     <!-- delete backup folder-->
                     <delete dir="target/cobertura/backup"/>
                     <!-- create a code coverage report -->
                     <cobertura-report format="html" datafile="${project.build.directory}/cobertura/cobertura.ser" destdir="${project.build.directory}/site/cobertura">
                      <fileset dir="${basedir}/src/main/java">
                         <include name="**/*.java" />
                      </fileset>
                     </cobertura-report>
                     <!-- delete cobertura.properties file -->
                     <delete file="target/classes/cobertura.properties"/>
                   </tasks>
                 </configuration>
               <goals>
                 <goal>run</goal>
               </goals>
               </execution>                                           
            </executions>   
           </plugin>          
          </plugins>
       </build>
     </profile>
   </profiles>

</project>
