<plugin name="RHQServer"
        displayName="RHQ Server"
        package="org.rhq.plugins.server"
        description="Monitoring of RHQ Server features and performance"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration">

   <depends plugin="JMX"/>

   <service name="RHQ Server Alerts Engine Subsystem"
            discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
            class="AlertsCacheResourceComponent"
            description="RHQ Server Alerts Engine Subsystem">

      <runs-inside>
         <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
      </runs-inside>

      <plugin-configuration>
         <c:simple-property name="objectName" readOnly="true" default="rhq:service=AlertConditionCacheMonitor"/>
         <c:simple-property name="nameTemplate" default="RHQ Server Alerts Engine Subsystem"/>
         <c:simple-property name="descriptionTemplate" default="Statistics for the RHQ Server Alerts Engine Subsystem."/>
      </plugin-configuration>
      
      <operation name="reloadCaches" description="Unloads then reloads all caches managed by the containing RHQ Server">
         <results>
            <c:list-property name="reloadStatistics">
               <c:map-property name="stat">
                  <c:simple-property name="cacheName" summary="true" type="string"
                                     description="The internal name of the cache being reloaded" />
                  <c:simple-property name="beforeReloading" summary="true" type="long"
                                     description="The count of elements in this cache before reloading" />
                  <c:simple-property name="afterReloading" summary="true" type="long"
                                     description="The count of elements in this cache after reloading" />
               </c:map-property>
            </c:list-property>
         </results>
      </operation>

      <metric property="AvailabilityCacheElementCount" category="throughput" displayType="summary"
              description="The number of elements in the alerts cache that check conditions against availability data"/>
      <metric property="MeasurementCacheElementCount" category="throughput" displayType="summary"
              description="The number of elements in the alerts cache that check conditions against measurement numeric or trait data"/>
      <metric property="EventCacheElementCount" category="throughput" displayType="summary"
              description="The number of elements in the alerts cache that check conditions against event history data"/>
      <metric property="OperationCacheElementCount" category="throughput" displayType="summary"
              description="The number of elements in the alerts cache that check conditions against operation history data"/>
      <metric property="ResourceConfigurationCacheElementCount" category="throughput" displayType="summary"
              description="The number of elements in the alerts cache that check conditions against resource configuration data"/>

      <metric property="TotalCacheElementMatches" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of times ANY cache element has triggered against incoming data since this RHQ Server instance was started"/>
      <metric property="AvailabilityCacheElementMatches" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of times availability-based conditions have triggered against incoming data since this RHQ Server instance was started"/>
      <metric property="MeasurementCacheElementMatches" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of times measurement-based conditions have triggered against incoming data since this RHQ Server instance was started"/>
      <metric property="EventCacheElementMatches" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of times events-based conditions have triggered against incoming data since this RHQ Server instance was started"/>
      <metric property="ResourceConfigurationCacheElementMatches" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of times resource configuration-based conditions have triggered against incoming data since this RHQ Server instance was started"/>
      <metric property="OperationCacheElementMatches" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of times operation-based conditions have triggered against incoming data since this RHQ Server instance was started"/>

      <metric property="TotalProcessingTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time spent by the alerts cache processing ALL types of data"/>
      <metric property="AvailabilityProcessingTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time spent by the alerts cache processing availability data"/>
      <metric property="MeasurementProcessingTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time spent by the alerts cache processing measurement numeric or trait data"/>
      <metric property="EventProcessingTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time spent by the alerts cache processing event history data"/>
      <metric property="ResourceConfigurationProcessingTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time spent by the alerts cache processing resource configuration data"/>
      <metric property="OperationProcessingTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time spent by the alerts cache processing operation history data"/>
      
   </service>

   <service name="RHQ Server Measurement Subsystem"
            discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
            class="org.rhq.plugins.jmx.MBeanResourceComponent"
            description="RHQ Server Measurement Subsystem">

      <runs-inside>
         <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
      </runs-inside>

      <plugin-configuration>
         <c:simple-property name="objectName" readOnly="true" default="rhq:service=MeasurementMonitor"/>
         <c:simple-property name="nameTemplate" default="RHQ Server Measurement Subsystem"/>
         <c:simple-property name="descriptionTemplate" default="Statistics for the RHQ Server Measurement Subsystem."/>
      </plugin-configuration>

      <metric property="MeasurementsInserted" category="throughput" displayType="summary" measurementType="trendsup"
              description="The total number of measurement records inserted into the database by this RHQ Server instance since it was started"/>
      <metric property="ScheduledMeasurementsPerMinute"
              description="The average number of measurements expected to be collected per minute"/>
      <metric property="MeasurementInsertTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time taken to insert measurement data into the database by this RHQ Server instance since it was started"/>
      <metric property="BaselineCalculationTime" units="milliseconds" measurementType="trendsup"
              description="The total amount of time taken to calculate and insert measurement baseline data into the database by this RHQ Server instance since it was started"/>
      <metric property="MeasurementCompressionTime" units="milliseconds" displayType="summary" measurementType="trendsup"
              description="The total amount of time taken by this RHQ Server instance to compress measurement data since it was started"/>
      <metric property="PurgeTime" displayType="summary" units="milliseconds" measurementType="trendsup"
              description="The total amount of time taken by this RHQ Server instance to purge old measurement data since it was started"/>

      <metric property="AvailabilityInsertTime" displayType="summary" units="milliseconds" measurementType="trendsup"
              description="The total amount of time taken to insert availability data into the database by this RHQ Server instance since it was started"/>
      <metric property="AvailabilitiesInserted" displayType="summary" measurementType="trendsup"
              description="The total number of availability records inserted into the database by this RHQ Server instance since it was started"/>
      <metric property="TotalAvailabilityReports" displayType="summary" measurementType="trendsup"
              description="The total number of availability reports received and processed by this RHQ Server since it was started"/>
      <metric property="ChangesOnlyAvailabilityReports" displayType="summary" measurementType="trendsup"
              description="The number of changes-only availability reports received and processed by this RHQ Server since it was started"/>
      <metric property="FullAvailabilityReports" displayType="summary" measurementType="trendsup"
              description="The number of full availability reports received and processed by this RHQ Server since it was started"/>

      <metric property="PurgedAlerts" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of alerts purged by the last purge job"/>
      <metric property="PurgedAlertConditions" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of alert conditions purged by the last purge job"/>
      <metric property="PurgedAlertNotifications" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of alert notifications purged by the last purge job"/>
      <metric property="PurgedAvailabilities" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of availabilities purged by the last purge job"/>
      <metric property="PurgedCallTimeData" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of call time data purged by the last purge job"/>
      <metric property="PurgedEvents" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of events purged by the last purge job"/>
      <metric property="PurgedMeasurementTraits" displayType="summary" measurementType="dynamic" category="utilization" defaultInterval="900000" 
              description="Number of traits purged by the last purge job"/>
      
   </service>
   
   <service name="RHQ Server Group Definition / DynaGroups Subsystem"
            discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
            class="GroupDefinitionResourceComponent"
            description="Statistics for the RHQ Server Group Definition / DynaGroups Subsystem">

      <runs-inside>
         <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
      </runs-inside>
      
      <plugin-configuration>
         <c:simple-property name="objectName" readOnly="true" default="rhq:service=GroupDefinitionRecalculationThreadMonitor"/>
         <c:simple-property name="nameTemplate" default="RHQ Server Group Definition / DynaGroups Subsystem"/>
         <c:simple-property name="descriptionTemplate" default="Statistics for the RHQ Server Group Definition / DynaGroups Subsystem."/>
      </plugin-configuration>
      
      <operation name="clear" displayName="Clear Statistics" description="Clear the collected statistics, and start collecting anew"/>

      <operation name="retrieveStatistics" description="View a snapshot of statistical information about the recalculation cost of each GroupDefinition in the system">
         <results>
            <c:list-property name="statistics">
               <c:map-property name="stat">
                  <c:simple-property name="groupDefinitionName" summary="true" type="string"/>
                  <c:simple-property name="dynaGroupCount" summary="true" type="long"/>
                  <c:simple-property name="recalculationCount" summary="true" type="long"/>
                  <c:simple-property name="successfulCount" summary="true" type="long"/>
                  <c:simple-property name="failureCount" summary="true" type="long"/>
                  <c:simple-property name="minExecutionTime" summary="true" type="long"/>
                  <c:simple-property name="maxExecutionTime" summary="true" type="long"/>
                  <c:simple-property name="avgEexecutionTime" summary="true" type="long"/>
               </c:map-property>
            </c:list-property>
         </results>
      </operation>

      <metric property="GroupDefinitionCount" category="throughput" displayType="summary" measurementType="dynamic"
              description="Total number of group definitions in the system"/>
      <metric property="AutoRecalculatingGroupDefinitionCount" category="throughput" displayType="summary" measurementType="dynamic"
              description="The number of auto-recalculating group definitions in the system"/>
      <metric property="DynaGroupCount" category="throughput" displayType="summary" measurementType="dynamic"
              description="Total number of resource groups managed by some group definition"/>
      <metric property="AutoRecalculationThreadTime" category="performance" displayType="summary" measurementType="dynamic" units="milliseconds"
              description="Average time it took to recalculate DynaGroup members for those GroupDefinition's whose timeout expired"/>

   </service>

   <service name="RHQ Server Communications Subsystem"
            discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
            class="CommunicationsResourceComponent"
            description="Details on communications with agents">

      <runs-inside>
         <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
      </runs-inside>

      <plugin-configuration>
         <c:simple-property name="objectName" readOnly="true" default="rhq:service=ServerCommunications"/>
         <c:simple-property name="nameTemplate" default="RHQ Server Communications Subsystem"/>
         <c:simple-property name="descriptionTemplate" default="Details on communications with agents"/>
      </plugin-configuration>

      <operation name="clear" displayName="Clear Metrics" description="Clear the collected metric data and start collecting anew"/>

      <operation name="viewReceivedCallTimeData" description="View statistical information about each subsystem call into the server">
         <results>
            <c:list-property name="commands">
               <c:map-property name="command">
                  <c:simple-property name="command" summary="true" type="string"/>
                  <c:simple-property name="totalCount" summary="true" type="long"/>
                  <c:simple-property name="successCount" summary="true" type="long"/>
                  <c:simple-property name="failureCount" summary="true" type="long"/>
                  <c:simple-property name="droppedCount" summary="true" type="long"/>
                  <c:simple-property name="notProcessedCount" summary="true" type="long"/>
                  <c:simple-property name="executionMinTime" summary="true" type="long"/>
                  <c:simple-property name="executionMaxTime" summary="true" type="long"/>
                  <c:simple-property name="executionAvgTime" summary="true" type="long"/>
               </c:map-property>
            </c:list-property>
         </results>
      </operation>

      <metric property="NumberFailedCommandsReceived" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of commands that were received but failed to be processed successfully"/>
      <metric property="NumberSuccessfulCommandsReceived" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of commands that were received and successfully processed"/>
      <metric property="NumberTotalCommandsReceived" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of commands that were received regardless of their success or failure"/>
      <metric property="NumberDroppedCommandsReceived" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of commands that were received but were dropped, usually due to a limit reached in the server that prohibits more commands from being processed until commands currently being processed are finished."/>
      <metric property="NumberNotProcessedCommandsReceived" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of commands that were received but were not processed usually due to the suspension of global command processing."/>
      <metric property="AverageExecutionTimeReceived" category="performance" displayType="summary" measurementType="dynamic" units="milliseconds"
              description="Average time it took to process incoming commands that were ultimately successful"/>

      <resource-configuration>
         <c:group name="concurrencylimits" displayName="Concurrency Limits" hiddenByDefault="false">
            <c:description>Limits the number of concurrent requests to a particular subsystem before requests start getting dropped</c:description>
            <c:simple-property name="GlobalConcurrencyLimit" displayName="Global Concurrency Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of incoming commands from agents that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="InventoryReportConcurrencyLimit" displayName="Inventory Report Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of inventory reports that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="AvailabilityReportConcurrencyLimit" displayName="Availability Report Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of availability reports that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="InventorySyncConcurrencyLimit" displayName="Inventory Synchronization Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of inventory synchronizations that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="ContentReportConcurrencyLimit" displayName="Content Report Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of content reports that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="ContentDownloadConcurrencyLimit" displayName="Content Download Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of package version downloads that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="MeasurementReportConcurrencyLimit" displayName="Measurement Report Concurrency Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of measurement reports that can be processed concurrently; if zero or less, there is no limit"/>
            <c:simple-property name="MeasurementScheduleRequestConcurrencyLimit" displayName="Measurement Schedule Request Concurrency Limit" type="integer" required="true" activationPolicy="immediate"
                               description="Number of measurement schedule requests that can be processed concurrently; if zero or less, there is no limit"/>
         </c:group>
         <c:group name="ha" displayName="High Availability" hiddenByDefault="true">
            <c:simple-property name="MaintenanceModeAtStartup" type="boolean" required="true" activationPolicy="restart"
                               description="If true, the server will start in Maintenance Mode, regardless of the state it was in when it was shutdown. Therefore, if true, no agents will be allowed to talk to this server when it starts up."/>
         </c:group>
      </resource-configuration>

   </service>

   <service name="RHQ Server Remote API Subsystem"
            discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
            class="RemoteAPIResourceComponent"
            description="Details on remote API communications with external clients, including the CLI">

      <runs-inside>
         <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
      </runs-inside>

      <plugin-configuration>
         <c:simple-property name="objectName" readOnly="true" default="rhq.remoting:type=RemoteApiMetrics"/>
         <c:simple-property name="nameTemplate" default="RHQ Server Remote API Subsystem"/>
         <c:simple-property name="descriptionTemplate" default="Details on remote API communications with external clients, including the CLI"/>
      </plugin-configuration>

      <operation name="clear" displayName="Clear Metrics" description="Clear the collected metric data and start collecting anew"/>

      <operation name="viewReceivedCallTimeData" description="View statistical information about each subsystem call into the server">
         <results>
            <c:list-property name="requests">
               <c:map-property name="request">
                  <c:simple-property name="api" summary="true" type="string"/>
                  <c:simple-property name="totalCount" summary="true" type="long"/>
                  <c:simple-property name="successCount" summary="true" type="long"/>
                  <c:simple-property name="failureCount" summary="true" type="long"/>
                  <c:simple-property name="executionMinTime" summary="true" type="long"/>
                  <c:simple-property name="executionMaxTime" summary="true" type="long"/>
                  <c:simple-property name="executionAvgTime" summary="true" type="long"/>
               </c:map-property>
            </c:list-property>
         </results>
      </operation>

      <metric property="NumberFailedInvocations" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of remote API requests that were received but failed to be processed successfully"/>
      <metric property="NumberSuccessfulInvocations" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of remote API requests that were received and successfully processed"/>
      <metric property="NumberTotalInvocations" category="throughput" displayType="summary" measurementType="trendsup"
              description="Total number of remote API requests that were received regardless of their success or failure"/>
      <metric property="AverageExecutionTime" category="performance" displayType="summary" measurementType="dynamic" units="milliseconds"
              description="Average time it took to process incoming remote API requests that were ultimately successful"/>

   </service>

   <service name="RHQ Server Plugin Subsystem"
            discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
            class="org.rhq.plugins.jmx.MBeanResourceComponent"
            description="Details on the server-side plugin container subsystem">

      <runs-inside>
         <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
      </runs-inside>

      <plugin-configuration>
         <c:simple-property name="objectName" readOnly="true" default="rhq.serverplugin:service=ServerPluginService"/>
         <c:simple-property name="nameTemplate" default="RHQ Server Plugin Subsystem"/>
         <c:simple-property name="descriptionTemplate" default="Details on the server-side plugin container subsystem"/>
      </plugin-configuration>

      <operation name="startMasterPluginContainer"
                 description="Starts the master plugin container which will load and initialize all server-side plugins.">
      </operation>

      <operation name="stopMasterPluginContainer"
                 description="Stops the master plugin container which will shutdown all server-side plugins.">
      </operation>

      <operation name="restartMasterPluginContainer"
                 description="Convienence operation that first stops and then immediately restarts the master plugin container.">
      </operation>

      <metric property="{masterPluginContainer.configuration.pluginDirectory}"
              displayName="Plugin Directory"
              dataType="trait"
              displayType="detail"
              description="The location where this plugin container expects to find all of its plugins."/>

      <metric property="{masterPluginContainer.configuration.temporaryDirectory}"
              displayName="Temporary Directory"
              dataType="trait"
              displayType="detail"
              description="The location that the plugin uses to store transient files. Dependency jars found in plugins will be stored here to help build plugin classloaders."/>

   </service>

</plugin>