<?xml version="1.0" encoding="UTF-8" ?>

<plugin name="Byteman"
        displayName="Byteman"
        description="Provides a client to a Byteman instrumented JVM"
        package="org.rhq.plugins.byteman"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration">

    <server name="Byteman Agent"
            discovery="BytemanAgentDiscoveryComponent"
            class="BytemanAgentComponent"
            supportsManualAdd="true"
            classLoader="instance"
            description="A Byteman agent that is listening for incoming requests to perform byte-code manipulation">

        <plugin-configuration>
            <c:simple-property name="listenerHost" type="string" required="true" default="127.0.0.1"
                               description="The IP or hostname that the Byteman agent listener has bound to"/>
            <c:simple-property name="listenerPort" type="integer" required="true" default="9091"
                               description="The port that the Byteman agent listener is listening for commands on">
                <c:constraint>
                    <c:integer-constraint minimum="1" maximum="65535"/>
                </c:constraint>
            </c:simple-property>
            <c:simple-property name="bytemanClientJar" type="file" required="true"
                               description="The full path to the Byteman jar file that contains the Byteman submit client"/>
        </plugin-configuration>

        <process-scan name="bytemanAgent" query="process|basename|match=java.*,arg|*|match=-javaagent:.*byteman.*jar.*"/>

        <operation name="getRule" description="Retrieves the content of a given rule">
            <parameters>
                <c:simple-property name="ruleName" description="The name of the rule to get" type="string" required="true"/>
            </parameters>
            <results>
                <c:simple-property name="ruleDefinition" type="longString" />
            </results>
        </operation>

        <operation name="getClientVersion" description="Reports the version of the Byteman client that is being used by this plugin">
            <results>
                <c:simple-property name="version" description="The version of the Byteman client"/>
            </results>
        </operation>

        <operation name="addJarsToSystemClasspath"
                   description="Adds jars to the Byteman agent's system classpath. Use this if the jar files already exist at the given locations on the remote Byteman agent machine and are accessible to the Byteman agent.">
            <parameters>
                <c:simple-property name="jarPathnames" description="Comma-separated list of pathnames pointing to the jar files." required="true" />
            </parameters>
            <results>
                <c:simple-property name="operationResult" type="longString" description="The response from the Byteman agent" />
            </results>
        </operation>

        <operation name="addJarsToBootClasspath"
                   description="Adds jars to the Byteman agent's boot classpath. Use this if the jar files already exist at the given locations on the remote Byteman agent machine  and are accessible to the Byteman agent.">
            <parameters>
                <c:simple-property name="jarPathnames" description="Comma-separated list of pathnames pointing to the jar files." required="true" />
            </parameters>
            <results>
                <c:simple-property name="operationResult" type="longString" description="The response from the Byteman agent" />
            </results>
        </operation>

        <operation name="getAddedClasspathJars"
                   description="Gets the names of all jars that were added to both the boot and system classpaths of the Byteman agent. This will return the names of all jars added to the Byteman agent via 1) the Byteman command line client, 2) one of the 'add' operations provided by this RHQ plugin or 3) through the bootJar/systemJar content managed by this RHQ plugin.">
            <results>
                <c:list-property name="additionalBootClasspathJars" description="Jars that were added to the boot classpath">
                    <c:map-property name="additionalBootClasspathJar" description="A jar that was added to the boot classpath">
                        <c:simple-property name="jarPathname" />
                    </c:map-property>
                </c:list-property>
                <c:list-property name="additionalSystemClasspathJars" description="Jars that were added to the system classpath">
                    <c:map-property name="additionalSystemClasspathJar" description="A jar that was added to the system classpath">
                        <c:simple-property name="jarPathname" />
                    </c:map-property>
                </c:list-property>
            </results>
        </operation>

        <metric property="TRAIT-clientVersion"
                displayName="Client Version"
                description="The version of the client used by this plugin to talk to the Byteman agent."
                category="utilization"
                dataType="trait"
                defaultOn="true" />

        <metric property="totalNumberOfScripts"
                description="The total number of scripts currently deployed in the Byteman agent. Scripts contain one or more rules."
                category="utilization"
                displayType="summary"
                defaultOn="true" />

        <metric property="totalNumberOfRules"
                description="The total number of individual rules currently deployed in the Byteman agent"
                category="utilization"
                displayType="summary"
                defaultOn="true" />

        <metric property="totalNumberOfBootJars"
                description="The total number of jar files that have been added to the Byteman agent's boot classpath"
                category="utilization"
                displayType="summary"
                defaultOn="true" />

        <metric property="totalNumberOfSystemJars"
                description="The total number of jar files that have been added to the Byteman agent's system classpath"
                category="utilization"
                displayType="summary"
                defaultOn="true" />

        <!--
        bootJar/systemJar content allow users to push jar content to the RHQ agent machine and manage that content.
        Pushing these jars will implicitly add them to the Byteman agent and will keep the Byteman agent up to date
        (in other words, the RHQ agent will periodically check to ensure these jars are added to the Byteman agent classpaths).
        -->
        <content name="bootJar" category="deployable" description="A jar file that is added to the Byteman agent's boot classpath"/>
        <content name="systemJar" category="deployable" description="A jar file that is added to the Byteman agent's system classpath"/>

        <resource-configuration>
            <c:list-property name="bytemanSystemProperties">
                <c:map-property name="bytemanSystemProperty">
                    <c:simple-property name="name" description="The Byteman configuration sysprop name. This must start with 'org.jboss.byteman.'"/>
                    <c:simple-property name="value" />
                </c:map-property>
            </c:list-property>
        </resource-configuration>

        <service name="Byteman Script"
                 discovery="BytemanScriptDiscoveryComponent"
                 class="BytemanScriptComponent"
                 createDeletePolicy="both"
                 creationDataType="content"
                 description="A Byteman script that contains rules to be injected in the JVM">

            <content name="bytemanScript" isCreationType="true" category="deployable" description="A script file that contains rules to be injected into the JVM"/>

            <service name="Byteman Rule"
                     discovery="BytemanRuleDiscoveryComponent"
                     class="BytemanRuleComponent">
            </service>
        </service>
   </server>

</plugin>
