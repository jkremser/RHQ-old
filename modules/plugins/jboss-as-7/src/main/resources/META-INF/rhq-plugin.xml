<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE plugin [

    <!ENTITY pluginName 'JBossAS7'>

    <!ENTITY startScriptPluginConfigGroup '
    <c:group name="operations">
        <c:simple-property name="startScript" type="file"
                           description="Path to the script that the Start and Restart operations should use to start the server. If the path is not absolute, it is resolved relative to the server home directory." displayName="Start Script Path" required="false" />
        <c:simple-property name="startScriptPrefix" type="string" required="false"
                           description="A prefix command line that should be prepended to the start script command line
                                        by the Start and Restart operations; the prefix command must be an absolute path
                                        (e.g. &quot;/usr/bin/sudo&quot;). This property is most commonly used to run the
                                        AS7 process as a different user than the RHQ Agent (e.g. &quot;sudo -u jboss -g
                                        jboss&quot; could be used to run AS7 as user &quot;jboss&quot; and group
                                        &quot;jboss&quot;. It is also possible to chain prefix commands (e.g.
                                        &quot;nohup sudo -u jboss&quot; could be used to make AS7 ignore HUP signals and
                                        run as user &quot;jboss&quot;)." />
        <c:simple-property name="startScriptEnv" type="longString"
                           description="The variables that the Start and Restart operations will add to the environment of the server start script. Each name=value pair should be on a new line." displayName="Start Script Environment Variables" required="false" />
        <c:simple-property name="startScriptArgs" type="longString"
                           description="The arguments that the Start and Restart operations will pass to the server start script. Each argument should be on a new line." displayName="Start Script Arguments" required="false" />
    </c:group>
'>

    <!ENTITY logSources '
    <c:group name="events">
        <c:list-property name="logEventSources">
            <c:map-property name="logEventSource">
                <c:simple-property name="logFilePath" type="file" summary="true"
                                   description="The absolute path to the source log file."/>
                <c:simple-property name="enabled" type="boolean" summary="true"
                                   description="A flag indicating whether of not this log Event source is currently
                                                enabled (i.e. whether the associated log file should be tailed for
                                                new entries)."/>
                <c:simple-property name="dateFormat" required="false"
                                   description="The date format to use when parsing the dates in log entries. The
                                                format must be in the syntax defined by the Java SimpleDateFormat
                                                class. If not specified, the three date formats that are predefined
                                                by Log4J (ISO8601, DATE, and ABSOLUTE) will be tried."/>
                <c:simple-property name="includesPattern" required="false"
                                   description="A regular expression against which the details of a log entry is matched
                                                to determine if an Event should be fired for that entry. If not
                                                specified, no filtering of log entries will be done based on their
                                                detail."/>
                <c:simple-property name="minimumSeverity" required="false" default="error"
                                   description="The minimum severity of Events that should be collected for this
                                                source. If not specified, there is no minimum severity (i.e. all
                                                events will be collected).">
                    <c:property-options>
                       <c:option name="debug" value="debug"/>
                       <c:option name="info"  value="info"/>
                       <c:option name="warn"  value="warn"/>
                       <c:option name="error" value="error"/>
                       <c:option name="fatal" value="fatal"/>
                    </c:property-options>
                </c:simple-property>
            </c:map-property>
        </c:list-property>
    </c:group>
'>
    <!ENTITY serverKindMetrics '
        <metric property="_skm:release-codename" dataType="trait"  displayName="Server Code Name" displayType="summary"/>
        <metric property="_skm:release-version" dataType="trait"  displayName="Server Version" displayType="summary"/>
        <metric property="_skm:product-name" dataType="trait" displayName="Product Name"/>
        <metric property="_skm:product-version" dataType="trait" displayName="Product Version" displayType="summary"/>
'>

    <!ENTITY modclusterSharedOpsConfig '
        <operation name="add-custom-metric" description="Add new custom metric to the load balancer provider.">
          <parameters>
            <c:simple-property name="class" required="true" type="string" readOnly="false" description="Class name of the custom metric."/>
            <c:simple-property name="weight" required="false" type="integer" readOnly="false" description="Weight of the metric."/>
            <c:simple-property name="capacity" required="false" type="integer" readOnly="false" description="Capacity of the metric."/>
            <c:simple-property name="property" required="false" type="string" readOnly="false" description="Properties for the metric." defaultValue="busyness">
              <c:property-options>
                <c:option value="cpu" name="cpu"/>
                <c:option value="mem" name="mem"/>
                <c:option value="heap" name="heap"/>
                <c:option value="sessions" name="sessions"/>
                <c:option value="requests" name="requests"/>
                <c:option value="send-traffic" name="send-traffic"/>
                <c:option value="receive-traffic" name="receive-traffic"/>
                <c:option value="busyness" name="busyness"/>
                <c:option value="connection-pool" name="connection-pool"/>
              </c:property-options>
            </c:simple-property>
          </parameters>
          <results>
            <c:simple-property name="operationResult" description="Add new custom metric to the load balancer provider."/>
          </results>
        </operation>

        <operation name="add-metric" description="Add new metric to the load balancer provider.">
          <parameters>
            <c:simple-property name="type" required="true" type="string" readOnly="false" description="Type of the metric"/>
            <c:simple-property name="weight" required="false" type="integer" readOnly="false" description="Weight of the metric."/>
            <c:simple-property name="capacity" required="false" type="integer" readOnly="false" description="Capacity of the metric."/>
            <c:simple-property name="property" required="false" type="string" readOnly="false" description="Properties for the metric." defaultValue="busyness">
              <c:property-options>
                <c:option value="cpu" name="cpu"/>
                <c:option value="mem" name="mem"/>
                <c:option value="heap" name="heap"/>
                <c:option value="sessions" name="sessions"/>
                <c:option value="requests" name="requests"/>
                <c:option value="send-traffic" name="send-traffic"/>
                <c:option value="receive-traffic" name="receive-traffic"/>
                <c:option value="busyness" name="busyness"/>
                <c:option value="connection-pool" name="connection-pool"/>
              </c:property-options>
            </c:simple-property>
          </parameters>
          <results>
            <c:simple-property name="operationResult" description="Add new metric to the load balancer provider."/>
          </results>
        </operation>

        <operation name="remove-custom-metric" description="Remove a custom metric from the load balancer provider.">
          <parameters>
            <c:simple-property name="class" required="true" type="string" readOnly="false" description="Class name of the custom metric."/>
          </parameters>
          <results>
            <c:simple-property name="operationResult" description="Remove a custom metric from the load balancer provider."/>
          </results>
        </operation>

        <operation name="remove-metric" description="Add new metric to the load balancer provider.">
          <parameters>
            <c:simple-property name="type" required="true" type="string" readOnly="false" description="Type of the metric"/>
          </parameters>
          <results>
            <c:simple-property name="operationResult" description="Add new metric to the load balancer provider."/>
          </results>
        </operation>

        <resource-configuration>

<!--          <c:group name="proxy" displayName="Proxy Options">-->
            <c:simple-property name="proxy-list" required="false" type="string" readOnly="false" defaultValue="" description="List of proxies, Format (hostname:port) separated with comas."/>
            <c:simple-property name="proxy-url" required="false" type="string" readOnly="false" defaultValue="/" description="Base URL for MCMP requests."/>
<!--          </c:group>-->

<!--          <c:group name="advertise" displayName="Advertise Options">-->
            <c:simple-property name="advertise-socket" required="false" type="string" readOnly="false" defaultValue="224.0.1.105:23364"
                               description="Name of Socket binding to use for the Advertise socket."/>
            <c:simple-property name="advertise" required="false" type="boolean" readOnly="false" defaultValue="true" description="Use Advertise logic or not."/>
            <c:simple-property name="advertise-security-key" required="false" type="string" readOnly="false" description="String containing the security key for the Advertise logic."/>
            <c:simple-property name="balancer" required="false" type="string" readOnly="false" defaultValue="mycluster" description="The balancer name."/>
            <c:simple-property name="connector" required="true" type="string" readOnly="false" defaultValue="ajp" description="Name of the web connector used to communicate with the load balancer.">
              <c:option-source target="resource" expression="type=Connector plugin=&pluginName;"/>
            </c:simple-property>
            <c:simple-property name="domain" required="false" type="string" readOnly="false" description="loadBalancingGroup name."/>
<!--          </c:group>-->

<!--          <c:group name="context" displayName="Web Context Options">-->
            <c:simple-property name="excluded-contexts" required="false" type="string" readOnly="false" defaultValue="ROOT,admin-console,invoker,jbossws,jmx-console,juddi,web-console"
                               description="List of contexts mod_cluster should ignore, Format String separated with comas."/>
            <c:simple-property name="auto-enable-contexts" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enable contexts even if disabled in mod_cluster_manger (httpd)."/>
<!--          </c:group>-->

<!--          <c:group name="session" displayName="Session Options">-->
            <c:simple-property name="sticky-session" required="false" type="boolean" readOnly="false" defaultValue="true" description="Use sticky sessions for requests."/>
            <c:simple-property name="sticky-session-remove" required="false" type="boolean" readOnly="false" defaultValue="false" description="Remove session information on failover."/>
            <c:simple-property name="sticky-session-force" required="false" type="boolean" readOnly="false" defaultValue="false" description="Don&apos;t failover a request with session information."/>
<!--          </c:group>-->

<!--          <c:group name="network" displayName="Network Options">-->
            <c:simple-property name="worker-timeout" required="false" type="integer" readOnly="false" defaultValue="-1" description="Timeout to wait in httpd for an available worker to process the requests."/>
            <c:simple-property name="max-attempts" required="false" type="integer" readOnly="false" defaultValue="1" description="Max attempts to process an idempotent request."/>
            <c:simple-property name="flush-packets" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enables/disables packet flushing in httpd."/>
            <c:simple-property name="flush-wait" required="false" type="integer" readOnly="false" defaultValue="-1" description="Time to wait before flushing packets in httpd."/>
            <c:simple-property name="ping" required="false" type="integer" readOnly="false" defaultValue="10" description="Time (in seconds) in which to wait for a pong answer to a ping."/>
            <c:simple-property name="smax" required="false" type="integer" readOnly="false" description="Soft maximum idle connection count in httpd"/>
            <c:simple-property name="ttl" required="false" type="integer" readOnly="false" defaultValue="60" description="Time to live (in seconds) for idle connections above smax"/>
            <c:simple-property name="node-timeout" required="false" type="integer" readOnly="false" defaultValue="-1" description="Timeout (in seconds) for proxy connections to a node."/>
            <c:simple-property name="stop-context-timeout" required="false" type="integer" readOnly="false" defaultValue="10" description="Max time to wait for context to process pending requests."/>
            <c:simple-property name="socket-timeout" required="false" type="integer" readOnly="false" defaultValue="20" description="Timeout to wait for httpd to answer a MCMP message."/>

<!--          </c:group>-->
        </resource-configuration>
'>

	<!ENTITY logLevel '
           <c:simple-property name="level" required="false" type="string" readOnly="false" description="The log level specifying which message levels will be logged by this. Message levels lower than this value will be discarded.">
            <c:property-options>
	      <c:option value="ALL"/>
	      <c:option value="CONFIG"/>
	      <c:option value="DEBUG"/>
	      <c:option value="ERROR"/>
	      <c:option value="FATAL"/>
	      <c:option value="FINE"/>
	      <c:option value="FINER"/>
	      <c:option value="FINEST"/>
	      <c:option value="INFO"/>
	      <c:option value="OFF"/>
	      <c:option value="TRACE"/>
	      <c:option value="WARN"/>
	      <c:option value="WARNING"/>
            </c:property-options>
	   </c:simple-property>
'>

	<!ENTITY logFilter '
         <!--
         <c:simple-property name="filter" required="false" description="Defines a simple filter type." >
          <c:property-options>
           <c:option value="accept"/>
           <c:option value="all"/>
           <c:option value="any"/>
           <c:option value="change-level"/>
           <c:option value="deny"/>
           <c:option value="level"/>
           <c:option value="level-range"/>
           <c:option value="match"/>
           <c:option value="not"/>
           <c:option value="replace"/>
          </c:property-options>
         </c:simple-property>-->
'>

    <!ENTITY jvmDefinitionResourceConfigProperties '
        <c:simple-property name="agent-lib" required="false" type="string" readOnly="false" description="The JVM agent lib."/>
        <c:simple-property name="agent-path" required="false" type="string" readOnly="false" description="The JVM agent path."/>
        <c:simple-property name="env-classpath-ignored" required="false" type="boolean" readOnly="false" description="Ignore the environment classpath."/>
        <c:list-property name="environment-variables" required="false" description="The JVM environment variables." >
            <c:simple-property name="environment-variable" type="string"/>
        </c:list-property>
        <c:simple-property name="heap-size" required="false" type="string" readOnly="false" description="The initial heap size allocated by the JVM."/>
        <c:simple-property name="java-agent" required="false" type="string" readOnly="false" description="The java agent."/>
        <c:simple-property name="java-home" required="false" type="string" readOnly="false" description="The java home"/>
        <c:list-property name="jvm-options" required="false" description="The JVM options. Those can not be changed after initial creation of the definition." readOnly="true" >
            <c:simple-property name="jvm-option" type="string"/>
        </c:list-property>
        <c:simple-property name="max-heap-size" required="false" type="string" readOnly="false" description="The maximum heap size that can be allocated by the JVM."/>
        <c:simple-property name="max-permgen-size" required="false" type="string" readOnly="false" description="The maximum size of the permanent generation."/>
        <c:simple-property name="permgen-size" required="false" type="string" readOnly="false" description="The initial permanent generation size."/>
        <c:simple-property name="stack-size" required="false" type="string" readOnly="false" description="The JVM stack size settings."/>
        <c:simple-property name="type" required="false" type="string" readOnly="true" description="The JVM type can be either SUN or IBM" default="SUN">
            <c:property-options>
                <c:option value="SUN"/>
                <c:option value="IBM"/>
            </c:property-options>
        </c:simple-property>
'>

	<!ENTITY logFile '
          <c:map-property name="file" required="true" readOnly="false" description="The file description consisting of the path and optional relative to path.">
            <c:simple-property name="path" required="true" readOnly="false" description="The filesystem path."/>
            <c:simple-property name="relative-to" required="false" readOnly="false" description="The name of another previously named path, or of one of the standard paths provided by the system. If &apos;relative&#45;to&apos; is provided, the value of the &apos;path&apos; attribute is treated as relative to the path specified by this attribute. The standard paths provided by the system include&#58;&lt;ul&gt;&lt;li&gt;jboss.home &#45; the root directory of the JBoss AS distribution&lt;/li&gt;&lt;li&gt;user.home &#45; user&apos;s home directory&lt;/li&gt;&lt;li&gt;user.dir &#45; user&apos;s current working directory&lt;/li&gt;&lt;li&gt;java.home &#45; java installation directory&lt;/li&gt;&lt;li&gt;jboss.server.base.dir &#45; root directory for an individual server instance&lt;/li&gt;&lt;li&gt;jboss.server.data.dir &#45; directory the server will use for persistent data file storage&lt;/li&gt;&lt;li&gt;jboss.server.log.dir &#45; directory the server will use for log file storage&lt;/li&gt;&lt;li&gt;jboss.server.tmp.dir &#45; directory the server will use for temporary file storage&lt;/li&gt;&lt;li&gt;jboss.domain.servers.dir &#45; directory under which a host controller will create the working area for individual server instances&lt;/li&gt;&lt;/ul&gt;">
	     <c:property-options>
	      <c:option value="java.home" />
	      <c:option value="jboss.domain.servers.dir" />
	      <c:option value="jboss.home" />
	      <c:option value="jboss.server.base.dir" />
	      <c:option value="jboss.server.data.dir" />
	      <c:option value="jboss.server.log.dir" />
	      <c:option value="jboss.server.tmp.dir" />
	      <c:option value="user.dir" />
	      <c:option value="user.home" />
             </c:property-options>
            </c:simple-property>
          </c:map-property>
'>

<!ENTITY datasourceMetrics '
      <metric property="PreparedStatementCacheCurrentSize" description="The number of prepared and callable statements currently cached in the statement cache"/>
      <metric property="PreparedStatementCacheMissCount" measurementType="trendsup" description="The number of times that a statement request could not be satisfied with a statement from the cache"/>
      <metric property="PreparedStatementCacheAddCount" description="The number of statements added to the statement cache"/>
      <metric property="PreparedStatementCacheAccessCount" measurementType="trendsup" description="The number of times that the statement cache was accessed"/>
      <metric property="PreparedStatementCacheDeleteCount" measurementType="trendsup" description="The number of statements discarded from the cache"/>
      <metric property="PreparedStatementCacheHitCount" measurementType="trendsup" description="The number of times that statements from the cache were used"/>
      <metric property="ActiveCount" description="The active count"/>
      <metric property="AvailableCount" description="The available count" units="none"/>
      <metric property="AverageBlockingTime" units="milliseconds" description="The average time spent blocking for a connection"/>
      <metric property="AverageCreationTime" description="The average time spent creating a physical connection" units="milliseconds"/>
      <metric property="CreatedCount" description="The created count" measurementType="trendsup"/>
      <metric property="DestroyedCount" description="The destroyed count" measurementType="trendsup"/>
      <metric property="MaxCreationTime" description="The maximum time for creating a physical connection" units="milliseconds"/>
      <metric property="MaxUsedCount" description="The maximum number of connections used"/>
      <metric property="MaxWaitTime" units="milliseconds" description="The maximum wait time for a connection" displayType="summary"/>
      <metric property="TimedOut" description="The timed out count" measurementType="trendsup" displayType="summary"/>
      <metric property="TotalCreationTime" description="The total time spent creating physical connections" measurementType="trendsup" units="milliseconds"/>
      <metric property="TotalBlockingTime" description="The total blocking time" measurementType="trendsup" units="milliseconds"/>
      <metric property="connectionAvailable" displayName="Connection Available?" dataType="trait" displayType="summary" defaultInterval="300000"/>
      <metric property="min-pool-size" displayName="Min Pool Size setting" defaultOn="true" defaultInterval="14400000" description="The min pool size setting"/>
      <metric property="max-pool-size" displayName="Max Pool Size setting" defaultOn="true" defaultInterval="14400000" description="The max pool size setting"/>
'>

<!ENTITY datasourceEnableDisableOperations '
      <operation name="enable" description="Enables the data-source">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
      <operation name="disable" description="Disables the data-source">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
'>

<!ENTITY datasourceTestFlushOperations '
      <operation name="flush-all-connection-in-pool" description="Flushes the pool for all connections">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <operation name="flush-idle-connection-in-pool" description="Flushes the pool for idle connections">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <operation name="test-connection-in-pool" description="Tests if a connection can be obtained">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
'>

<!ENTITY datasourceReadWriteConfiguration '
      <resource-configuration>
        <c:simple-property name="connection-url" required="true" type="string" readOnly="true" description="The JDBC driver connection URL"/>
        <c:simple-property name="driver-name" required="true" type="string" description="Name of the (existing) JDBC driver to use" readOnly="true">
          <c:option-source target="resource" expression="type=^Deployment$" filter=".*\.jar"/>
        </c:simple-property>
        <c:simple-property name="driver-class" required="false" type="string" readOnly="true" description="The fully qualified name of the JDBC driver class"/>
        <c:simple-property name="jndi-name" required="true" type="string" readOnly="true" description="Specifies the JNDI name for the datasource"/>
        <c:simple-property name="driver" required="false" type="string" readOnly="true" description="Defines the JDBC driver the datasource should use with this format: driver-name>#major-version.minor-version where driver-name is the fully qualified name of the JDBC driver class"/>
        <c:simple-property name="user-name" type="string" readOnly="true" required="false" description="Specify the username used when creating a new connection."/>
        <c:simple-property name="password" type="password" readOnly="true" required="false" description="Specify the password used when creating a new connection."/>
        <c:simple-property name="new-connection-sql" type="string" readOnly="true" required="false" description="Specifies an SQL statement to execute whenever a connection is added to the connection pool."/>
        <c:simple-property name="url-delimiter" type="string" readOnly="true" description="Specifies the delimiter for URLs in connection-url for HA datasources" required="false"/>
        <c:simple-property name="url-selector-strategy-class-name" type="string" readOnly="true" description="A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy" required="false"/>
        <c:simple-property name="use-java-context" type="boolean" readOnly="true" required="false" description="Setting this to false will bind the DataSource into global JNDI;"/>
        <c:simple-property name="enabled" type="boolean" readOnly="true" required="false" description="Specifies if the datasource should be enabled"/>
        <c:simple-property name="max-pool-size" type="integer" readOnly="false" required="false" description="The max-pool-size element indicates the maximum number of connections for a pool. No more connections will be created in each sub-pool."/>
        <c:simple-property name="min-pool-size" type="integer" readOnly="false" required="false" description="The min-pool-size element indicates the minimum number of connections a pool should hold. These are not created until a Subject is known from a request for a connection."/>
        <c:simple-property name="pool-prefill" type="boolean" readOnly="false" required="false" description="Whether to attempt to prefill the connection pool. Changing this value require a server restart."/>
        <c:simple-property name="pool-use-strict-min" type="boolean" readOnly="false" required="false" description="Define if the min-pool-size should be considered a strictly."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptor application-policy/name attribute."/>
        <c:simple-property name="reauth-plugin-class-name" required="false" type="string" readOnly="true" description="re-authentication plugin implementation provided for specific purpose (i.e vendor)"/>
        <!--
                        <c:map-property name="reauth-plugin-properties" description="properties for reauthentication plugin passed to the implementation provided for specific purpose (i.e vendor)" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true" description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
          <c:property-options>
            <c:option value="FailingConnectionOnly"/>
            <c:option value="IdleConnections"/>
            <c:option value="EntirePool"/>
          </c:property-options>
        </c:simple-property>

        <c:simple-property name="prepared-statements-cacheSize" type="long" readOnly="true" required="false" description="The number of prepared statements per connection in an LRU cache"/>
        <c:simple-property name="share-prepared-statements" type="boolean" readOnly="true" required="false" description="Whether to share prepare statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement"/>
        <c:simple-property name="track-statements" type="string" readOnly="true" required="false" description="Whether to check for unclosed statements when a connection is returned to the pool and result sets are closed when a statement is closed/return to the prepared statement cache. valid values are: false - do not track statements and results true - track statements and result sets and warn when they are not closed nowarn - track statements but do no warn about them being unclosed"/>
        <c:simple-property name="allocation-retry" type="integer" readOnly="true" required="false" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception."/>
        <c:simple-property name="allocation-retry-wait-millis" type="long" readOnly="true" required="false" description="Indicates the time in milliseconds to wait between retrying to allocate a connection."/>
        <c:simple-property name="blocking-timeout-wait-millis" type="long" readOnly="false" required="false" description="The blocking-timeout-millis element indicates the maximum time in milliseconds to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for a permit for a connection, and will never throw an exception if creating a new connection takes an inordinately long time."/>
        <c:simple-property name="idle-timeout-minutes" type="long" readOnly="false" required="false" description="The idle-timeout-minutes elements indicates the maximum time in minutes a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is 1/2 the smallest idle-timeout-minutes of any pool. Changing this value require a server restart."/>
        <c:simple-property name="query-timeout" type="long" readOnly="true" required="false" description="Any configured query timeout in seconds The default is no timeout"/>
        <c:simple-property name="use-try-lock" type="long" readOnly="true" required="false" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
        <c:simple-property name="set-tx-query-timeout" type="boolean" readOnly="true" required="false" description="Whether to set the query timeout based on the time remaining until transaction timeout, any configured query timeout will be used if there is no transaction."/>
        <c:simple-property name="transaction-isolation" type="string" readOnly="true" required="false" description="Set java.sql.Connection transaction isolation level to use. The constants defined by transaction-isolation-values are the possible transaction isolation levels.">
          <c:property-options>
            <c:option value="TRANSACTION_READ_UNCOMMITTED"/>
            <c:option value="TRANSACTION_READ_COMMITTED"/>
            <c:option value="TRANSACTION_REPEATABLE_READ"/>
            <c:option value="TRANSACTION_SERIALIZABLE"/>
            <c:option value="TRANSACTION_NONE"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="check-valid-connection-sql" type="string" readOnly="true" required="false" description="Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is taken from pool for use."/>
        <c:simple-property name="exception-sorter-class-name" type="string" readOnly="true" required="false" description="An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate is an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred"/>
        <c:simple-property name="stale-connection-checker-class-name" type="string" readOnly="true" required="false" description="An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides a boolean isStaleConnection(SQLException e) method which if it it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException"/>
        <c:simple-property name="valid-connection-checker-class-name" type="string" readOnly="true" required="false" description="An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate is a connection is valid. An exception means the connection is destroyed. This overrides the check-valid-connection-sql when present."/>
        <c:simple-property name="background-validation-minutes" type="long" readOnly="false" required="false" description="The background-validation-minutes element specifies the amount of time, in minutes, that background validation will run. Changing this value require a server restart."/>
        <c:simple-property name="background-validation" type="boolean" readOnly="false" required="false" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value require a server restart."/>
        <c:simple-property name="use-fast-fail" type="boolean" readOnly="false" required="false" description="Whether fail a connection allocation on the first connection if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)"/>
        <c:simple-property name="validate-on-match" type="boolean" readOnly="true" required="false" description="The validate-on-match element indicates whether or not connection level validation should be done when a connection factory attempts to match a managed connection for a given set. This is typically exclusive to the use of background validation"/>
        <c:simple-property name="spy" type="boolean" readOnly="true" required="false" description="whatever spy or not the jdbc connection"/>
        <c:simple-property name="use-ccm" type="boolean" readOnly="true" required="false" description="Enable the use of a cached connection manager"/>
        <c:group name="children:connection-properties:pname+-" displayName="Connection Properties">
          <c:list-property name="*1" displayName="Connection Property" readOnly="false" required="false">
            <c:map-property name="*:pname" displayName="Name" readOnly="false">
              <c:simple-property name="pname" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value" />
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
'>

<!ENTITY datasourceReadOnlyConfiguration '
      <resource-configuration>
        <c:simple-property name="connection-url" required="true" type="string" readOnly="true" description="The JDBC driver connection URL"/>
        <c:simple-property name="driver-name" required="true" type="string" description="Name of the (existing) JDBC driver to use" readOnly="true">
          <c:option-source target="resource" expression="type=^Deployment$" filter=".*\.jar"/>
        </c:simple-property>
        <c:simple-property name="driver-class" required="false" type="string" readOnly="true" description="The fully qualified name of the JDBC driver class"/>
        <c:simple-property name="jndi-name" required="true" type="string" readOnly="true" description="Specifies the JNDI name for the datasource"/>
        <c:simple-property name="driver" required="false" type="string" readOnly="true" description="Defines the JDBC driver the datasource should use with this format: driver-name>#major-version.minor-version where driver-name is the fully qualified name of the JDBC driver class"/>
        <c:simple-property name="user-name" type="string" readOnly="true" required="false" description="Specify the username used when creating a new connection."/>
        <c:simple-property name="password" type="password" readOnly="true" required="false" description="Specify the password used when creating a new connection."/>
        <c:simple-property name="new-connection-sql" type="string" readOnly="true" required="false" description="Specifies an SQL statement to execute whenever a connection is added to the connection pool."/>
        <c:simple-property name="url-delimiter" type="string" readOnly="true" description="Specifies the delimiter for URLs in connection-url for HA datasources" required="false"/>
        <c:simple-property name="url-selector-strategy-class-name" type="string" readOnly="true" description="A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy" required="false"/>
        <c:simple-property name="use-java-context" type="boolean" readOnly="true" required="false" description="Setting this to false will bind the DataSource into global JNDI;"/>
        <c:simple-property name="enabled" type="boolean" readOnly="true" required="false" description="Specifies if the datasource should be enabled"/>
        <c:simple-property name="max-pool-size" type="integer" readOnly="true" required="false" description="The max-pool-size element indicates the maximum number of connections for a pool. No more connections will be created in each sub-pool."/>
        <c:simple-property name="min-pool-size" type="integer" readOnly="true" required="false" description="The min-pool-size element indicates the minimum number of connections a pool should hold. These are not created until a Subject is known from a request for a connection."/>
        <c:simple-property name="pool-prefill" type="boolean" readOnly="true" required="false" description="Whether to attempt to prefill the connection pool. Changing this value require a server restart."/>
        <c:simple-property name="pool-use-strict-min" type="boolean" readOnly="true" required="false" description="Define if the min-pool-size should be considered a strictly."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptor application-policy/name attribute."/>
        <c:simple-property name="reauth-plugin-class-name" required="false" type="string" readOnly="true" description="re-authentication plugin implementation provided for specific purpose (i.e vendor)"/>
        <!--
                        <c:map-property name="reauth-plugin-properties" description="properties for reauthentication plugin passed to the implementation provided for specific purpose (i.e vendor)" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true" description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
          <c:property-options>
            <c:option value="FailingConnectionOnly"/>
            <c:option value="IdleConnections"/>
            <c:option value="EntirePool"/>
          </c:property-options>
        </c:simple-property>

        <c:simple-property name="prepared-statements-cacheSize" type="long" readOnly="true" required="false" description="The number of prepared statements per connection in an LRU cache"/>
        <c:simple-property name="share-prepared-statements" type="boolean" readOnly="true" required="false" description="Whether to share prepare statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement"/>
        <c:simple-property name="track-statements" type="string" readOnly="true" required="false" description="Whether to check for unclosed statements when a connection is returned to the pool and result sets are closed when a statement is closed/return to the prepared statement cache. valid values are: false - do not track statements and results true - track statements and result sets and warn when they are not closed nowarn - track statements but do no warn about them being unclosed"/>
        <c:simple-property name="allocation-retry" type="integer" readOnly="true" required="false" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception."/>
        <c:simple-property name="allocation-retry-wait-millis" type="long" readOnly="true" required="false" description="Indicates the time in milliseconds to wait between retrying to allocate a connection."/>
        <c:simple-property name="blocking-timeout-wait-millis" type="long" readOnly="true" required="false" description="The blocking-timeout-millis element indicates the maximum time in milliseconds to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for a permit for a connection, and will never throw an exception if creating a new connection takes an inordinately long time."/>
        <c:simple-property name="idle-timeout-minutes" type="long" readOnly="true" required="false" description="The idle-timeout-minutes elements indicates the maximum time in minutes a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is 1/2 the smallest idle-timeout-minutes of any pool. Changing this value require a server restart."/>
        <c:simple-property name="query-timeout" type="long" readOnly="true" required="false" description="Any configured query timeout in seconds The default is no timeout"/>
        <c:simple-property name="use-try-lock" type="long" readOnly="true" required="false" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
        <c:simple-property name="set-tx-query-timeout" type="boolean" readOnly="true" required="false" description="Whether to set the query timeout based on the time remaining until transaction timeout, any configured query timeout will be used if there is no transaction."/>
        <c:simple-property name="transaction-isolation" type="string" readOnly="true" required="false" description="Set java.sql.Connection transaction isolation level to use. The constants defined by transaction-isolation-values are the possible transaction isolation levels.">
          <c:property-options>
            <c:option value="TRANSACTION_READ_UNCOMMITTED"/>
            <c:option value="TRANSACTION_READ_COMMITTED"/>
            <c:option value="TRANSACTION_REPEATABLE_READ"/>
            <c:option value="TRANSACTION_SERIALIZABLE"/>
            <c:option value="TRANSACTION_NONE"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="check-valid-connection-sql" type="string" readOnly="true" required="false" description="Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is taken from pool for use."/>
        <c:simple-property name="exception-sorter-class-name" type="string" readOnly="true" required="false" description="An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate is an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred"/>
        <c:simple-property name="stale-connection-checker-class-name" type="string" readOnly="true" required="false" description="An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides a boolean isStaleConnection(SQLException e) method which if it it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException"/>
        <c:simple-property name="valid-connection-checker-class-name" type="string" readOnly="true" required="false" description="An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate is a connection is valid. An exception means the connection is destroyed. This overrides the check-valid-connection-sql when present."/>
        <c:simple-property name="background-validation-minutes" type="long" readOnly="true" required="false" description="The background-validation-minutes element specifies the amount of time, in minutes, that background validation will run. Changing this value require a server restart."/>
        <c:simple-property name="background-validation" type="boolean" readOnly="true" required="false" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value require a server restart."/>
        <c:simple-property name="use-fast-fail" type="boolean" readOnly="true" required="false" description="Whether fail a connection allocation on the first connection if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)"/>
        <c:simple-property name="validate-on-match" type="boolean" readOnly="true" required="false" description="The validate-on-match element indicates whether or not connection level validation should be done when a connection factory attempts to match a managed connection for a given set. This is typically exclusive to the use of background validation"/>
        <c:simple-property name="spy" type="boolean" readOnly="true" required="false" description="whatever spy or not the jdbc connection"/>
        <c:simple-property name="use-ccm" type="boolean" readOnly="true" required="false" description="Enable the use of a cached connection manager"/>
        <c:group name="children:connection-properties:pname+-" displayName="Connection Properties">
          <c:list-property name="*1" displayName="Connection Property" readOnly="true" required="false">
            <c:map-property name="*:pname" displayName="Name" readOnly="true">
              <c:simple-property name="pname" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value" />
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
'>


<!ENTITY xaDatasourceReadWriteConfiguration '
      <resource-configuration>
        <c:simple-property name="xa-datasource-class" required="true" type="string" readOnly="true" description="The fully qualified name of the javax.sql.XADataSource implementation"/>
        <c:simple-property name="jndi-name" required="true" type="string" readOnly="true" description="Specifies the JNDI name for the datasource"/>
        <c:simple-property name="driver-name" required="true" type="string" readOnly="true" description="Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit">
          <c:option-source target="resource" expression="type=^Deployment$" filter=".*\.jar"/>
        </c:simple-property>
        <c:simple-property name="user-name" required="false" type="string" readOnly="true" description="Specify the username used when creating a new connection."/>
        <c:simple-property name="password" required="false" type="string" readOnly="true" description="Specify the password used when creating a new connection."/>
        <c:simple-property name="new-connection-sql" required="false" type="string" readOnly="true" description="Specifies an SQL statement to execute whenever a connection is added to the connection pool."/>
        <c:simple-property name="url-delimiter" required="false" type="string" readOnly="true" description="Specifies the delimiter for URLs in connection-url for HA datasources"/>
        <c:simple-property name="url-selector-strategy-class-name" required="false" type="string" readOnly="true" description="A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy"/>
        <c:simple-property name="use-java-context" required="false" type="boolean" readOnly="true" description="Setting this to false will bind the DataSource into global JNDI;"/>
        <c:simple-property name="enabled" required="false" type="boolean" readOnly="true" description="Specifies if the datasource should be enabled"/>
        <c:simple-property name="max-pool-size" required="false" type="integer" readOnly="false" description="The max-pool-size element indicates the maximum number of connections for a pool. No more connections will be created in each sub-pool."/>
        <c:simple-property name="min-pool-size" required="false" type="integer" readOnly="false" description="The min-pool-size element indicates the minimum number of connections a pool should hold. These are not created until a Subject is known from a request for a connection."/>
        <c:simple-property name="pool-prefill" required="false" type="boolean" readOnly="false" description="Whether to attempt to prefill the connection pool. Changing this value require a server restart."/>
        <c:simple-property name="pool-use-strict-min" required="false" type="boolean" readOnly="false" description="Define if the min-pool-size should be considered a strictly."/>
        <c:simple-property name="interleaving" required="false" type="boolean" readOnly="true" description="An element to enable interleaving for XA connection factories"/>
        <c:simple-property name="no-tx-separate-pool" required="false" type="boolean" readOnly="true" description="Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different context"/>
        <c:simple-property name="pad-xid" required="false" type="boolean" readOnly="true" description="Should the Xid be padded"/>
        <c:simple-property name="same-rm-override" required="false" type="boolean" readOnly="true" description="The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false"/>
        <c:simple-property name="wrap-xa-datasource" required="false" type="boolean" readOnly="true" description="Should the XAResource instances be wrapped in a org.jboss.tm.XAResourceWrapper instance"/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptor application-policy/name attribute."/>
        <c:simple-property name="recovery-plugin-class-name" required="false" type="string" readOnly="true" description="recovery plugin implementation provided for specific purpose (i.e vendor)"/>
        <c:simple-property name="reauth-plugin-class-name" required="false" type="string" readOnly="true" description="re-authentication plugin implementation provided for specific purpose (i.e vendor)"/>
        <!--
                        <c:map-property name="reauth-plugin-properties" description="properties for reauthentication plugin passed to the implementation provided for specific purpose (i.e vendor)" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true"
                           description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
          <c:property-options>
            <c:option value="FailingConnectionOnly"/>
            <c:option value="IdleConnections"/>
            <c:option value="EntirePool"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="prepared-statements-cacheSize" required="false" type="long" readOnly="true" description="The number of prepared statements per connection in an LRU cache"/>
        <c:simple-property name="share-prepared-statements" required="false" type="boolean" readOnly="true" description="Whether to share prepare statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement"/>
        <c:simple-property name="track-statements" required="false" type="string" readOnly="true" description="Whether to check for unclosed statements when a connection is returned to the pool and result sets are closed when a statement is closed/return to the prepared statement cache. valid values are: false - do not track statements and results true - track statements and result sets and warn when they are not closed nowarn - track statements but do no warn about them being unclosed"/>
        <c:simple-property name="allocation-retry" required="false" type="integer" readOnly="true" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception."/>
        <c:simple-property name="allocation-retry-wait-millis" required="false" type="long" readOnly="true" description="he allocation retry wait millis element indicates the time in milliseconds to wait between retrying to allocate a connection."/>
        <c:simple-property name="blocking-timeout-wait-millis" required="false" type="long" readOnly="false" description="The blocking-timeout-millis element indicates the maximum time in milliseconds to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for a permit for a connection, and will never throw an exception if creating a new connection takes an inordinately long time."/>
        <c:simple-property name="idle-timeout-minutes" required="false" type="long" readOnly="false" description="The idle-timeout-minutes elements indicates the maximum time in minutes a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is 1/2 the smallest idle-timeout-minutes of any pool. Changing this value require a server restart."/>
        <c:simple-property name="query-timeout" required="false" type="long" readOnly="true" description="Any configured query timeout in seconds The default is no timeout"/>
        <c:simple-property name="use-try-lock" required="false" type="long" readOnly="true" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
        <c:simple-property name="set-tx-query-timeout" required="false" type="boolean" readOnly="true" description="Whether to set the query timeout based on the time remaining until transaction timeout, any configured query timeout will be used if there is no transaction."/>
        <c:simple-property name="transaction-isolation" required="false" type="string" readOnly="true" description="Set java.sql.Connection transaction isolation level to use. The constants defined by transaction-isolation-values are the possible transaction isolation levels.">
          <c:property-options>
            <c:option value="TRANSACTION_READ_UNCOMMITTED"/>
            <c:option value="TRANSACTION_READ_COMMITTED"/>
            <c:option value="TRANSACTION_REPEATABLE_READ"/>
            <c:option value="TRANSACTION_SERIALIZABLE"/>
            <c:option value="TRANSACTION_NONE"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="check-valid-connection-sql" required="false" type="string" readOnly="true" description="Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is taken from pool for use."/>
        <c:simple-property name="exception-sorter-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate is an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred"/>
        <!--
                        <c:map-property name="exception-sorter-properties" description="exceptionsorter properties" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="stale-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides a boolean isStaleConnection(SQLException e) method which if it it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException"/>
        <!--
                        <c:map-property name="stale-connection-checker-properties" description="staleconnectionchecker properties" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="valid-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate is a connection is valid. An exception means the connection is destroyed. This overrides the check-valid-connection-sql when present."/>
        <!--
                        <c:map-property name="valid-connection-checker-properties" description="validconnectionchecker properties" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="background-validation-minutes" required="false" type="long" readOnly="false" description="The background-validation-minutes element specifies the amount of time, in minutes, that background validation will run. Changing this value require a server restart."/>
        <c:simple-property name="background-validation" required="false" type="boolean" readOnly="false" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value require a server restart."/>
        <c:simple-property name="use-fast-fail" required="false" type="boolean" readOnly="false" description="Whether fail a connection allocation on the first connection if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)"/>
        <c:simple-property name="validate-on-match" required="false" type="boolean" readOnly="true" description="The validate-on-match element indicates whether or not connection level validation should be done when a connection factory attempts to match a managed connection for a given set. This is typically exclusive to the use of background validation"/>
        <c:simple-property name="xa-resource-timeout" required="false" type="integer" readOnly="true" description="Passed to XAResource.setTransactionTimeout() Default is zero which does not invoke the setter. In seconds"/>
        <c:simple-property name="spy" required="false" type="boolean" readOnly="true" description="whatever spy or not the jdbc connection"/>
        <c:simple-property name="use-ccm" required="false" type="boolean" readOnly="true" description="Enable the use of a cached connection manager"/>
        <c:simple-property name="recovery-username" required="false" type="string" readOnly="true" description="username used to try connection recovery"/>
        <c:simple-property name="recovery-password" required="false" type="string" readOnly="true" description="password used to try connection recovery"/>
        <c:simple-property name="recovery-security-domain" required="false" type="string" readOnly="true" description="security-domain used to try connection recovery"/>
        <!--
                        <c:map-property name="recovery-plugin-properties" description="recovery plugin properties passed to the implementation provided for specific purpose (i.e vendor)" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="no-recovery" required="false" type="boolean" readOnly="true" description="if true no recovery are tried for this connection pool"/>

        <c:group name="children:xa-datasource-properties:key+-" displayName="XA Datasource Properties">
          <c:list-property name="*2" displayName="Properties" required="false" readOnly="false">
            <c:map-property name="*:key" displayName="Name" readOnly="false">
              <c:simple-property name="key" displayName="Property-Name" readOnly="false"/>
              <c:simple-property name="value" displayName="Value" readOnly="false"/>
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
'>

<!ENTITY xaDatasourceReadOnlyConfiguration '
      <resource-configuration>
        <c:simple-property name="xa-datasource-class" required="true" type="string" readOnly="true" description="The fully qualified name of the javax.sql.XADataSource implementation"/>
        <c:simple-property name="jndi-name" required="true" type="string" readOnly="true" description="Specifies the JNDI name for the datasource"/>
        <c:simple-property name="driver-name" required="true" type="string" readOnly="true" description="Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit">
          <c:option-source target="resource" expression="type=^Deployment$" filter=".*\.jar"/>
        </c:simple-property>
        <c:simple-property name="user-name" required="false" type="string" readOnly="true" description="Specify the username used when creating a new connection."/>
        <c:simple-property name="password" required="false" type="string" readOnly="true" description="Specify the password used when creating a new connection."/>
        <c:simple-property name="new-connection-sql" required="false" type="string" readOnly="true" description="Specifies an SQL statement to execute whenever a connection is added to the connection pool."/>
        <c:simple-property name="url-delimiter" required="false" type="string" readOnly="true" description="Specifies the delimiter for URLs in connection-url for HA datasources"/>
        <c:simple-property name="url-selector-strategy-class-name" required="false" type="string" readOnly="true" description="A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy"/>
        <c:simple-property name="use-java-context" required="false" type="boolean" readOnly="true" description="Setting this to false will bind the DataSource into global JNDI;"/>
        <c:simple-property name="enabled" required="false" type="boolean" readOnly="true" description="Specifies if the datasource should be enabled"/>
        <c:simple-property name="max-pool-size" required="false" type="integer" readOnly="true" description="The max-pool-size element indicates the maximum number of connections for a pool. No more connections will be created in each sub-pool."/>
        <c:simple-property name="min-pool-size" required="false" type="integer" readOnly="true" description="The min-pool-size element indicates the minimum number of connections a pool should hold. These are not created until a Subject is known from a request for a connection."/>
        <c:simple-property name="pool-prefill" required="false" type="boolean" readOnly="true" description="Whether to attempt to prefill the connection pool. Changing this value require a server restart."/>
        <c:simple-property name="pool-use-strict-min" required="false" type="boolean" readOnly="true" description="Define if the min-pool-size should be considered a strictly."/>
        <c:simple-property name="interleaving" required="false" type="boolean" readOnly="true" description="An element to enable interleaving for XA connection factories"/>
        <c:simple-property name="no-tx-separate-pool" required="false" type="boolean" readOnly="true" description="Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different context"/>
        <c:simple-property name="pad-xid" required="false" type="boolean" readOnly="true" description="Should the Xid be padded"/>
        <c:simple-property name="same-rm-override" required="false" type="boolean" readOnly="true" description="The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false"/>
        <c:simple-property name="wrap-xa-datasource" required="false" type="boolean" readOnly="true" description="Should the XAResource instances be wrapped in a org.jboss.tm.XAResourceWrapper instance"/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="Indicates Subject (from security domain) are used to distinguish connections in the pool. The content of the security-domain is the name of the JAAS security manager that will handleauthentication. This name correlates to the JAAS login-config.xml descriptor application-policy/name attribute."/>
        <c:simple-property name="recovery-plugin-class-name" required="false" type="string" readOnly="true" description="recovery plugin implementation provided for specific purpose (i.e vendor)"/>
        <c:simple-property name="reauth-plugin-class-name" required="false" type="string" readOnly="true" description="re-authentication plugin implementation provided for specific purpose (i.e vendor)"/>
        <!--
                        <c:map-property name="reauth-plugin-properties" description="properties for reauthentication plugin passed to the implementation provided for specific purpose (i.e vendor)" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true"
                           description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
          <c:property-options>
            <c:option value="FailingConnectionOnly"/>
            <c:option value="IdleConnections"/>
            <c:option value="EntirePool"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="prepared-statements-cacheSize" required="false" type="long" readOnly="true" description="The number of prepared statements per connection in an LRU cache"/>
        <c:simple-property name="share-prepared-statements" required="false" type="boolean" readOnly="true" description="Whether to share prepare statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement"/>
        <c:simple-property name="track-statements" required="false" type="string" readOnly="true" description="Whether to check for unclosed statements when a connection is returned to the pool and result sets are closed when a statement is closed/return to the prepared statement cache. valid values are: false - do not track statements and results true - track statements and result sets and warn when they are not closed nowarn - track statements but do no warn about them being unclosed"/>
        <c:simple-property name="allocation-retry" required="false" type="integer" readOnly="true" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception."/>
        <c:simple-property name="allocation-retry-wait-millis" required="false" type="long" readOnly="true" description="he allocation retry wait millis element indicates the time in milliseconds to wait between retrying to allocate a connection."/>
        <c:simple-property name="blocking-timeout-wait-millis" required="false" type="long" readOnly="true" description="The blocking-timeout-millis element indicates the maximum time in milliseconds to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for a permit for a connection, and will never throw an exception if creating a new connection takes an inordinately long time."/>
        <c:simple-property name="idle-timeout-minutes" required="false" type="long" readOnly="true" description="The idle-timeout-minutes elements indicates the maximum time in minutes a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is 1/2 the smallest idle-timeout-minutes of any pool. Changing this value require a server restart."/>
        <c:simple-property name="query-timeout" required="false" type="long" readOnly="true" description="Any configured query timeout in seconds The default is no timeout"/>
        <c:simple-property name="use-try-lock" required="false" type="long" readOnly="true" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
        <c:simple-property name="set-tx-query-timeout" required="false" type="boolean" readOnly="true" description="Whether to set the query timeout based on the time remaining until transaction timeout, any configured query timeout will be used if there is no transaction."/>
        <c:simple-property name="transaction-isolation" required="false" type="string" readOnly="true" description="Set java.sql.Connection transaction isolation level to use. The constants defined by transaction-isolation-values are the possible transaction isolation levels.">
          <c:property-options>
            <c:option value="TRANSACTION_READ_UNCOMMITTED"/>
            <c:option value="TRANSACTION_READ_COMMITTED"/>
            <c:option value="TRANSACTION_REPEATABLE_READ"/>
            <c:option value="TRANSACTION_SERIALIZABLE"/>
            <c:option value="TRANSACTION_NONE"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="check-valid-connection-sql" required="false" type="string" readOnly="true" description="Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is taken from pool for use."/>
        <c:simple-property name="exception-sorter-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides a boolean isExceptionFatal(SQLException e) method to validate is an exception should be broadcast to all javax.resource.spi.ConnectionEventListener as a connectionErrorOccurred"/>
        <!--
                        <c:map-property name="exception-sorter-properties" description="exceptionsorter properties" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="stale-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides a boolean isStaleConnection(SQLException e) method which if it it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException"/>
        <!--
                        <c:map-property name="stale-connection-checker-properties" description="staleconnectionchecker properties" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="valid-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides a SQLException isValidConnection(Connection e) method to validate is a connection is valid. An exception means the connection is destroyed. This overrides the check-valid-connection-sql when present."/>
        <!--
                        <c:map-property name="valid-connection-checker-properties" description="validconnectionchecker properties" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="background-validation-minutes" required="false" type="long" readOnly="true" description="The background-validation-minutes element specifies the amount of time, in minutes, that background validation will run. Changing this value require a server restart."/>
        <c:simple-property name="background-validation" required="false" type="boolean" readOnly="true" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value require a server restart."/>
        <c:simple-property name="use-fast-fail" required="false" type="boolean" readOnly="true" description="Whether fail a connection allocation on the first connection if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false)"/>
        <c:simple-property name="validate-on-match" required="false" type="boolean" readOnly="true" description="The validate-on-match element indicates whether or not connection level validation should be done when a connection factory attempts to match a managed connection for a given set. This is typically exclusive to the use of background validation"/>
        <c:simple-property name="xa-resource-timeout" required="false" type="integer" readOnly="true" description="Passed to XAResource.setTransactionTimeout() Default is zero which does not invoke the setter. In seconds"/>
        <c:simple-property name="spy" required="false" type="boolean" readOnly="true" description="whatever spy or not the jdbc connection"/>
        <c:simple-property name="use-ccm" required="false" type="boolean" readOnly="true" description="Enable the use of a cached connection manager"/>
        <c:simple-property name="recovery-username" required="false" type="string" readOnly="true" description="username used to try connection recovery"/>
        <c:simple-property name="recovery-password" required="false" type="string" readOnly="true" description="password used to try connection recovery"/>
        <c:simple-property name="recovery-security-domain" required="false" type="string" readOnly="true" description="security-domain used to try connection recovery"/>
        <!--
                        <c:map-property name="recovery-plugin-properties" description="recovery plugin properties passed to the implementation provided for specific purpose (i.e vendor)" >
                            read-only
                            configuration
                        </c:map-property>
        -->
        <c:simple-property name="no-recovery" required="false" type="boolean" readOnly="true" description="if true no recovery are tried for this connection pool"/>

        <c:group name="children:xa-datasource-properties:key+-" displayName="XA Datasource Properties">
          <c:list-property name="*2" displayName="Properties" required="false" readOnly="true">
            <c:map-property name="*:key" displayName="Name" readOnly="true">
              <c:simple-property name="key" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value" readOnly="true"/>
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
'>

]>
<plugin name="&pluginName;"
        displayName="JBoss Application Server 7.x"
        description="provides monitoring and management of JBossAS 7.x"
        package="org.rhq.modules.plugins.jbossas7"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration"
    >


  <!-- TODO I think we should introduce an abstract AS7 plugin that contains some base functionality and then
  ~~      additional 'Personalities' for the kinds of servers (PM, SM, Standalone AS, Managed AS)
  -->

  <server name="JBossAS7 Host Controller"
          discovery="HostControllerDiscovery"
          class="HostControllerComponent"
          description="Domain controller (delegate) for this host"
      >

    <plugin-configuration>
      <c:simple-property name="hostname" default="localhost" required="true" description="Host name of the domain API"/>
      <c:simple-property name="port" default="9990" type="integer" required="true" description="Port of the domain API"/>
      <c:simple-property name="user" type="string" description="Management user for a secured Host controller" required="false"/>
      <c:simple-property name="password" type="password" description="Password for the management user" required="false"/>
      <c:simple-property name="homeDir" type="file" description="Root directory of the server installation" displayName="Home Directory" readOnly="true" required="false"/>
      <c:simple-property name="baseDir" type="file" description="Base directory for server content" displayName="Base Directory" readOnly="true" required="false"/>
      <c:simple-property name="configDir" type="file" description="Base configuration directory" displayName="Configuration Directory" readOnly="true" required="false"/>
      <c:simple-property name="logDir" type="file" description="the directory where log files will be written for this host controller" displayName="Log Directory" readOnly="true" required="false"/>
      <c:simple-property name="domainHost" type="string" readOnly="true" required="false" description="Host name within the AS7 domain"/>
      <c:simple-property name="productType" type="string" readOnly="true" required="false" description="Server product type (e.g. AS or EAP)"/>

      &startScriptPluginConfigGroup;
      &logSources;
    </plugin-configuration>

    <process-scan name="HostController" query="process|basename|match=^java.*,arg|org.jboss.as.host-controller|match=.*"/>


    <operation name="start" description="Start this Host/Domain Controller with all its enabled managed servers" displayName="Start this host controller">
      <results>
        <c:simple-property name="operationResult" description="Outcome of the start operation"/>
      </results>
    </operation>
    <operation name="shutdown" description="Stop this Host/Domain Controller with all its managed servers"
               displayName="Shut down this host controller">
      <results>
        <c:simple-property name="operationResult" description="Outcome of the stop operation"/>
      </results>
    </operation>
    <operation name="restart" description="Restart this Host/Domain Controller with all its running managed servers"
               displayName="Restart this host controller">
      <results>
        <c:simple-property name="operationResult" description="Outcome of the stop operation"/>
      </results>
    </operation>
    <operation name="installRhqUser" description="Installs a user in the server for management"
               displayName="Install a management user" timeout="60">
      <parameters>
        <c:simple-property name="user" displayName="Username" description="Name of the management user" default="rhqadmin"/>
        <c:simple-property name="password" displayName="Password" description="Password of this management user" default="rhqadmin" type="password"/>
      </parameters>
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>


    <metric property="_internal:mgmtRequests" category="performance" dataType="measurement" defaultInterval="120000"
            displayType="summary" measurementType="trendsup" description="Number of requests sent to the controller"
            displayName="Number of management requests"/>
    <metric property="_internal:requestTime" category="performance" dataType="measurement" defaultInterval="120000"
            displayType="summary" measurementType="trendsup" description="Total time for requests" units="milliseconds"
            displayName="Time used for management requests"/>
    <metric property="_internal:maxTime" category="performance" dataType="measurement" defaultInterval="120000"
            displayType="summary" measurementType="dynamic" description="Max time for a request since last metric get" units="milliseconds"
            displayName="Maximum request time"/>

    &serverKindMetrics;
    <metric property="startTime" dataType="trait" displayName="Start time of the server" defaultOn="true"/>

    <metric property="domain-config-file" displayName="Domain Config File" dataType="trait" displayType="summary" defaultInterval="3600000"
            description="The name of the domain configuration file this host controller is using"/>
    <metric property="host-config-file" displayName="Host Config File" dataType="trait" displayType="summary" defaultInterval="3600000"
            description="The name of the host configuration file this host controller is using"/>

    <event name="logEntry" description="an entry in a log file"/>

    <resource-configuration>
      <!--
                  <c:group name="attribute:schema-locations" displayName="Schema locations">

                      <c:list-property name="schema-locations" displayName="Schema locations" readOnly="true" required="false">
                          <c:map-property name="*">
                              <c:simple-property name="*" readOnly="true" displayName="Schema name"/>
                          </c:map-property>
                      </c:list-property>
                  </c:group>
      -->
      <c:group name="children:system-property:name+" displayName="System-properties">
        <c:list-property name="*2" displayName="Properties" required="false" readOnly="false">
          <c:map-property name="*:name" displayName="Name" readOnly="true">
            <c:simple-property name="name" displayName="Property-Name" readOnly="true"/>
            <c:simple-property name="value" displayName="Value"/>
            <c:simple-property name="boot-time" defaultValue="true" default="true" type="boolean" required="false"
                               description="If true the system property is passed on the command-line to the started server jvm. If false, it will be pushed to the server as part of the startup sequence.">
              <c:property-options>
                <c:option value="true"/>
                <c:option value="false"/>
              </c:property-options>
            </c:simple-property>
          </c:map-property>
        </c:list-property>
      </c:group>

      <c:group name="children:path:name+" displayName="Path">
        <c:list-property name="*3" displayName="Path" required="false"
                         description="The standard paths provided by the system include: jboss.home - the root directory of the JBoss AS distribution; user.home - user's home directory; user.dir - user's current working directory; java.home - java installation directory; jboss.server.base.dir - root directory for an individual server instance; jboss.server.data.dir - directory the server will use for persistent data file storage; jboss.server.log.dir - directory the server will use for log file storage; jboss.server.tmp.dir - directory the server will use for temporary file storage; jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances">
          <c:map-property name="*" displayName="Entry">
            <c:simple-property name="name" required="true" type="string" readOnly="true"
                               description="The name of the path. Cannot be one of the standard fixed paths provided by the system"/>
            <c:simple-property name="path" required="true" type="string" readOnly="false"
                               description="The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path."/>
            <c:simple-property name="relative-to" required="false" type="string" readOnly="false"
                               description="The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute."/>
            <c:simple-property name="read-only" description="Is this property read-only" default="false" readOnly="true" defaultValue="false" type="boolean"/>
          </c:map-property>
        </c:list-property>
      </c:group>

      <c:group name="children:extension:module" displayName="Installed extensions" hiddenByDefault="true">
        <c:list-property name="*" displayName="Installed extensions" readOnly="true" required="false">
          <c:map-property name="*" displayName="Name" readOnly="true">
            <c:simple-property name="module" displayName="Module name" readOnly="true"/>
          </c:map-property>
        </c:list-property>
      </c:group>
    </resource-configuration>

    <drift-definition
          name="Template-Base Files"
          description="Monitor base application server files for drift. It defines monitoring for some standard sub-directories of the HOME directory.  Note, it is not recommeded to monitor all files for an application server. There are many files, and many temp files.">
       <basedir>
          <value-context>pluginConfiguration</value-context>
          <value-name>homeDir</value-name>
       </basedir>
       <includes>
          <include path="bin" />
          <include path="appclient" />
          <include path="welcome-content"/>
       </includes>
    </drift-definition>

    <server name="Managed Server"
            discovery="ManagedASDiscovery"
            class="ManagedASComponent"
            createDeletePolicy="both"
        >
      <plugin-configuration>
        <c:simple-property name="path" readOnly="true"/>

        &logSources;
      </plugin-configuration>

      <operation name="start" description="Start this server instance." displayName="Start">
        <parameters>
          <c:simple-property name="blocking" description="Whether the operation should block and wait until the server is started." default="false" type="boolean"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
      <operation name="stop" description="Stop this server instance." displayName="Stop">
        <parameters>
          <c:simple-property name="blocking" description="Whether the operation should block and wait until the server is stopped." default="false" type="boolean"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
      <operation name="restart" description="Restart this server instance." displayName="Restart">
        <parameters>
          <c:simple-property name="blocking" description="Whether the operation should block and wait until the server is restarted." default="false" type="boolean"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      &serverKindMetrics;
      <metric property="status" dataType="trait" displayName="Server state" description="Detailed server state"
              displayType="summary"/>
      <metric property="startTime" dataType="trait" displayName="Start time of the server" defaultOn="true"/>

      <event name="logEntry" description="an entry in a log file"/>

      <resource-configuration>
        <!-- IF you add properties here, you also need to update org.rhq.modules.plugins.jbossas7.ManagedASComponent.loadResourceConfiguration -->
        <c:simple-property name="hostname" displayName="Name of the host to put the server on" required="true" readOnly="true">
          <c:option-source target="resource" expression="type=^Host$ plugin=&pluginName;"/>
        </c:simple-property>
        <c:simple-property name="group" readOnly="true" displayName="Server Group" description="Server Group this instance belongs to.">
          <c:option-source target="resource" expression="type=ServerGroup"/>
        </c:simple-property>
        <c:simple-property name="socket-binding-group" readOnly="true" displayName="Socket binding group" description="Socket bindings to use" required="true" default="standard-sockets">
          <c:option-source target="resource" expression="type=SocketBindingGroup"/>
        </c:simple-property>
        <c:simple-property name="socket-binding-port-offset" readOnly="true" displayName="Port Offset" type="integer" default="0" description="Offset to the base ports"/>

        <c:simple-property name="auto-start" displayName="Autostart" default="false" type="boolean"/>

<!--
        <c:simple-property name="jmv" displayName="JVM" defaultValue="default" type="string" description="JVM definition to use with this server">
          <c:option-source target="resource" expression="type='JVM Definition' plugin=&pluginName;"/>
        </c:simple-property>
-->

        <c:group name="children:system-property:name+" displayName="System-properties">
          <c:list-property name="*2" displayName="Properties" required="false" readOnly="false">
            <c:map-property name="*:name" displayName="Name" readOnly="true">
              <c:simple-property name="name" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value"/>
              <c:simple-property name="boot-time" defaultValue="true" default="true" required="false"
                                 description="If true the system property is passed on the command-line to the started server jvm. If false, it will be pushed to the server as part of the startup sequence.">
                <c:property-options>
                  <c:option value="true"/>
                  <c:option value="false"/>
                </c:property-options>
              </c:simple-property>
            </c:map-property>
          </c:list-property>
        </c:group>

      </resource-configuration>

      <service name="ManagedServerDeployment"
               class="DeploymentComponent"
               discovery="SubsystemDiscovery"
               createDeletePolicy="neither"
               description="Deployed package on a managed server. Go to server groups to manipulate it"
          >
        <plugin-configuration>
          <c:simple-property name="path" default="deployment" readOnly="true"/>
          <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
        </plugin-configuration>

        <metric property="status" dataType="trait"
                description="The current runtime status of a deployment. Possible status modes are OK, FAILED, and STOPPED. FAILED indicates a dependency is missing or a service could not start. STOPPED indicates that the deployment was manually stopped."/>

        <resource-configuration>
          <c:simple-property name="name" readOnly="true"/>
          <c:simple-property name="runtime-name" readOnly="true"/>
          <c:simple-property name="content" readOnly="true"/>
        </resource-configuration>
      </service>

    </server> <!-- managed server -->

    <service name="Profile"
             description="A profile in a domain. Profiles are assigned to server groups."
             discovery="SubsystemDiscovery"
             class="BaseComponent">

      <plugin-configuration>
        <c:simple-property name="path" default="profile" readOnly="true"/>
      </plugin-configuration>

      <!-- Necessary to duplicate the ModCluster component for Standalone and Domain because supported operations
      list is different. Update similar Standalone service if changes are necessary. -->
      <service name="ModCluster Domain Service"
               class="ModClusterComponent"
               discovery="ModClusterDiscoveryComponent"
               description="Mod_cluster support"
               singleton="true"
          >

        <runs-inside>
          <parent-resource-type name="Profile" plugin="&pluginName;"/>
        </runs-inside>

        <plugin-configuration>
          <c:simple-property name="path" default="subsystem=modcluster" readOnly="true"/>
        </plugin-configuration>

        &modclusterSharedOpsConfig;
      </service>

    </service>

    <service name="ServerGroup"
             description="A server group on this domain"
             discovery="SubsystemDiscovery"
             class="ServerGroupComponent"
             createDeletePolicy="both"
        >

      <plugin-configuration>
        <c:simple-property name="path" default="server-group" readOnly="true"/>
      </plugin-configuration>

      <operation name="start-servers" description="Starts all configured servers belonging to the server group in the domain that are not currently running.">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
      <operation name="restart-servers" description="Restarts all servers belonging to the server group currently running in the domain.">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>
      <operation name="stop-servers" description="Stops all servers belonging to the server group currently running in the domain.">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <resource-configuration>
        <c:simple-property name="profile" description="The profile name" required="true">
          <c:option-source target="resource" expression="type=^Profile$ plugin=&pluginName;"/>
        </c:simple-property>
        <c:simple-property name="socket-binding-group" readOnly="false" required="true">
          <c:option-source target="resource" expression="type=SocketBindingGroup"/>
        </c:simple-property>
        <c:simple-property name="socket-binding-port-offset" required="false" defaultValue="0" type="integer"
                           description="The default offset to be added to the port values given by the socket binding group."/>


        <c:group name="children:system-property:name+" displayName="System-properties">
          <c:list-property name="*2" displayName="Properties" required="false" readOnly="false">
            <c:map-property name="*:name" displayName="Name" readOnly="true">
              <c:simple-property name="name" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value"/>
              <c:simple-property name="boot-time" defaultValue="true" default="true" type="boolean" required="false"
                                 description="If true the system property is passed on the command-line to the started server jvm. If false, it will be pushed to the server as part of the startup sequence.">
                <c:property-options>
                  <c:option value="true"/>
                  <c:option value="false"/>
                </c:property-options>
              </c:simple-property>
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
    </service> <!-- server group -->

    <service name="Host"
             description="A host involved in this domain"
             discovery="SubsystemDiscovery"
             class="HostComponent"
        >
      <plugin-configuration>
        <c:simple-property name="path" default="host" readOnly="true"/>
      </plugin-configuration>

      <metric property="host-state" dataType="trait" displayName="Host state" description="Detailed host state"
              displayType="summary"/>
      <metric property="startTime" dataType="trait" displayName="Start time of the server" defaultOn="true"/>


      <resource-configuration>
        <c:group name="children:system-property:name+" displayName="System-properties">
          <c:list-property name="*2" displayName="Properties" required="false" readOnly="false">
            <c:map-property name="*:name" displayName="Name" readOnly="true">
              <c:simple-property name="name" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value"/>
              <c:simple-property name="boot-time" defaultValue="true" default="true" type="boolean" required="false"
                                 description="If true the system property is passed on the command-line to the started server jvm. If false, it will be pushed to the server as part of the startup sequence.">
                <c:property-options>
                  <c:option value="true"/>
                  <c:option value="false"/>
                </c:property-options>
              </c:simple-property>
            </c:map-property>
          </c:list-property>
        </c:group>
        <c:group name="children:path:name+" displayName="Path">
          <c:list-property name="*3" displayName="Path" required="false"
                           description="The standard paths provided by the system include: jboss.home - the root directory of the JBoss AS distribution; user.home - user's home directory; user.dir - user's current working directory; java.home - java installation directory; jboss.server.base.dir - root directory for an individual server instance; jboss.server.data.dir - directory the server will use for persistent data file storage; jboss.server.log.dir - directory the server will use for log file storage; jboss.server.tmp.dir - directory the server will use for temporary file storage; jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances">
            <c:map-property name="*" displayName="Entry">
              <c:simple-property name="name" required="true" type="string" readOnly="true"
                                 description="The name of the path. Cannot be one of the standard fixed paths provided by the system"/>
              <c:simple-property name="path" required="true" type="string" readOnly="false"
                                 description="The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path."/>
              <c:simple-property name="relative-to" required="false" type="string" readOnly="false"
                                 description="The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute."/>
              <c:simple-property name="read-only" description="Is this property read-only" default="false" readOnly="true" defaultValue="false" type="boolean"/>
            </c:map-property>
          </c:list-property>
        </c:group>

      </resource-configuration>
    </service> <!-- host -->

    <service name="DomainDeployment"
             class="DomainDeploymentComponent"
             discovery="SubsystemDiscovery"
             createDeletePolicy="both"
             creationDataType="content">
      <plugin-configuration>
        <c:simple-property name="path" default="deployment" readOnly="true"/>
      </plugin-configuration>

      <operation name="promote" displayName="Deploy to Server-Group" description="Deploy this deployment to a server group">
        <parameters>
          <c:simple-property name="server-group" required="true" description="Server group to deploy to" type="string">
            <c:property-options>
              <c:option value="__all" name="All"/>
            </c:property-options>
            <c:option-source target="resource" expression="type=ServerGroup"/>
          </c:simple-property>
          <c:simple-property name="enabled" required="true" default="true" description="Should the deployment be enabled on the server group?" type="boolean"/>
          <c:simple-property name="runtime-name" required="false" displayName="Runtime name"
                             description="The name under which the deployment should be known in the runtime (managed servers on the selected server group). Defaults to the deployment name."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" description="Outcome of the deploy to server group operation"/>
        </results>
      </operation>

      <content name="file" category="deployable" isCreationType="true" description="Deployments on this domain">
        <configuration>
          <c:group name="deployment" displayName="Deployment Options">
            <c:simple-property name="runtimeName" required="false"/>
          </c:group>
        </configuration>
      </content>

      <resource-configuration>
        <c:simple-property name="name" readOnly="true"/>
        <c:simple-property name="runtime-name" readOnly="true"/>
        <c:simple-property name="content" readOnly="true"/>
      </resource-configuration>
    </service>

  </server> <!-- host controller -->


  <server name="JBossAS7 Standalone Server"
          discovery="StandaloneASDiscovery"
          class="StandaloneASComponent"
          description="Standalone AS7 server"
          supportsManualAdd="true"
      >

    <plugin-configuration>
      <c:simple-property name="hostname" default="localhost" required="true"/>
      <c:simple-property name="port" default="9990" type="integer" required="true"/>
      <c:simple-property name="user" type="string" description="Management user for a secured AS" required="false"/>
      <c:simple-property name="password" type="password" description="Password for the management user" required="false"/>
      <c:simple-property name="homeDir" type="file" description="Root directory of the server installation" displayName="Home Directory" readOnly="true" required="false"/>
      <c:simple-property name="baseDir" type="file" description="Base directory for server content" displayName="Base Directory" readOnly="true" required="false"/>
      <c:simple-property name="configDir" type="file" description="Base configuration directory" displayName="Configuration Directory" readOnly="true" required="false"/>
      <c:simple-property name="logDir" type="file" description="the directory where log files will be written for this server" displayName="Log Directory" readOnly="true" required="false"/>
      <c:simple-property name="deployDir" type="file" description="Deploy directory for standalone servers" displayName="Deployment directory" readOnly="true" required="false"/>
      <c:simple-property name="productType" type="string" readOnly="true" required="false" description="Server product type (e.g. AS or EAP)"/>

      &startScriptPluginConfigGroup;
      &logSources;
    </plugin-configuration>

    <process-scan name="StandaloneAS" query="process|basename|match=^java.*,arg|org.jboss.as.standalone|match=.*"/>


    <operation name="reload" description="Make the server re-load the (changed) configuration. To load a different startup config use 'restart'" displayName="Reload">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>
    <operation name="start" description="Start the server by invoking its start script">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>
    <operation name="restart" description="Restart the server by shutting it down and invoking its start script">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>
    <operation name="shutdown" description="Shut down the server." displayName="Shutdown">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>
    <operation name="installRhqUser" description="Installs a user in the server for management" displayName="Install RHQ user">
      <parameters>
        <c:simple-property name="user" displayName="Username" description="Name of the management user" default="rhqadmin"/>
        <c:simple-property name="password" displayName="Password" description="Password of this management user" default="rhqadmin" type="password"/>
      </parameters>
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>


    <metric property="_internal:mgmtRequests" category="performance" dataType="measurement" defaultInterval="120000"
            displayType="summary" measurementType="trendsup" description="Number of requests sent to the controller"
            displayName="Number of management requests"/>
    <metric property="_internal:requestTime" category="performance" dataType="measurement" defaultInterval="120000"
            displayType="summary" measurementType="trendsup" description="Total time for requests" units="milliseconds"
            displayName="Time used for management requests"/>
    <metric property="_internal:maxTime" category="performance" dataType="measurement" defaultInterval="120000"
            displayType="summary" measurementType="dynamic" description="Max time for a request since last metric get" units="milliseconds"
            displayName="Maximum request time"/>

    <metric property="server-state" dataType="trait" displayName="Server State" description="Detailed server state"
            displayType="summary"/>
    &serverKindMetrics;
    <metric property="startTime" dataType="trait" displayName="Server Start Time" defaultOn="true"/>

    <metric property="config-file" dataType="trait" displayName="Server Config File" displayType="summary" defaultInterval="3600000"
            description="The name of the server configuration file this server is using"/>

    <event name="logEntry" description="an entry in a log file"/>

    <resource-configuration>

      <c:group name="children:system-property:name+" displayName="System-properties">
        <c:list-property name="*2" displayName="Properties" required="false" readOnly="false">
          <c:map-property name="*:name" displayName="Name" readOnly="true">
            <c:simple-property name="name" displayName="Property-Name" readOnly="true"/>
            <c:simple-property name="value" displayName="Value"/>
          </c:map-property>
        </c:list-property>
      </c:group>

      <c:group name="children:path:name+" displayName="Path">
        <c:list-property name="*3" displayName="Path" required="false"
                         description="The standard paths provided by the system include: jboss.home - the root directory of the JBoss AS distribution; user.home - user's home directory; user.dir - user's current working directory; java.home - java installation directory; jboss.server.base.dir - root directory for an individual server instance; jboss.server.data.dir - directory the server will use for persistent data file storage; jboss.server.log.dir - directory the server will use for log file storage; jboss.server.tmp.dir - directory the server will use for temporary file storage; jboss.domain.servers.dir - directory under which a host controller will create the working area for individual server instances">
          <c:map-property name="*:name" displayName="Entry">
            <c:simple-property name="name" required="true" type="string" readOnly="true"
                               description="The name of the path. Cannot be one of the standard fixed paths provided by the system"/>
            <c:simple-property name="path" required="true" type="string" readOnly="false"
                               description="The actual filesystem path. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path."/>
            <c:simple-property name="relative-to" required="false" type="string" readOnly="false"
                               description="The name of another previously named path, or of one of the standard paths provided by the system. If 'relative-to' is provided, the value of the 'path' attribute is treated as relative to the path specified by this attribute."/>
            <c:simple-property name="read-only" description="Is this property read-only" default="false" readOnly="true" defaultValue="false" type="boolean"/>
          </c:map-property>
        </c:list-property>
      </c:group>

      <c:group name="children:extension:module" displayName="Installed extensions" hiddenByDefault="true">

        <c:list-property name="*1" displayName="Installed extensions" readOnly="true" required="false">
          <c:map-property name="*" displayName="Name" readOnly="true">
            <c:simple-property name="module" displayName="Module name" readOnly="true"/>
          </c:map-property>
        </c:list-property>
      </c:group>

      <c:group name="child:core-service=server-environment*" displayName="Server environment" hiddenByDefault="true">
        <c:simple-property name="base-dir" required="true" type="string" readOnly="true"
                           description="The base directory for JBoss Application Server."/>
        <c:simple-property name="config-dir" required="true" type="string" readOnly="true"
                           description="The directory where the configurations are stored."/>
        <c:simple-property name="config-file" required="true" type="string" readOnly="true"
                           description="The configuration file used to launch JBoss Application Server."/>
        <c:simple-property name="content-dir" required="true" type="string" readOnly="true"
                           description="The directory where user content (e.g. deployments) that is managed by the server is stored."/>
        <c:simple-property name="data-dir" required="true" type="string" readOnly="true"
                           description="The data directory."/>
        <c:simple-property name="deploy-dir" required="true" type="string" readOnly="true"
                           description="Deprecated variant of &apos;content&#45;dir&apos;."/>
        <c:simple-property name="ext-dirs" required="true" type="string" readOnly="true"
                           description="A list of ext directories."/>
        <c:simple-property name="home-dir" required="true" type="string" readOnly="true"
                           description="The home directory for JBoss Application Server."/>
        <c:simple-property name="host-name" required="true" type="string" readOnly="true" description="The host name."/>
        <c:simple-property name="initial-running-mode" required="true" type="string" readOnly="true"
                           description="The current running mode of the server. Either LIVE (normal operations) or ADMIN_ONLY.  An ADMIN_ONLY server will start any configured management interfaces and accept management requests, but will not start services used for handling end user requests.">
          <c:property-options>
            <c:option value="ADMIN_ONLY" name="ADMIN_ONLY"/>
            <c:option value="NORMAL" name="NORMAL"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="launch-type" required="true" type="string" readOnly="true"
                           description="The type of the running server."/>
        <c:simple-property name="log-dir" required="true" type="string" readOnly="true"
                           description="The directory where log files are sent."/>
        <c:simple-property name="modules-dir" required="true" type="string" readOnly="true"
                           description="The directory where modules are found."/>
        <c:simple-property name="node-name" required="true" type="string" readOnly="true"
                           description="The name of the server node."/>
        <c:simple-property name="qualified-host-name" required="true" type="string" readOnly="true"
                           description="The qualified host name."/>
        <c:simple-property name="server-name" required="true" type="string" readOnly="true"
                           description="The name of the server."/>
        <c:simple-property name="temp-dir" required="true" type="string" readOnly="true"
                           description="The temporary directory."/>
      </c:group>
    </resource-configuration>

    <drift-definition
          name="Template-Base Files"
          description="Monitor base application server files for drift. It defines monitoring for some standard sub-directories of the HOME directory.  Note, it is not recommeded to monitor all files for an application server. There are many files, and many temp files.">
       <basedir>
          <value-context>pluginConfiguration</value-context>
          <value-name>homeDir</value-name>
       </basedir>
       <includes>
          <include path="bin" />
          <include path="appclient" />
          <include path="welcome-content"/>
       </includes>
    </drift-definition>
    <drift-definition
          name="Template-Deploy Files"
          description="Monitor standalone deployment dir for drift. ">
       <basedir>
          <value-context>pluginConfiguration</value-context>
          <value-name>deployDir</value-name>
       </basedir>
    </drift-definition>

    <bundle-target>
      <destination-base-dir name="Deploy Directory" description="The deployment directory for a standalone server">
        <value-context>pluginConfiguration</value-context>
        <value-name>deployDir</value-name>
      </destination-base-dir>
    </bundle-target>

    <!-- Necessary to duplicate the ModCluster component for Standalone and Domain because supported operations
      list is different. Update similar Domain service if changes are necessary. -->
    <service name="ModCluster Standalone Service"
             class="ModClusterComponent"
             discovery="SubsystemDiscovery"
             description="Mod_cluster support"
             singleton="true"
        >

      <runs-inside>
        <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
        <!-- FAKE as "runs inside Profile" only does not work -->
      </runs-inside>

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="subsystem=modcluster"/>
      </plugin-configuration>

      <operation name="add-proxy" description="Add the proxy to the list of httpd connected to the node.">
        <parameters>
          <c:simple-property name="host" required="true" type="string" readOnly="false" description="Hostname of the proxy (Apache httpd)"/>
          <c:simple-property name="port" required="true" type="integer" readOnly="false" description="Port where the proxy (Apache httpd) is receiving the MCMP"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <operation name="disable" description="Tell Apache httpd that all contexts of the node can't process new requests.">
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <operation name="disable-context" description="Tell Apache httpd that the context can't process new requests.">
        <parameters>
          <c:simple-property name="virtualhost" required="true" type="string" readOnly="false" description="Name of the virtual-host containing the context."/>
          <c:simple-property name="context" required="true" type="string" readOnly="false" description="Context (like /myapp for example)."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" description="Tell Apache httpd that the context can't process new requests."/>
        </results>
      </operation>

      <operation name="enable" description="Tell Apache httpd that all contexts of the node are ready receive requests.">
        <results>
          <c:simple-property name="operationResult" description="Tell Apache httpd that all contexts of the node are ready receive requests."/>
        </results>
      </operation>

      <operation name="enable-context" description="Tell Apache httpd that the context is ready receive requests.">
        <parameters>
          <c:simple-property name="virtualhost" required="true" type="string" readOnly="false" description="Name of the virtual-host containing the context."/>
          <c:simple-property name="context" required="true" type="string" readOnly="false" description="Context (like /myapp for example)."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" description="Tell Apache httpd that the context is ready receive requests."/>
        </results>
      </operation>

      <operation name="list-proxies" description="Read the list of httpd connected to the node.">
        <results>
          <!-- List of proxies the node is connected to. Format (hostname:port) separated with comas.-->
          <c:simple-property name="proxy-list" description="List of proxies the node is connected to. Format (hostname:port) separated with comas"/>
        </results>
      </operation>

      <operation name="read-proxies-configuration" description="Send a DUMP to httpd and display the result.">
        <results>
          <!-- Result of the DUMP command.-->
          <c:simple-property name="current-proxy-config" description="Result of the DUMP command. Snapshot of httpd/modcluster configuration."/>
        </results>
      </operation>

      <operation name="read-proxies-info" description="Send a INFO to httpd and display the result.">
        <results>
          <!-- Result of the INFO command.-->
          <c:simple-property name="current-proxy-info" description="Result of the INFO command. Snapshot of httpd/modcluster proxy information."/>
        </results>
      </operation>

      <operation name="refresh" description="Refresh the node sending a new CONFIG message to Apache httpd.">
        <results>
          <c:simple-property name="operationResult" description="Refresh the node sending a new CONFIG message to Apache httpd."/>
        </results>
      </operation>

      <operation name="remove-proxy" description="Remove the proxy to the list of httpd connected to the node.">
        <parameters>
          <c:simple-property name="host" required="true" type="string" readOnly="false" description="Hostname of the proxy (Apache httpd)"/>
          <c:simple-property name="port" required="true" type="integer" readOnly="false" description="Port where the proxy (Apache httpd) is receiving the MCMP"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <operation name="reset" description="Reset the node connection to Apache httpd.">
        <results>
          <c:simple-property name="operationResult" description="Reset the node connection to Apache httpd."/>
        </results>
      </operation>

      <operation name="stop" description="Tell Apache httpd that all contexts of the node can't process requests.">
        <parameters>
          <c:simple-property name="waittime" required="false" type="integer" readOnly="false" description="Max amount of time modcluster will for the STOP operation. In seconds. Default 10s"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" description="Tell Apache httpd that the context can't process requests."/>
        </results>
      </operation>

      <operation name="stop-context" description="Tell Apache httpd that the context can't process requests.">
        <parameters>
          <c:simple-property name="virtualhost" required="true" type="string" readOnly="false" description="Name of the virtual-host containing the context."/>
          <c:simple-property name="context" required="true" type="string" readOnly="false" description="Context (like /myapp for example)."/>
          <c:simple-property name="waittime" required="false" type="integer" readOnly="false" description="Max amount of time modcluster will for the STOP operation. In seconds. Default 10s"/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" description="Tell Apache httpd that all contexts of the node can't process requests."/>
        </results>
      </operation>

      &modclusterSharedOpsConfig;
    </service>

  </server> <!-- standalone server -->

  <service name="JVM"
           discovery="JVMDiscoveryComponent"
           class="BaseComponent"
           description="Information about the underlying JVM"
           singleton="true">
    <runs-inside>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
      <parent-resource-type name="Host" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="core-service=platform-mbean"/>
    </plugin-configuration>

    <service name="Operating System"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             singleton="true"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="type=operating-system"/>
      </plugin-configuration>

      <metric property="available-processors"
              description="The number of processors available to the Java virtual machine."/>
      <metric property="system-load-average"
              description="The system load average for the last minute. The load average may not be available on some platforms; if the load average is not available, a negative value is returned."/>
    </service>

    <service name="Memory"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             singleton="true"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="type=memory"/>
      </plugin-configuration>

      <operation name="gc" displayName="Trigger GC" description="Runs the garbage collector.">
        <results>
           <c:simple-property name="operationResult" description="Runs the garbage collector." />
        </results>
      </operation>

      <metric property="object-pending-finalization-count" description="The approximate number of objects for which finalization is pending."/>
      <metric property="heap-memory-usage:init" displayName="Initial heap usage" units="bytes" description="The amount of memory in bytes that the Java virtual machine initially requests from the operating system for memory management."/>
      <metric property="heap-memory-usage:used" displayName="Used heap" units="bytes" displayType="summary" description="The amount of used memory in bytes."/>
      <metric property="heap-memory-usage:committed" displayName="Committed heap" units="bytes" description="The amount of memory in bytes that is committed for the Java virtual machine to use."/>
      <metric property="heap-memory-usage:max" displayName="Maximum heap usage" units="bytes" description="The maximum amount of memory in bytes that can be used for memory management."/>
      <metric property="non-heap-memory-usage:init" displayName="Initial non-heap usage" units="bytes" description="The amount of memory in bytes that the Java virtual machine initially requests from the operating system for memory management."/>
      <metric property="non-heap-memory-usage:used" displayName="Used non-heap memory" units="bytes" displayType="summary" description="The amount of used memory in bytes."/>
      <metric property="non-heap-memory-usage:committed" displayName="Committed non-heap memory" units="bytes" description="The amount of memory in bytes that is committed for the Java virtual machine to use."/>
      <metric property="non-heap-memory-usage:max" displayName="Maximum non-heap usage" units="bytes" description="The maximum amount of memory in bytes that can be used for memory management."/>

    </service>

    <service name="Runtime"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             singleton="true"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="type=runtime"/>
      </plugin-configuration>

      <metric property="uptime" description="The uptime of the Java virtual machine in milliseconds."/>
    </service>

    <service name="Threading"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="type=threading"/>
      </plugin-configuration>

      <operation name="dump-all-threads"
                 description="Returns the thread info for all live threads with stack trace and synchronization information.">
        <parameters>
          <c:simple-property name="locked-monitors" required="true" type="boolean" readOnly="false"
                             description="Whether the result should include information on locked monitors."/>
          <c:simple-property name="locked-synchronizers" required="true" type="boolean" readOnly="false"
                             description="Whether the result should include information on locked ownable synchronizers."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult"/>
        </results>
      </operation>

      <operation name="find-deadlocked-threads"
                 description="Finds cycles of threads that are in deadlock waiting to acquire object monitors or ownable synchronizers.">
        <results>
          <c:simple-property name="operationResult" type="string"/>
        </results>
      </operation>

      <operation name="find-monitor-deadlocked-threads"
                 description="Finds cycles of threads that are in deadlock waiting to acquire object monitors.">
        <results>
          <c:simple-property name="operationResult" type="string"/>
        </results>
      </operation>

      <operation name="get-thread-cpu-time"
                 description="Returns the total CPU time for a thread of the specified ID in nanoseconds.">
        <parameters>
          <c:simple-property name="id" required="true" type="long" readOnly="false"
                             description="The thread ID of the thread. Must be positive."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" type="string"/>
        </results>
      </operation>

      <operation name="get-thread-info"
                 description="Returns the thread info for a thread of the specified id. The stack trace, locked monitors, and locked synchronizers in the returned reply object will be empty.">
        <parameters>
          <c:simple-property name="id" required="true" type="long" readOnly="false"
                             description="The thread ID of the thread. Must be positive."/>
          <c:simple-property name="max-depth" required="false" type="integer" readOnly="false" defaultValue="0"
                             description="The maximum number of entries in the stack trace to be dumped. Integer.MAX_VALUE could be used to request the entire stack to be dumped. The default value is 0."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" type="string"/>
        </results>
      </operation>

      <operation name="get-thread-infos"
                 description="Returns the thread info for each thread whose ID is in the input list.">
        <parameters>
          <c:list-property name="ids" description="A list of thread ids." >
            <c:simple-property name="ids" required="true" type="long" readOnly="false"/>
          </c:list-property>
          <c:simple-property name="max-depth" required="false" type="integer" readOnly="false" defaultValue="0"
                             description="The maximum number of entries in the stack trace to be dumped. Integer.MAX_VALUE could be used to request the entire stack to be dumped. The default value is 0."/>
          <c:simple-property name="locked-monitors" required="false" type="boolean" readOnly="false"
                             defaultValue="false"
                             description="Whether the result should include information on locked monitors. The default value is false."/>
          <c:simple-property name="locked-synchronizers" required="false" type="boolean" readOnly="false"
                             defaultValue="false"
                             description="Whether the result should include information on locked monitors. The default value is false."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" type="string"/>
        </results>
      </operation>

      <operation name="get-thread-user-time"
                 description="Returns the CPU time that a thread of the specified ID has executed in user mode in nanoseconds.">
        <parameters>
          <c:simple-property name="id" required="true" type="long" readOnly="false"
                             description="The thread ID of the thread. Must be positive."/>
        </parameters>
        <results>
          <c:simple-property name="operationResult" type="string"/>
        </results>
      </operation>

      <operation name="reset-peak-thread-count"
                 description="Resets the peak thread count to the current number of live threads.">
        <results>
          <c:simple-property name="operationResult"
                             description="Resets the peak thread count to the current number of live threads."/>
        </results>
      </operation>

      <metric property="thread-count" description="The current number of live threads including both daemon and non-daemon threads."/>
      <metric property="peak-thread-count" description="The peak live thread count since the Java virtual machine started or peak was reset."/>
      <metric property="total-started-thread-count" description="The total number of threads created and also started since the Java virtual machine started."/>
      <metric property="daemon-thread-count" description="The current number of live daemon threads."/>
      <metric property="current-thread-cpu-time" description="The total CPU time for the current thread in nanoseconds, or -1 if 'thread-cpu-time-enabled' is 'false'. A Java virtual machine implementation may not support CPU time measurement. If 'thread-cpu-time-supported', is 'false' undefined."/>
      <metric property="current-thread-user-time" description="The CPU time that the current thread has executed in user mode in nanoseconds, or -1 if 'thread-cpu-time-enabled' is 'false'. A Java virtual machine implementation may not support CPU time measurement. If 'thread-cpu-time-supported', is 'false' the result will be undefined "/>
      <resource-configuration>
        <c:simple-property name="thread-contention-monitoring-enabled" required="false" type="boolean" readOnly="false" description="Whether thread contention monitoring is enabled."/>
        <c:simple-property name="thread-cpu-time-enabled" required="false" type="boolean" readOnly="false" description="Whether thread CPU time measurement is enabled."/>
        <c:list-property name="all-thread-ids" description="All live thread IDs. If a security manager is installed and the caller does not have ManagementPermission('monitor'), the result will be undefined." readOnly="true">
          <c:simple-property name="all-thread-ids" readOnly="true"/>
        </c:list-property>
        <c:simple-property name="thread-contention-monitoring-supported" required="false" type="boolean" readOnly="true" description="Whether the Java virtual machine supports thread contention monitoring."/>
        <c:simple-property name="thread-cpu-time-supported" required="false" type="boolean" readOnly="true" description="Whether the Java virtual machine implementation supports CPU time measurement for any thread."/>
        <c:simple-property name="current-thread-cpu-time-supported" required="false" type="boolean" readOnly="true" description="Whether the Java virtual machine supports CPU time measurement for the current thread."/>
        <c:simple-property name="object-monitor-usage-supported" required="false" type="boolean" readOnly="true" description="Whether the Java virtual machine supports monitoring of object monitor usage."/>
        <c:simple-property name="synchronizer-usage-supported" required="false" type="boolean" readOnly="true" description="Whether the Java virtual machine supports monitoring of ownable synchronizer usage."/>
      </resource-configuration>
    </service>

  </service>



  <service name="JBossWeb"
          discovery="SubsystemDiscovery"
          class="BaseComponent"
          singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=web"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="default-virtual-server" required="true" type="string" readOnly="false" defaultValue="default-host" description="The web container's default virtual server. The default value is default-host.">
        <c:option-source target="resource" expression="type=VHost plugin=&pluginName;"/>
      </c:simple-property>
      <c:simple-property name="instance-id" readOnly="true" required="false" type="string" description="The identifier for this server instance."/>
      <c:simple-property name="native" required="false" type="boolean" readOnly="true" defaultValue="true" description="Add the native initialization listener to the web container. The default value is true."/>

      <c:group name="child:configuration=static-resources" displayName="Static Resources">
        <c:simple-property name="disabled:0" required="false" type="boolean" defaultValue="false" description="Enable the default Servlet mapping. The default value is false."/>
        <c:simple-property name="file-encoding" required="false" description="Force a file encoding." type="string"/>
        <c:simple-property name="listings" required="false" type="boolean" defaultValue="false" description="Enable folder listings. The default value is false."/>
        <c:simple-property name="max-depth" required="false" type="integer" defaultValue="3" description="Maximum recursion for PROPFIND. The default value is 3."/>
        <c:simple-property name="read-only" required="false" type="boolean" defaultValue="true" description="Allow write HTTP methods (PUT, DELETE). The default value is true."/>
        <c:simple-property name="sendfile" required="false" type="integer" defaultValue="49152" description="Enable sendfile if possible, for files bigger than the specified byte size. The default value is 49152."/>
        <c:simple-property name="secret" required="false" type="string" readOnly="true" description="Secret for WebDAV locking operations."/>
        <c:simple-property name="webdav" required="false" type="boolean" defaultValue="false" description="Enable WebDAV functionality. The default value is false."/>
      </c:group>
      <c:group name="child:configuration=jsp-configuration" displayName="JSP Configuration">
        <c:simple-property name="check-interval" required="false" type="integer" readOnly="false" defaultValue="0" description="Check interval for JSP updates using a background thread. The default value is 0."/>
        <c:simple-property name="development" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable the development mode, which gives more information when an error occurs. The default value is false."/>
        <c:simple-property name="disabled:1" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable the JSP container. The default value is false."/>
        <c:simple-property name="display-source-fragment" required="false" type="boolean" readOnly="false" defaultValue="true" description="When a runtime error occurs, attempts to display corresponding JSP source fragment. The default value is true."/>
        <c:simple-property name="dump-smap" required="false" type="boolean" readOnly="false" defaultValue="false" description="Write SMAP data to a file. The default value is false."/>
        <c:simple-property name="error-on-use-bean-invalid-class-attribute" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable errors when using a bad class in useBean. The default value is false."/>
        <c:simple-property name="generate-strings-as-char-arrays" required="false" type="boolean" readOnly="false" defaultValue="false" description="Generate String constants as char arrays. The default value is false."/>
        <c:simple-property name="java-encoding" required="false" type="string" readOnly="false" defaultValue="UTF8" description="Specify the encoding used for Java sources. The default value is UTF8."/>
        <c:simple-property name="keep-generated" required="false" type="boolean" readOnly="false" defaultValue="true" description="Keep the generated Servlets. The default value is true."/>
        <c:simple-property name="mapped-file" required="false" type="boolean" readOnly="false" defaultValue="true" description="Map to the JSP source. The default value is true."/>
        <c:simple-property name="modification-test-interval" required="false" type="integer" readOnly="false" defaultValue="4" description="Minimum amount of time between two tests for updates, in seconds. The default value is 4."/>
        <c:simple-property name="recompile-on-fail" required="false" type="boolean" readOnly="false" defaultValue="false" description="Retry failed JSP compilations on each request. The default value is false."/>
        <c:simple-property name="scratch-dir" required="false" type="string" readOnly="false" description="Specify a different work directory."/>
        <c:simple-property name="smap" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enable SMAP. The default value is true."/>
        <c:simple-property name="source-vm" required="false" type="string" readOnly="false" defaultValue="1.5" description="Source VM level for compilation. The default value is 1.5."/>
        <c:simple-property name="tag-pooling" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enable tag pooling. The default value is true."/>
        <c:simple-property name="target-vm" required="false" type="string" readOnly="false" defaultValue="1.5" description="Target VM level for compilation. The default value is 1.5."/>
        <c:simple-property name="trim-spaces" required="false" type="boolean" readOnly="false" defaultValue="false" description="Trim some spaces from the generated Servlet. The default value is false."/>
        <c:simple-property name="x-powered-by" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enable advertising the JSP engine in x-powered-by. The default value is true."/>
      </c:group>
      <c:group name="child:configuration=container" displayName="Container">
<!-- Commented out - see https://bugzilla.redhat.com/show_bug.cgi?id=815288
        <c:list-property name="mime-mapping" description="A mime-mapping definition." required="false" >
          <c:map-property name="mime-mapping:collapsed" >
            <c:simple-property name="name:0" displayName="Name" description="A MIME mapping name without the dot (e.g. 'txt')"/>
            <c:simple-property name="value:1" displayName="Value" description="A MIME mapping value (e.g. 'text/plain' )"/>
          </c:map-property>
        </c:list-property>
-->
        <c:list-property name="welcome-file" required="false" description="A welcome file declaration." >
          <c:simple-property name="welcome-file" type="string"/>
        </c:list-property>
      </c:group>
    </resource-configuration>

    <service name="Connector"
             discovery="SubsystemDiscovery"
             class="WebConnectorComponent"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="connector"/>
      </plugin-configuration>


      <metric property="bytesSent" measurementType="trendsup" description="Number of byte sent by the connector."/>
      <metric property="bytesReceived" measurementType="trendsup" description="Number of byte received by the connector (POST data)."/>
      <metric property="processingTime" measurementType="trendsup" units="milliseconds" description="Processing time used by the connector. Im milli-seconds."/>
      <metric property="errorCount" measurementType="trendsup" displayType="summary" description="Number of error that occurs when processing requests by the connector."/>
      <metric property="maxTime" units="milliseconds" description="Max time spent to process a requests."/>
      <metric property="requestCount" measurementType="trendsup" displayType="summary" description="Number of the request processed by the connector."/>
      <metric property="_maxConnections" description="Number of max connections this connector can handle (see configuration to set it)" defaultOn="true" defaultInterval="14400000"/>

      <resource-configuration>
        <c:simple-property name="scheme" required="true" type="string" readOnly="false" description="The web connector scheme.">
          <c:property-options>
            <c:option value="http"/>
            <c:option value="https"/>
            <c:option value="ajp"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="socket-binding" required="true" type="string" description="The web connector socket-binding reference, this connector should be bound to.">
          <c:option-source target="configuration" expression="*/socket-binding=name:type=SocketBindingGroup"/>
        </c:simple-property>
        <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Defines whether the connector should be started on startup. The default value is true."/>
        <c:simple-property name="enable-lookups" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable DNS lookups for Servlet API. The default value is false."/>
        <c:simple-property name="executor" required="false" type="string" readOnly="false" description="The name of the executor that should be used for the processing threads of this connector. If undefined defaults to using an internal pool."/>
        <c:simple-property name="max-connections" required="false" type="integer" readOnly="false" description="Amount of concurrent connections that can be processed by the connector with optimum performance. The default value depends on the connector used and the number of cpu cores (512*cores for HTTP, 32*cores for AJP)."/>
        <c:simple-property name="max-post-size" required="false" type="integer" readOnly="false" defaultValue="2097152" description="Maximum size in bytes of a POST request that can be parsed by the container. The default value is 2097152."/>
        <c:simple-property name="max-save-post-size" required="false" type="integer" readOnly="false" defaultValue="4096" description="Maximum size in bytes of a POST request that will be saved during certain authentication schemes. The default value is 4096."/>
        <c:simple-property name="name" required="false" type="string" readOnly="true" description="A unique name for the connector."/>
        <c:simple-property name="protocol" required="true" type="string" readOnly="false" default="HTTP/1.1" defaultValue="HTTP/1.1"
                           description="The web connector protocol. (e.g. 'HTTP/1.1' or 'AJP' or a name of a class implementing ProtocolHandler and MBeanRegistration )">
        <!-- TODO let the user could enter a custom value here when the UI supports this. -->
          <c:property-options >
            <c:option value="HTTP/1.1"/>
            <c:option value="AJP/1.3"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="proxy-name" required="false" type="string" readOnly="false" description="The host name that will be used when sending a redirect. The default value is null."/>
        <c:simple-property name="proxy-port" required="false" type="integer" readOnly="false" description="The port that will be used when sending a redirect."/>
        <c:simple-property name="redirect-port" required="false" type="integer" readOnly="false" defaultValue="8433" description="The port for redirection to a secure connector. The default value is 8433."/>
        <c:simple-property name="secure" required="false" type="boolean" readOnly="false" defaultValue="false" description="Indicates if content sent or received by the connector is secured from the user perspective. The default value is false."/>
        <c:simple-property name="virtual-server" required="false" type="string" readOnly="false" description="The list of virtual servers that can be accessed through this connector. The default is to allow all virtual servers."/>

        <c:group name="child:ssl=configuration:enabled=secure=true" displayName="SSL Configuration">
          <c:map-property name="*Configuration+" displayName="Configuration" readOnly="false" required="false">
            <c:simple-property name="ca-certificate-file" required="false" type="string" readOnly="false" description="Certificate authority."/>
            <c:simple-property name="ca-certificate-password" required="false" type="string" readOnly="false" description="Certificate password."/>
            <c:simple-property name="ca-revocation-url" required="false" type="string" readOnly="false" description="Certificate authority revocation list."/>
            <c:simple-property name="certificate-file" required="false" type="string" readOnly="false" description="Server certificate file. If the value is not given, ~/.keystore is the default"/>
            <c:simple-property name="certificate-key-file" required="false" type="string" readOnly="false" description="Key file for the certificate."/>
            <c:simple-property name="cipher-suite" required="false" type="string" readOnly="false" description="The allowed cipher suite."/>
            <c:simple-property name="key-alias" required="false" type="string" readOnly="false" description="The key alias."/>
            <c:simple-property name="keystore-type" required="false" type="string" readOnly="false" description="Type of the keystore, There are various types of keystores available, including &apos;PKCS12&apos; and Sun&apos;s &apos;JKS.&apos;"/>
            <c:simple-property name="name" required="false" type="string" readOnly="false" description="The configuration name."/>
            <c:simple-property name="password" required="false" type="string" readOnly="false" description="Password."/>
            <c:simple-property name="protocol" required="false" type="string" readOnly="false" description="The SSL protocols that are enabled." default="ALL" defaultValue="ALL">
              <c:property-options>
                <c:option value="SSLv2"/>
                <c:option value="SSLv3"/>
                <c:option value="TLSv1"/>
                <c:option value="SSLv2+SSLv3"/>
                <c:option value="ALL"/>
              </c:property-options>
            </c:simple-property>
            <c:simple-property name="session-cache-size" required="false" type="integer" readOnly="false" description="SSL session cache."/>
            <c:simple-property name="session-timeout" required="false" type="integer" readOnly="false" description="SSL session cache timeout."/>
            <c:simple-property name="truststore-type" required="false" type="string" readOnly="false" description="Type of the truststore, There are various types of keystores available, including &apos;PKCS12&apos; and Sun&apos;s &apos;JKS.&apos;"/>
            <c:simple-property name="verify-client" required="false" type="string" readOnly="false" description="Enable client certificate verification."/>
            <c:simple-property name="verify-depth" required="false" type="integer" readOnly="false" description="Limit certificate nesting."/>
          </c:map-property>
        </c:group>
      </resource-configuration>

    </service>

    <service name="VHost"
             discovery="SubsystemDiscovery"
             class="VHostComponent"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="virtual-server"/>
      </plugin-configuration>

      <metric property="_aliases" dataType="trait" defaultOn="true" description="Aliases for this virtual host"/>

      <resource-configuration>
        <c:list-property name="alias" description="The virtual server aliases" displayName="Virtual server aliases">
          <c:simple-property name="alias"/>
        </c:list-property>
        <c:simple-property name="default-web-module" type="string" defaultValue="ROOT.war" description="The web module deployment name that will be mapped as the root webapp."/>
        <c:simple-property name="enable-welcome-root" type="boolean" defaultValue="false" description="Whether or not the bundled welcome directory is used as the root web context. The default value is false."/>
        <c:simple-property name="name" required="false" type="string" readOnly="true" description="A unique virtual host name"/>

        <c:group name="child:sso=configuration" displayName="The SSO configuration for this virtual server.">
          <c:map-property name="*Configuration+" displayName="Configuration" readOnly="false" required="false">
            <c:simple-property name="cache-container" required="false" type="string" readOnly="false"
                               description="Enables clustered SSO using the specified clustered cache container.">
              <c:option-source target="resource" expression="type='Cache Container' plugin=&pluginName;"/>
            </c:simple-property>
            <c:simple-property name="cache-name" required="false" type="string" readOnly="false" description="Name of the cache to use in the cache container."/>
            <c:simple-property name="domain" required="false" type="string" readOnly="false" description="The cookie domain that will be used."/>
            <c:simple-property name="reauthenticate" required="false" type="boolean" readOnly="false" description="Enables reauthentication with the realm when using SSO."/>
          </c:map-property>
        </c:group>
      </resource-configuration>


      <service name="Rewrite Rules"
               discovery="SubsystemDiscovery"
               description="A list of rewrite rules that will be processed in order on the URL or vhost specified in the request. Those follow the rules for mod_rewrite. Please consult the manual for help on settings"
               class="BaseComponent"
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="rewrite"/>
        </plugin-configuration>

        <resource-configuration>
          <c:simple-property name="flags" required="true" type="string" readOnly="false" description="Option flags for this rewrite rule. Consult the mod_rewrite docs."/>
          <c:simple-property name="pattern" required="true" type="string" readOnly="false" description="The pattern that will be matched. Consult the mod_rewrite docs."/>
          <c:simple-property name="substitution" required="true" type="string" readOnly="false" description="The string that will replace the original URL or vhost. Consult the mod_rewrite docs."/>
          <!-- embedded condition children  - commented out for the moment -->
          <c:group name="children:condition:name+" displayName="Rewrite conditions">
            <c:list-property name="*1" displayName="Conditions" required="false" readOnly="true">
              <c:map-property name="*:name" displayName="Name" readOnly="true">
                <c:simple-property name="name" required="true" readOnly="true" displayName="Condition-Name"/>
                <c:simple-property name="flags" required="true" type="string" readOnly="true" description="Option flags for this condition. Consult the mod_rewrite docs."/>
                <c:simple-property name="pattern" required="true" type="string" readOnly="true" description="The pattern to match. Consult the mod_rewrite docs."/>
                <c:simple-property name="test" required="true" type="string" readOnly="true" description="Test pattern for the condition. Consult the mod_rewrite docs."/>
              </c:map-property>
            </c:list-property>
          </c:group>
        </resource-configuration>
      </service>

      <service name="Access Log"
               discovery="SubsystemDiscovery"
               description="The access log configuration for this virtual server."
               class="BaseComponent"
               singleton="true">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="access-log=configuration"/>
        </plugin-configuration>

        <resource-configuration>
          <c:simple-property name="extended" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable extended pattern, with more options. The default value is false."/>
          <c:simple-property name="pattern" required="false" type="string" readOnly="false" defaultValue="common" description="The access log pattern. The default value is common."/>
          <c:simple-property name="prefix" required="false" type="string" readOnly="false" defaultValue="false" description="Prefix for the log file name. The default value is false."/>
          <c:simple-property name="resolve-hosts" required="false" type="boolean" readOnly="false" defaultValue="false" description="Host resolution. The default value is false."/>
          <c:simple-property name="rotate" required="false" type="boolean" readOnly="false" defaultValue="true" description="Rotate the access log every day. The default value is true."/>

          <c:group name="child:directory=configuration" displayName="The location for the access logging.">
            <c:simple-property name="path" required="false" type="string" readOnly="false" description="The relative folder path."/>
            <c:simple-property name="relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.log.dir" description="The folder the path is relative to. The default value is jboss.server.log.dir."/>
          </c:group>
        </resource-configuration>
      </service>
    </service> <!-- End of VHost service -->

  </service> <!-- End of JBossWeb service -->


  <service name="General JCA connectors"
          discovery="SubsystemDiscovery"
          class="BaseComponent"
          singleton="true"
          description="General settings of the JCA engine. Not necessarily for end-users">

    <runs-inside>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=connector"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="default-workmanager-short-running-thread-pool" required="true" type="string" readOnly="true" description="Specify the name of short running thread pool"/>
      <c:simple-property name="default-workmanager-long-running-thread-pool" required="true" type="string" readOnly="true" description="Specify the name of long running thread pool"/>
      <c:simple-property name="bean-validation-enabled" required="true" type="boolean" readOnly="true" description="Specify whether bean validation is enabled"/>
      <c:simple-property name="archive-validation-enabled" type="boolean" readOnly="true" description="Enabling the validation"/>
      <c:simple-property name="archive-validation-fail-on-error" type="boolean" readOnly="true" defaultValue="true" description="Should an archive validation error report fail the deployment. Default: true"/>
      <c:simple-property name="archive-validation-fail-on-warn" type="boolean" readOnly="true" defaultValue="false" description="Should an archive validation warning report fail the deployment. Default: false"/>
      <c:simple-property name="cached-connection-manager-debug" type="boolean" readOnly="true" defaultValue="false" description="enable/disable debug information logging for cached connection manager"/>
      <c:simple-property name="cached-connection-manager-error" type="boolean" readOnly="true" defaultValue="false" description="enable/disable error information logging for cached connection manager"/>
    </resource-configuration>

  </service>


  <service name="Datasources (Standalone)"
          discovery="SubsystemDiscovery"
          class="DatasourceComponent"
          singleton="true"
          description="Datasources subsystem for Standalone servers.">

    <runs-inside>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=datasources"/>
    </plugin-configuration>

    <!-- not needed for hot-deployed drivers - only for module ones, but I am not sure we want to support that
            <operation name="addDriver" displayName="Add a JDBC driver" >
                <parameters>
                    <c:simple-property name="driver-name" required="true"/>
                    <c:simple-property name="deployment-name" required="true">
                        <c:option-source target="resource" expression="type=DomainDeployment"/>
                    </c:simple-property>
                    <c:simple-property name="driver-class-name" required="true"/>
                </parameters>
                <results>
                    <c:simple-property name="operationResult"/>
                </results>
            </operation>
    -->

    <service name="DataSource (Standalone)"
             discovery="SubsystemDiscovery"
             class="DatasourceComponent"
             description="A non-XA data source"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="data-source"/>
      </plugin-configuration>

      &datasourceEnableDisableOperations;
      &datasourceTestFlushOperations;

      &datasourceMetrics;

      &datasourceReadWriteConfiguration;
    </service>

    <service name="XADataSource (Standalone)"
             discovery="SubsystemDiscovery"
             class="DatasourceComponent"
             description="An XA data source"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="xa-data-source"/>
      </plugin-configuration>

      &datasourceEnableDisableOperations;
      &datasourceTestFlushOperations;

      &datasourceMetrics;

      &xaDatasourceReadWriteConfiguration;
    </service>

  </service>


  <service name="Datasources (Profile)"
          discovery="SubsystemDiscovery"
          class="DatasourceComponent"
          singleton="true"
          description="Datasources subsystem for profile.">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=datasources"/>
    </plugin-configuration>

    <service name="DataSource (Profile)"
             discovery="SubsystemDiscovery"
             class="DatasourceComponent"
             description="A non-XA data source"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="data-source"/>
      </plugin-configuration>

      &datasourceEnableDisableOperations;

      &datasourceReadWriteConfiguration;
    </service>

    <service name="XADataSource (Profile)"
             discovery="SubsystemDiscovery"
             class="DatasourceComponent"
             description="An XA data source"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="xa-data-source"/>
      </plugin-configuration>

      &datasourceEnableDisableOperations;

      &xaDatasourceReadWriteConfiguration;
    </service>

  </service>


  <service name="Datasources (Managed)"
          discovery="SubsystemDiscovery"
          class="DatasourceComponent"
          singleton="true"
          description="Datasources subsystem for Managed servers.">

    <runs-inside>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=datasources"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="DataSource (Managed)"
             discovery="SubsystemDiscovery"
             class="DatasourceComponent"
             description="A non-XA data source"
             createDeletePolicy="neither">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="data-source"/>
      </plugin-configuration>

      &datasourceTestFlushOperations;

      &datasourceMetrics;

      &datasourceReadOnlyConfiguration;
    </service>

    <service name="XADataSource (Managed)"
             discovery="SubsystemDiscovery"
             class="DatasourceComponent"
             description="An XA data source"
             createDeletePolicy="neither">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="xa-data-source"/>
      </plugin-configuration>

      &datasourceTestFlushOperations;

      &datasourceMetrics;

      &xaDatasourceReadOnlyConfiguration;
    </service>

  </service>

    <!-- TO BE ADDED to Datasource at a later time
            <service name="JdbcDriver"
                     discovery="SubsystemDiscovery"
                     class="DatasourceComponent"
                     singleton="true"
                    >

                <plugin-configuration>
                    <c:simple-property name="path" readOnly="true" default="jdbc-driver"/>
                </plugin-configuration>


                <resource-configuration>
                    <c:simple-property name="driver-name" required="true" type="string" readOnly="true" description="The symbolic name of this driver used to reference it in the register"/>
                    <c:simple-property name="deployment-name" required="false" type="string" readOnly="true" description="The name of the deployment unit from which the driver was loaded, if it was loaded from a deployment"/>
                    <c:simple-property name="driver-module-name" required="false" type="string" readOnly="true" description="The name of the module from which the driver was loaded, if it was loaded from the module path"/>
                    <c:simple-property name="module-slot" required="false" type="string" readOnly="true" description="The slot of the module from which the driver was loaded, if it was loaded from the module path"/>
                    <c:simple-property name="driver-class-name" required="false" type="string" readOnly="true" description="The fully qualified class name of the driver's implementation of java.sql.Driver"/>
                    <c:simple-property name="xa-data-source-class" required="false" type="string" readOnly="true" description="The fully qualified class name of the XA datasource implementation of javax.sql.XADataSource"/>
                    <c:simple-property name="driver-major-version" required="false" type="integer" readOnly="true" description="The driver's major version number"/>
                    <c:simple-property name="driver-minor-version" required="false" type="integer" readOnly="true" description="The driver's minor version number"/>
                    <c:simple-property name="jdbc-compliant" required="false" type="boolean" readOnly="true" description="Whether or not the driver is JDBC compliant"/>
    &lt;!&ndash;
                    <c:template name="add" description="Add a jdbc driver"> &lt;!&ndash; See BZ 705713 TODO &ndash;&gt;
                        <c:simple-property name="driver-name" required="true"/>
                        <c:simple-property name="deployment-name" required="true">
                            <c:option-source target="resource" expression="type=DomainDeployment"/> &lt;!&ndash; TODO filter ? &ndash;&gt;
                        </c:simple-property>
                        <c:simple-property name="driver-class-name" required="true"/>
                    </c:template>
    &ndash;&gt;
                </resource-configuration>
            </service>
    -->

  <service name="JVM Definition (Host)"
           description="A JVM Definition on Host level, that can serve as templates for server groups and managed servers"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           createDeletePolicy="both">
    <runs-inside>
      <parent-resource-type name="Host" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="jvm" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      &jvmDefinitionResourceConfigProperties;
    </resource-configuration>
   </service>

  <service name="JVM Definition"
           description="A JVM definition that can override host and server group level definitions with the same name"
           discovery="SubsystemDiscovery"
           class="JVMDefinitionComponent"
           singleton="true"
           createDeletePolicy="both">
    <runs-inside>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
      <parent-resource-type name="ServerGroup" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="jvm" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="baseDefinition" required="true" readOnly="true" description="The definition from host level to use/override">
        <c:option-source target="resource" expression="type='JVM Definition (Host)' plugin=&pluginName;"/>
      </c:simple-property>
      &jvmDefinitionResourceConfigProperties;
    </resource-configuration>
   </service>


  <service name="Logging"
          discovery="SubsystemDiscovery"
          class="LoggerComponent"
          singleton="true"
      >

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=logging"/>
    </plugin-configuration>

    <resource-configuration>
      <c:group name="child:root-logger=ROOT" displayName="Root logger">
          &logFilter;
          &logLevel;
	&logLevel;
	<c:list-property name="handlers" required="true" readOnly="false"
	                 description="The Handlers associated with this Logger.">
	  <c:simple-property name="handler" type="string" description="The Handlers associated with this Logger."/>
	</c:list-property>
      </c:group>
    </resource-configuration>

     <service name="Async Handler"
              discovery="SubsystemDiscovery"
	      createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="async-handler"/>
        </plugin-configuration>

       <operation name="assign-subhandler" description="Assign a subhandler to the ASYNC handler.">
         <parameters>
           <c:simple-property name="name" required="true" type="string" readOnly="false" description="The handler&apos;s name."/>
         </parameters>
         <results>
            <c:simple-property name="operationResult" description="Assign a subhandler to the ASYNC handler." />
         </results>
       </operation>

       <!-- no need for 'change-log-level' since resource-config handles this -->

       <operation name="disable" description="Disable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Disable a logging handler." />
         </results>
       </operation>

       <operation name="enable" description="Enable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Enable a logging handler." />
         </results>
       </operation>

       <operation name="unassign-subhandler" description="Unassign a subhandler from the ASYNC handler.">
         <parameters>
           <c:simple-property name="name" required="true" type="string" readOnly="false" description="The handler&apos;s name."/>
         </parameters>
         <results>
            <c:simple-property name="operationResult" description="Unassign a subhandler from the ASYNC handler." />
         </results>
       </operation>

       <resource-configuration>
           &logFilter;
         <c:simple-property name="formatter" required="false" type="string" readOnly="false" defaultValue="&#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n"
         description="Defines a formatter. The default value is &#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n."/>
           &logLevel;
         <c:simple-property name="overflow-action" required="true" type="string" readOnly="false" defaultValue="BLOCK" description="Specify what action to take when the overflowing.  The valid options are &apos;block&apos; and &apos;discard&apos;. The default value is BLOCK.">
           <c:property-options>
	      <c:option value="BLOCK"/>
	      <c:option value="DISCARD"/>
           </c:property-options>
	 </c:simple-property>
         <c:simple-property name="queue-length" required="true" type="integer" readOnly="false" description="The queue length to use before flushing writing"/>
         <c:list-property name="subhandlers" required="false" description="The Handlers associated with this async handler." >
             <c:simple-property name="subhandlers" />
         </c:list-property>
       </resource-configuration>

     </service><!-- End of async-handler service -->

     <service name="Console Handler"
              discovery="SubsystemDiscovery"
	      createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="console-handler"/>
        </plugin-configuration>

       <!-- no need for 'change-log-level' since resource-config handles this -->

       <operation name="disable" description="Disable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Disable a logging handler." />
         </results>
       </operation>

       <operation name="enable" description="Enable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Enable a logging handler." />
         </results>
       </operation>

       <resource-configuration>
         <c:simple-property name="autoflush" required="false" type="boolean" readOnly="false" defaultValue="true" description="Automatically flush after each write. The default value is true."/>
         <c:simple-property name="encoding" required="false" type="string" readOnly="false" description="The character encoding used by this Handler."/>
           &logFilter;
         <c:simple-property name="formatter" required="false" type="string" readOnly="false" defaultValue="&#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n"
         description="Defines a formatter. The default value is &#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n."/>
           &logLevel;
         <c:simple-property name="target" required="false" type="string" readOnly="false" defaultValue="System.out" description="Defines the target of the console handler. The value can either be SYSTEM_OUT or SYSTEM_ERR. The default value is System.out.">
           <c:property-options>
	      <c:option value="System.err" name="System.err"/>
	      <c:option value="System.out" name="System.out"/>
           </c:property-options>
	 </c:simple-property>
       </resource-configuration>

     </service><!-- End of console-handler service -->

     <service name="Custom Handler"
              discovery="SubsystemDiscovery"
	      createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="custom-handler"/>
        </plugin-configuration>

       <!-- no need for 'change-log-level' since resource-config handles this -->

       <operation name="disable" description="Disable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Disable a logging handler." />
         </results>
       </operation>

       <operation name="enable" description="Enable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Enable a logging handler." />
         </results>
       </operation>

       <!-- no need for 'update-properties' since resource-config does the same thing -->

       <resource-configuration>
         <c:simple-property name="class" required="true" type="string" readOnly="true" description="The logging handler class to be used."/>
         <c:simple-property name="encoding" required="false" type="string" readOnly="false" description="The character encoding used by this Handler."/>
           &logFilter;
         <c:simple-property name="formatter" required="false" type="string" readOnly="false" defaultValue="&#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n"
         description="Defines a formatter. The default value is &#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n."/>
           &logLevel;
         <c:simple-property name="module" required="true" type="string" readOnly="true" description="The module that the logging handler depends on."/>
         <c:list-property name="properties">
           <c:map-property name="properties:collapsed" displayName="Properties">
             <c:simple-property name="name:0" displayName="Name" required="true" description="The name of the configuration property."/>
             <c:simple-property name="value:1" displayName="Value" required="true" description="The value of the configuration property."/>
           </c:map-property>
         </c:list-property>
       </resource-configuration>

     </service><!-- End of custom-handler service -->

     <service name="File Handler"
              discovery="SubsystemDiscovery"
              createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="file-handler"/>
        </plugin-configuration>

       <!-- no need for 'change-file' since resource-config handles this -->

       <!-- no need for 'change-log-level' since resource-config handles this -->

       <operation name="disable" description="Disable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Disable a logging handler." />
         </results>
       </operation>

       <operation name="enable" description="Enable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Enable a logging handler." />
         </results>
       </operation>

       <!-- removing 'update-properties' as handled by configuration update -->

       <resource-configuration>
         <c:simple-property name="append" required="false" type="boolean" readOnly="false" defaultValue="true" description="Specify whether to append to the target file. The default value is true."/>
         <c:simple-property name="autoflush" required="false" type="boolean" readOnly="false" defaultValue="true" description="Automatically flush after each write. The default value is true."/>
         <c:simple-property name="encoding" required="false" type="string" readOnly="false" description="The character encoding used by this Handler."/>
           &logFile;
           &logFilter;
         <c:simple-property name="formatter" required="false" type="string" readOnly="false" defaultValue="&#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n"
         description="Defines a formatter. The default value is &#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n."/>
           &logLevel;
       </resource-configuration>

     </service><!-- End of file-handler service -->

     <service name="Logger"
              discovery="SubsystemDiscovery"
 	      createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="logger"/>
        </plugin-configuration>

       <!-- no need for 'assign-handler' since resource-config handles this -->

       <operation name="change-log-level" description="Change the logging level for a logger category.">
         <parameters>
           <c:simple-property name="level" required="false" type="string" readOnly="false" description="The log level specifying which message levels will be logged by this logger. Message levels lower than this value will be discarded."/>
         </parameters>
         <results>
            <c:simple-property name="operationResult" description="Change the logging level for a logger category." />
         </results>
       </operation>

       <!-- no need for 'unassign-handler' since resource-config handles this -->

       <resource-configuration>
         <!-- category is the same as 'name' for other resources. Don't list as required here -->
           &logFilter;
         <c:list-property name="handlers" required="false" description="The Handlers associated with this Logger." >
             <c:simple-property name="handlers" />
         </c:list-property>
           &logLevel;
         <c:simple-property name="use-parent-handlers" required="false" type="boolean" readOnly="false" defaultValue="true"
         description="Specifies whether or not this logger should send its output to it&apos;s parent Logger. The default value is true."/>
       </resource-configuration>

     </service><!-- End of logger service -->

     <service name="Periodic Rotating File Handler"
              discovery="SubsystemDiscovery"
	      createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="periodic-rotating-file-handler"/>
        </plugin-configuration>

       <!-- no need for 'change-file' since resource-config handles this -->

       <!-- no need for 'change-log-level' since resource-config handles this -->

       <operation name="disable" description="Disable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Disable a logging handler." />
         </results>
       </operation>

       <operation name="enable" description="Enable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Enable a logging handler." />
         </results>
       </operation>

       <!-- removing 'update-properties' as handled by config -->

       <resource-configuration>
         <c:simple-property name="append" required="false" type="boolean" readOnly="false" defaultValue="true" description="Specify whether to append to the target file. The default value is true."/>
         <c:simple-property name="autoflush" required="false" type="boolean" readOnly="false" defaultValue="true" description="Automatically flush after each write. The default value is true."/>
         <c:simple-property name="encoding" required="false" type="string" readOnly="false" description="The character encoding used by this Handler."/>
         &logFile;
         &logFilter;
         <c:simple-property name="formatter" required="false" type="string" readOnly="false" defaultValue="&#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n"
         description="Defines a formatter. The default value is &#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n."/>
           &logLevel;
         <c:simple-property name="suffix" required="true" type="string" readOnly="false" description="Set the suffix string.  The string is in a format which can be understood by java.text.SimpleDateFormat. The period of the rotation is automatically calculated based on the suffix."/>
       </resource-configuration>

     </service><!-- End of periodic-rotating-file-handler service -->

<!--     <service name="Root Logger"
		 discovery="SubsystemDiscovery"
                 createDeletePolicy="both"
		 class="BaseComponent">

	   <plugin-configuration>
	     <c:simple-property name="path" readOnly="true" default="root-logger=ROOT"/>
	   </plugin-configuration>

	    <operation name="change-root-log-level" description="Change the root logger level.">
	      <parameters>
		&logLevel;
	      </parameters>
	      <results>
		<c:simple-property name="operationResult"/>
	      </results>
	    </operation>

	    <operation name="remove-root-logger" description="Remove the root logger.">
	      <results>
		<c:simple-property name="operationResult"/>
	      </results>
	    </operation>

	    <operation name="root-logger-assign-handler" description="Assign a Handler to the root logger.">
	     <parameters>
	       <c:simple-property name="name" required="true" type="string" readOnly="false" description="The handler&apos;s name."/>
	     </parameters>
	     <results>
		<c:simple-property name="operationResult" description="Assign a Handler to the root logger." />
	     </results>
	    </operation>

	    <operation name="set-root-logger" description="Set the root logger.">
	      <parameters>
		&logLevel;
		<c:list-property name="handlers" required="true" readOnly="false"
		                 description="The Handlers associated with this Logger.">
		  <c:simple-property name="handler" type="string"/>
		</c:list-property>
	      </parameters>
	      <results>
		<c:simple-property name="operationResult"/>
	      </results>
	    </operation>

	   <resource-configuration>
             <c:group name="Root logger" displayName="Root logger">
	      &logFilter;
	      <c:list-property name="handlers" required="false" description="The Handlers associated with this Logger." >
		 <c:simple-property name="handlers" />
	      </c:list-property>
	      &logLevel;
	     </c:group>
	   </resource-configuration>
	</service> --><!-- End of Root Logger service -->

     <service name="Size Rotating File Handler"
              discovery="SubsystemDiscovery"
              createDeletePolicy="both"
              class="BaseComponent">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="size-rotating-file-handler"/>
        </plugin-configuration>

       <!-- no need for 'change-file' since resource-config handles this -->

       <!-- no need for 'change-log-level' since resource-config handles this -->

       <operation name="disable" description="Disable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Disable a logging handler." />
         </results>
       </operation>

       <operation name="enable" description="Enable a logging handler.">
         <results>
            <c:simple-property name="operationResult" description="Enable a logging handler." />
         </results>
       </operation>

       <!-- removing 'update-properties' as handled by configuration -->

       <resource-configuration>
         <c:simple-property name="append" required="false" type="boolean" readOnly="false" defaultValue="true" description="Specify whether to append to the target file. The default value is true."/>
         <c:simple-property name="autoflush" required="false" type="boolean" readOnly="false" defaultValue="true" description="Automatically flush after each write. The default value is true."/>
         <c:simple-property name="encoding" required="false" type="string" readOnly="false" description="The character encoding used by this Handler."/>
           &logFile;
           &logFilter;

         <c:simple-property name="formatter" required="false" type="string" readOnly="false" defaultValue="&#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n"
         description="Defines a formatter. The default value is &#37;d{HH&#58;mm&#58;ss,SSS} &#37;&#45;5p &#91;&#37;c&#93; (&#37;t) &#37;s&#37;E&#37;n."/>
           &logLevel;
         <c:simple-property name="max-backup-index" required="true" type="integer" readOnly="false" defaultValue="1" description="The maximum number of backups to keep. The default value is 1."/>
         <c:simple-property name="rotate-size" required="true" type="string" readOnly="false" defaultValue="2m" description="The size at which to rotate the log file. The default value is 2m."/>
       </resource-configuration>

     </service><!-- End of size-rotating-file-handler service -->

  </service>


  <service name="Datagrid Endpoints"
          discovery="SubsystemDiscovery"
          class="BaseComponent"
          singleton="true"
      >

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=endpoint"/>
    </plugin-configuration>


    <service name="Hotrod Connector"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             createDeletePolicy="both"
             creationDataType="configuration"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="hotrod-connector"/>
      </plugin-configuration>

      <resource-configuration>
        <!--<c:simple-property name="name" required="false" type="string" readOnly="true" description="The name to give to this connector"/>-->
        <c:simple-property name="cache-container" required="true" type="string" readOnly="true" description="The cache container to use">
          <c:option-source target="resource" expression="type='^Cache Container$'"/>
        </c:simple-property>
        <c:simple-property name="socket-binding" required="true" type="string" readOnly="true" description="The socket binding to use for this connector">
          <c:option-source target="configuration" expression="*/socket-binding=name:type=SocketBindingGroup"/>
        </c:simple-property>
        <c:simple-property name="worker-threads" required="false" type="integer" readOnly="true" description="The number of worker threads to use for this connector"/>
        <c:simple-property name="idle-timeout" required="false" type="long" readOnly="true" description="The timeout for idle connections"/>
        <c:simple-property name="tcp-nodelay" required="false" type="boolean" readOnly="true" description="Whether to use TCP NO_DELAY"/>
        <c:simple-property name="receive-buffer-size" required="false" type="long" readOnly="true" description="Size of the receive buffer"/>
        <c:simple-property name="send-buffer-size" required="false" type="long" readOnly="true" description="Size of the send buffer"/>
        <!-- TODO add topology state transfer -->
      </resource-configuration>

    </service>

    <service name="Memcached Connector"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             createDeletePolicy="both"
             creationDataType="configuration"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="memcached-connector"/>
      </plugin-configuration>

      <resource-configuration>
        <!--<c:simple-property name="name" required="false" type="string" readOnly="true" description="The name to give to this connector"/>-->
        <c:simple-property name="cache-container" required="true" type="string" readOnly="true" description="The cache container to use">
          <c:option-source target="resource" expression="type='^Cache Container$'"/>
        </c:simple-property>
        <c:simple-property name="socket-binding" required="true" type="string" readOnly="true" description="The socket binding to use for this connector">
          <c:option-source target="configuration" expression="*/socket-binding=name:type=SocketBindingGroup"/>
        </c:simple-property>
        <c:simple-property name="worker-threads" required="false" type="integer" readOnly="true" description="The number of worker threads to use for this connector"/>
        <c:simple-property name="idle-timeout" required="false" type="long" readOnly="true" description="The timeout for idle connections"/>
        <c:simple-property name="tcp-nodelay" required="false" type="boolean" readOnly="true" description="Whether to use TCP NO_DELAY"/>
        <c:simple-property name="receive-buffer-size" required="false" type="long" readOnly="true" description="Size of the receive buffer"/>
        <c:simple-property name="send-buffer-size" required="false" type="long" readOnly="true" description="Size of the send buffer"/>
        <!-- TODO add topology state transfer -->
      </resource-configuration>

    </service>

    <service name="REST Connector"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             createDeletePolicy="both"
             creationDataType="configuration"
        >

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="rest-connector"/>
      </plugin-configuration>

      <resource-configuration>
        <!--<c:simple-property name="name" required="false" type="string" readOnly="true" description="The name to give to this connector"/>-->
        <c:simple-property name="cache-container" required="true" type="string" readOnly="true" description="The cache container to use">
          <c:option-source target="resource" expression="type='^Cache Container'"/>
        </c:simple-property>
        <c:simple-property name="virtual-server" required="false" type="string" readOnly="true" description="The virtual server on which the REST connector should be published">
          <c:option-source target="resource" expression="type=VHost"/>
        </c:simple-property>
        <c:simple-property name="context-path" required="false" type="string" readOnly="true" description="The context path on which the REST connector should be published"/>
      </resource-configuration>
    </service>

  </service>


  <service name="Webservices"
          discovery="SubsystemDiscovery"
          class="WebservicesComponent"
          singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=webservices"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <!--  REMOVING. These are lifecycle operations for AS container itself.  Don't think we want to allow
       customers to be able to remove/add a subsystem via RHQ.
   <operation name="add" description="Adds the web services subsystem.">
     <parameters>
       <c:simple-property name="modify-wsdl-address" required="false" type="boolean" readOnly="false" description="Whether the soap address can be modified."/>
       <c:simple-property name="wsdl-host" required="false" type="string" readOnly="false" description="The WSDL, that is a required deployment artifact for an endpoint, has a &lt;soap:address&gt; element which points to the location of the endpoint. JBoss supports rewriting of that SOAP address. If the content of &lt;soap:address&gt; is a valid URL, JBossWS will not rewrite it unless 'modify-wsdl-address' is true. If the content of &lt;soap:address&gt; is not a valid URL, JBossWS will rewrite it using the attribute values given below. If 'wsdl-host' is set to 'jbossws.undefined.host', JBossWS uses requesters host when rewriting the &lt;soap:address&gt;"/>
       <c:simple-property name="wsdl-port" required="false" type="integer" readOnly="false" description="The non-secure port that will be used for rewriting the SOAP address. If absent the port will be identified by querying the list of installed connectors."/>
       <c:simple-property name="wsdl-secure-port" required="false" type="integer" readOnly="false" description="The secure port that will be used for rewriting the SOAP address. If absent the port will be identified by querying the list of installed connectors."/>
     </parameters>
     <results>
        <c:simple-property name="operationResult" description="Adds the web services subsystem."/>
     </results>
   </operation>

   <operation name="remove" description="Removes the web services subsystem.">
     <results>
        <c:simple-property name="operationResult"/>
     </results>
   </operation> -->

    <resource-configuration>
      <c:simple-property name="modify-wsdl-address" required="false" type="boolean" readOnly="false" description="Whether the soap address can be modified."/>
      <c:simple-property name="wsdl-host" required="false" type="string" readOnly="false" description="The WSDL, that is a required deployment artifact for an endpoint, has a &lt;soap:address&gt; element which points to the location of the endpoint. JBoss supports rewriting of that SOAP address. If the content of &lt;soap:address&gt; is a valid URL, JBossWS will not rewrite it unless 'modify-wsdl-address' is true. If the content of &lt;soap:address&gt; is not a valid URL, JBossWS will rewrite it using the attribute values given below. If 'wsdl-host' is set to 'jbossws.undefined.host', JBossWS uses requesters host when rewriting the &lt;soap:address&gt;"/>
      <c:simple-property name="wsdl-port" required="false" type="integer" readOnly="false" description="The non-secure port that will be used for rewriting the SOAP address. If absent the port will be identified by querying the list of installed connectors."/>
      <c:simple-property name="wsdl-secure-port" required="false" type="integer" readOnly="false" description="The secure port that will be used for rewriting the SOAP address. If absent the port will be identified by querying the list of installed connectors."/>
    </resource-configuration>

    <service name="Endpoint"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
        >
      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="endpoint-config"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="protocol-bindings" required="false" type="string" readOnly="false" description="Protocol binding"/>
        <c:list-property name="property" required="false" description="A list of generic key/value properties.">
         <c:map-property name="property:collapsed" displayName="Property">
           <c:simple-property name="name:0" type="string" displayName="Name" required="true"/>
           <c:simple-property name="value:1" type="string" displayName="Value" required="true"/>
         </c:map-property>
        </c:list-property>
      </resource-configuration>

      <service name="Post Handler Chain"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
          >
        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="post-handler-chain"/>
        </plugin-configuration>

		<service name="Post Handler"
			 discovery="SubsystemDiscovery"
			 class="BaseComponent"
		    >

			<runs-inside>
			    <parent-resource-type name="Pre Handler Chain"  plugin="&pluginName;"/>
			    <parent-resource-type name="Post Handler Chain"  plugin="&pluginName;"/>
			</runs-inside>

		     <plugin-configuration>
			<c:simple-property name="path" readOnly="true" default="handler"/>
		     </plugin-configuration>
		     <resource-configuration>
			<c:simple-property name="class" required="true" type="string" readOnly="false" description="Handler class"/>
		     </resource-configuration>
		   </service>
      </service><!-- End of post handler chain service -->

      <service name="Pre Handler Chain"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
          >
        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="pre-handler-chain"/>
        </plugin-configuration>
        <resource-configuration>
          <c:simple-property name="protocol-bindings" required="false" type="string" readOnly="false" description="Protocol binding"/>
        </resource-configuration>

		<service name="Pre Handler"
			 discovery="SubsystemDiscovery"
			 class="BaseComponent"
		    >

			<runs-inside>
			    <parent-resource-type name="Pre Handler Chain"  plugin="&pluginName;"/>
			    <parent-resource-type name="Post Handler Chain"  plugin="&pluginName;"/>
			</runs-inside>

		     <plugin-configuration>
			<c:simple-property name="path" readOnly="true" default="handler"/>
		     </plugin-configuration>
		     <resource-configuration>
			<c:simple-property name="class" required="true" type="string" readOnly="false" description="Handler class"/>
		     </resource-configuration>
		   </service><!-- End of Pre Handler service definition -->
      </service> <!-- End of Pre Handler Chain service definition -->
    </service> <!-- End of Endpoint service definition -->

  </service>

  <service name="Naming"
           discovery="SubsystemDiscovery"
           class="NamingComponent"
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Host" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=naming"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <operation name="jndi-view" displayName="JNDIView" description="Peek at the JNDI tree">
      <results>
        <c:list-property name="java-contexts">
          <c:map-property name="context">
            <c:simple-property name="context"/>
            <c:simple-property name="name"/>
            <c:simple-property name="value"/>
          </c:map-property>
        </c:list-property>
        <c:list-property name="applications">
          <c:map-property name="context">
            <c:simple-property name="context"/>
            <c:simple-property name="name"/>
            <c:simple-property name="value"/>
          </c:map-property>
        </c:list-property>
      </results>
    </operation>

    <service name="Binding"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="JNDI bindings for primitive types"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="binding"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="binding-type" required="true" type="string" readOnly="false" description="The type of binding to create, may be simple, lookup or object-factory">
          <c:property-options>
            <c:option value="simple"/>
            <c:option value="lookup"/>
            <c:option value="object-factory"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="class" required="false" type="string" readOnly="false" description="The object factory class name for object factory bindings"/>
        <c:simple-property name="lookup" required="false" type="string" readOnly="false" description="The entry to lookup in JNDI for lookup bindings"/>
        <c:simple-property name="module" required="false" type="string" readOnly="false" description="The module to load the object factory from for object factory bindings"/>
        <c:simple-property name="type" required="false" type="string" readOnly="false" description="The type of the value to bind for simple bindings, this must be a primitive type"/>
        <c:simple-property name="value" required="false" type="string" readOnly="false" description="The value to bind for simple bindings"/>
      </resource-configuration>
    </service>

  </service>

  <service name="Transactions Subsystem (Standalone)"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           singleton="true"
           description="The transactions subsystem.">

    <runs-inside>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=transactions"/>
    </plugin-configuration>

    <metric property="number-of-nested-transactions" description="The total number of nested (sub) transactions created." measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-timed-out-transactions" description="The number of transactions that have rolled back due to timeout." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-committed-transactions" description="The number of committed transactions." measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-transactions" description="The total number of transactions (top-level and nested) created" measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-heuristics" description="The number of transactions which have terminated with heuristic outcomes." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-aborted-transactions" description="The number of aborted (i.e. rolledback) transactions." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-inflight-transactions" description="The number of transactions that have begun but not yet terminated." measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-application-rollbacks" description="The number of transactions that have been rolled back by application request. This includes those that timeout, since the timeout behaviour is considered an attribute of the application configuration." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-resource-rollbacks" description="The number of transactions that rolled back due to resource (participant) failure." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>

    <resource-configuration>
      <c:simple-property name="relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.data.dir" description="References a global path configuration in the domain model, defaulting to the JBoss Application Server data directory (jboss.server.data.dir). The value of the 'path' attribute will treated as relative to this path. Use an empty string to disable the default behavior and force the value of the 'path' attribute to be treated as an absolute path. The default value is jboss.server.data.dir."/>
      <c:simple-property name="process-id-uuid" required="false" type="boolean" readOnly="false" description="Indicates whether the transaction manager should use a UUID based process id."/>
      <c:simple-property name="socket-binding" required="false" type="string" readOnly="false" description="Used to reference the correct socket binding to use for the recovery environment."/>
      <c:simple-property name="jts" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true this enables the Java Transaction Service. The default value is false."/>
      <c:simple-property name="object-store-path" required="false" type="string" readOnly="false" defaultValue="tx-object-store" description="Denotes a relative or absolute filesystem path denoting where the transaction manager object store should store data. By default the value is treated as relative to the path denoted by the 'relative-to' attribute. The default value is tx-object-store."/>
      <c:simple-property name="path" required="false" type="string" readOnly="false" defaultValue="var" description="Denotes a relative or absolute filesystem path denoting where the transaction manager core should store data. By default the value is treated as relative to the path denoted by the 'relative-to' attribute. The default value is var."/>
      <c:simple-property name="process-id-socket-binding" required="false" type="string" readOnly="false" description="The name of the socket binding configuration to use if the transaction manager should use a socket-based process id. Will be 'undefined' if 'process-id-uuid' is 'true'; otherwise must be set."/>
      <c:simple-property name="default-timeout" required="false" type="integer" readOnly="false" defaultValue="300" description="The default timeout. The default value is 300."/>
      <c:simple-property name="process-id-socket-max-ports" required="false" type="integer" readOnly="false" defaultValue="10" description="The maximum number of ports to search for an open port if the transaction manager should use a socket-based process id. If the port specified by the socket binding referenced in 'process-id-socket-binding' is occupied, the next higher port will be tried until an open port is found or the number of ports specified by this attribute have been tried. Will be 'undefined' if 'process-id-uuid' is 'true'. The default value is 10."/>
      <c:simple-property name="recovery-listener" required="false" type="boolean" readOnly="false" defaultValue="false" description="Used to specify if the recovery system should listen on a network socket or not. The default value is false."/>
      <c:simple-property name="status-socket-binding" required="false" type="string" readOnly="false" description="Used to reference the correct socket binding to use for the transaction status manager."/>
      <c:simple-property name="node-identifier" required="false" type="string" readOnly="false" defaultValue="1" description="Used to set the node identifier on the core environment. The default value is 1."/>
      <c:simple-property name="enable-tsm-status" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether the transaction status manager (TSM) service, needed for out of process recovery, should be provided or not. The default value is false."/>
      <c:simple-property name="object-store-relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.data.dir" description="References a global path configuration in the domain model, defaulting to the JBoss Application Server data directory (jboss.server.data.dir). The value of the 'path' attribute will treated as relative to this path. Use an empty string to disable the default behavior and force the value of the 'path' attribute to be treated as an absolute path. The default value is jboss.server.data.dir."/>
      <c:simple-property name="enable-statistics" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether statistics should be enabled. The default value is false."/>
    </resource-configuration>

  </service>


  <service name="Transactions Subsystem (Domain)"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           singleton="true"
           description="The transactions subsystem.">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=transactions"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.data.dir" description="References a global path configuration in the domain model, defaulting to the JBoss Application Server data directory (jboss.server.data.dir). The value of the 'path' attribute will treated as relative to this path. Use an empty string to disable the default behavior and force the value of the 'path' attribute to be treated as an absolute path. The default value is jboss.server.data.dir."/>
      <c:simple-property name="process-id-uuid" required="false" type="boolean" readOnly="false" description="Indicates whether the transaction manager should use a UUID based process id."/>
      <c:simple-property name="socket-binding" required="false" type="string" readOnly="false" description="Used to reference the correct socket binding to use for the recovery environment."/>
      <c:simple-property name="jts" required="false" type="boolean" readOnly="false" defaultValue="false" description="If true this enables the Java Transaction Service. The default value is false."/>
      <c:simple-property name="object-store-path" required="false" type="string" readOnly="false" defaultValue="tx-object-store" description="Denotes a relative or absolute filesystem path denoting where the transaction manager object store should store data. By default the value is treated as relative to the path denoted by the 'relative-to' attribute. The default value is tx-object-store."/>
      <c:simple-property name="path" required="false" type="string" readOnly="false" defaultValue="var" description="Denotes a relative or absolute filesystem path denoting where the transaction manager core should store data. By default the value is treated as relative to the path denoted by the 'relative-to' attribute. The default value is var."/>
      <c:simple-property name="process-id-socket-binding" required="false" type="string" readOnly="false" description="The name of the socket binding configuration to use if the transaction manager should use a socket-based process id. Will be 'undefined' if 'process-id-uuid' is 'true'; otherwise must be set."/>
      <c:simple-property name="default-timeout" required="false" type="integer" readOnly="false" defaultValue="300" description="The default timeout. The default value is 300."/>
      <c:simple-property name="process-id-socket-max-ports" required="false" type="integer" readOnly="false" defaultValue="10" description="The maximum number of ports to search for an open port if the transaction manager should use a socket-based process id. If the port specified by the socket binding referenced in 'process-id-socket-binding' is occupied, the next higher port will be tried until an open port is found or the number of ports specified by this attribute have been tried. Will be 'undefined' if 'process-id-uuid' is 'true'. The default value is 10."/>
      <c:simple-property name="recovery-listener" required="false" type="boolean" readOnly="false" defaultValue="false" description="Used to specify if the recovery system should listen on a network socket or not. The default value is false."/>
      <c:simple-property name="status-socket-binding" required="false" type="string" readOnly="false" description="Used to reference the correct socket binding to use for the transaction status manager."/>
      <c:simple-property name="node-identifier" required="false" type="string" readOnly="false" defaultValue="1" description="Used to set the node identifier on the core environment. The default value is 1."/>
      <c:simple-property name="enable-tsm-status" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether the transaction status manager (TSM) service, needed for out of process recovery, should be provided or not. The default value is false."/>
      <c:simple-property name="object-store-relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.data.dir" description="References a global path configuration in the domain model, defaulting to the JBoss Application Server data directory (jboss.server.data.dir). The value of the 'path' attribute will treated as relative to this path. Use an empty string to disable the default behavior and force the value of the 'path' attribute to be treated as an absolute path. The default value is jboss.server.data.dir."/>
      <c:simple-property name="enable-statistics" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether statistics should be enabled. The default value is false."/>
    </resource-configuration>

  </service>


  <service name="Transactions Subsystem (Managed)"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           singleton="true"
           description="The transactions subsystem.">

    <runs-inside>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=transactions"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <metric property="number-of-nested-transactions" description="The total number of nested (sub) transactions created." measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-timed-out-transactions" description="The number of transactions that have rolled back due to timeout." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-committed-transactions" description="The number of committed transactions." measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-transactions" description="The total number of transactions (top-level and nested) created" measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-heuristics" description="The number of transactions which have terminated with heuristic outcomes." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-aborted-transactions" description="The number of aborted (i.e. rolledback) transactions." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-inflight-transactions" description="The number of transactions that have begun but not yet terminated." measurementType="trendsup" defaultInterval="300000" defaultOn="false"/>
    <metric property="number-of-application-rollbacks" description="The number of transactions that have been rolled back by application request. This includes those that timeout, since the timeout behaviour is considered an attribute of the application configuration." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>
    <metric property="number-of-resource-rollbacks" description="The number of transactions that rolled back due to resource (participant) failure." measurementType="trendsup" defaultInterval="300000" defaultOn="true"/>

  </service>


  <service name="Network Interface"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           description="A named network interface, along with required criteria for determining the IP address to associate with that interface">

    <runs-inside>
      <parent-resource-type name="JBossAS7 Host Controller" plugin="&pluginName;"/>
      <parent-resource-type name="Host" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="interface"/>
    </plugin-configuration>
  </service>


  <service name="SocketBindingGroup"
           discovery="SubsystemDiscovery"
           class="SocketBindingGroupComponent">

    <runs-inside>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Host Controller" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="socket-binding-group"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="default-interface" readOnly="true" displayName="Default Interface"
                         description="Default Interface for these bindings. See Network Interfaces for its definition"
                         required="true">
        <c:option-source target="resource" expression="type='Network Interface' plugin=&pluginName;"/>
      </c:simple-property>
      <!-- note: at domain level there is no port-offset -->
      <c:simple-property name="port-offset" readOnly="false" displayName="Port Offset"
                         description="Offset from standard ports for this group. This is only available in standalone mode"
                         required="false"/>
      <c:group name="children:socket-binding:name+" displayName="Individual socket bindings">
        <c:list-property name="*" displayName="Bindings">
          <c:map-property name="binding">
            <c:simple-property name="name" description="The name of the socket. Services which need to access the socket configuration information will find it using this name." readOnly="true"/>
            <c:simple-property name="interface" description="Name of the interface to which the socket should be bound, or, for multicast sockets, the interface on which it should listen. This should be one of the declared interfaces."
                               required="false">
              <c:option-source target="resource" expression="type='Network Interface' plugin=&pluginName;"/>
            </c:simple-property>
            <c:simple-property name="port:expr" displayName="Port" required="false" description="Number of the port to which the socket should be bound. ${} Expresions are allowed. Can be omitted if multicast-port is set."/>
            <c:simple-property name="fixed-port" description="Whether the port value should remain fixed even if numeric offsets are applied to the other sockets in the socket group."
                               type="boolean" defaultValue="false"/>
            <c:simple-property name="multicast-address" description="Multicast address on which the socket should receive multicast traffic. If unspecified, the socket will not be configured to receive multicast." required="false"/>
            <c:simple-property name="multicast-port:expr" displayName="Multicast Port" description="Port on which the socket should receive multicast traffic. Must be configured if 'multicast-address' is configured. ${} Expresions are allowed." required="false"/>
          </c:map-property>
        </c:list-property>
      </c:group>
    </resource-configuration>

  </service>


  <service name="Deployment"
           class="DeploymentComponent"
           discovery="SubsystemDiscovery"
           createDeletePolicy="both"
           creationDataType="content">

    <runs-inside>
      <parent-resource-type name="ServerGroup" plugin="&pluginName;"/>
      <!-- TODO -->
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="deployment" readOnly="true"/>
    </plugin-configuration>

    <operation name="enable">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>
    <operation name="disable">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>
    <operation name="restart">
      <results>
        <c:simple-property name="operationResult"/>
      </results>
    </operation>

    <metric property="status" dataType="trait" description="The current runtime status of a deployment. Possible status modes are OK, FAILED, and STOPPED. FAILED indicates a dependency is missing or a service could not start. STOPPED indicates that the deployment was manually stopped."/>

    <content name="file" category="deployable" isCreationType="true" description="Deployments on this server group">
      <configuration>
        <c:group name="deployment" displayName="Deployment Options">
          <c:simple-property name="runtimeName" required="false" description="Runtime name of the uploaded file (e.g. 'my.war'). If not present, the file name is used."/>
        </c:group>
      </configuration>
    </content>

    <resource-configuration>
      <c:list-property name="content" description="List of pieces of content that comprise the deployment." readOnly="true" >
        <c:map-property name="content" readOnly="true">
          <c:simple-property name="input-stream-index" type="integer" readOnly="true" description="The index into the operation's attached input streams of the input stream that contains deployment content that should be uploaded to the domain's or standalone server's deployment content repository."/>
          <c:simple-property name="hash" type="string" readOnly="true" description="The hash of managed deployment content that has been uploaded to the domain's or standalone server's deployment content repository."/>
          <c:simple-property name="bytes" type="string" readOnly="true" description="Byte array containing the deployment content that should uploaded to the domain's or standalone server's deployment content repository."/>
          <c:simple-property name="url" type="string" readOnly="true" description="The URL at which the deployment content is available for upload to the domain's or standalone server's deployment content repository.. Note that the URL must be accessible from the target of the operation (i.e. the Domain Controller or standalone server)."/>
          <c:simple-property name="path" type="string" readOnly="true" description="Path (relative or absolute) to unmanaged content that is part of the deployment."/>
          <c:simple-property name="relative-to" type="string" readOnly="true" description="Name of a system path to which the value of the 'path' is relative. If not set, the 'path' is considered to be absolute."/>
          <c:simple-property name="archive" type="boolean" readOnly="true" description="Flag indicating whether unmanaged content is a zip archive (true) or exploded (false)."/>
        </c:map-property>
      </c:list-property>
      <c:simple-property name="enabled" required="true" type="boolean" readOnly="true" description="Boolean indicating whether the deployment content is currently deployed in the runtime (or should be deployed in the runtime the next time the server starts.)"/>
      <c:simple-property name="name" required="true" type="string" readOnly="true" description="Unique identifier of the deployment. Must be unique across all deployments."/>
      <c:simple-property name="persistent" required="true" type="boolean" readOnly="true" description="Boolean indicating whether the existence of the deployment should be recorded in the persistent server configuration. Only relevant to a standalone mode server. Default is &apos;true&apos;. A deployment managed by a deployment scanner would have this set to &apos;false&apos; to ensure the deployment is only deployed at server start if the scanner again detects the deployment."/>
      <c:simple-property name="runtime-name" required="true" type="string" readOnly="true" description="Name by which the deployment should be known within a server runtime. This would be equivalent to the file name of a deployment file, and would form the basis for such things as default Java Enterprise Edition application and module names. This would typically be the same as 'name', but in some cases users may wish to have two deployments with the same runtime-name (e.g. two versions of foo.war) both available in the deployment content repository, in which case the deployments would need to have distinct name; values but would have the same runtime-name."/>
    </resource-configuration>

  </service>


  <service name="Subdeployment"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Runtime resources associated with a child deployment packaged inside another deployment; for example a war packaged inside an ear.">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
    </runs-inside>
    <plugin-configuration>
      <c:simple-property name="path" default="subdeployment" readOnly="true"/>
    </plugin-configuration>

  </service>


  <service name="Web Runtime"
           class="WebRuntimeComponent"
           discovery="SubsystemDiscovery"
           description="Runtime resources exposed by web components in the deployment."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      <parent-resource-type name="Subdeployment" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=web" readOnly="true"/>

      <c:group name="responseTime">
         <c:simple-property name="responseTimeLogFile" required="false"
                            description="the full path to the log file containing response-time stats for this webapp"/>
         <c:simple-property name="responseTimeUrlExcludes" required="false"
                            description="a space-delimited list of regular expressions specifying URLs that should be excluded from response-time stats collection"/>
         <c:simple-property name="responseTimeUrlTransforms" required="false"
                            description="a space-delimited list of Perl-style substitution expressions that should be applied to all URLs for which response-time stats are collected (e.g. |^/dept/finance/.*|/dept/finance/*|)"/>
      </c:group>
    </plugin-configuration>

    <metric property="virtual-host" dataType="trait" displayName="Virtual Host" description="the virtual host this webapp is deployed to"/>
    <metric property="context-root" dataType="trait" displayName="Context Root" description="the context root of this webapp"/>
    <metric property="responseTime"
            dataType="calltime" defaultOn="false" units="milliseconds" destinationType="URL"
            description="the minimum, maximum, and average response times for requests serviced by this webapp"/>

  </service>


  <service name="Datasources Runtime"
           class="DatasourceComponent"
           discovery="SubsystemDiscovery"
           description="Runtime resources exposed by data sources included in this deployment."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      <parent-resource-type name="Subdeployment" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=datasources" readOnly="true"/>
    </plugin-configuration>

    <service name="XA Datasource Runtime"
           class="DatasourceComponent"
           discovery="SubsystemDiscovery"
           description="A JDBC XA data-source configuration">

      <plugin-configuration>
        <c:simple-property name="path" default="xa-data-source" readOnly="true"/>
      </plugin-configuration>

      <operation name="subsystem:flush-all-connection-in-pool" description="Flushes all connections in the pool">
        <results>
          <c:simple-property name="operationResult" description="Flushes all connections in the pool" />
        </results>
      </operation>

      <operation name="subsystem:flush-idle-connection-in-pool" description="Flushes all idle connections in the pool">
        <results>
           <c:simple-property name="operationResult" description="Flushes all idle connections in the pool" />
        </results>
      </operation>

      <operation name="subsystem:test-connection-in-pool" description="Test if a connection can be obtained">
        <results>
           <c:simple-property name="operationResult" description="Test if a connection can be obtained" />
        </results>
      </operation>

      <resource-configuration>
        <c:simple-property name="allocation-retry" required="false" type="integer" readOnly="true" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception"/>
        <c:simple-property name="allocation-retry-wait-millis" required="false" type="long" readOnly="true" description="The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection"/>
        <c:simple-property name="background-validation" required="false" type="boolean" readOnly="true" defaultValue="false" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value can be done only on disabled datasource,  requires a server restart otherwise. The default value is false."/>
        <c:simple-property name="background-validation-millis" required="false" type="long" readOnly="true" description="The background-validation-millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value can be done only on disabled datasource,  requires a server restart otherwise"/>
        <c:simple-property name="blocking-timeout-wait-millis" required="false" type="long" readOnly="true" description="The blocking-timeout-millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time"/>
        <c:simple-property name="check-valid-connection-sql" required="false" type="string" readOnly="true" description="Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is obtained from the pool"/>
        <c:simple-property name="driver-name" required="true" type="string" readOnly="true" description="Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit"/>
        <c:simple-property name="enabled" required="false" type="boolean" readOnly="true" description="Specifies if the datasource should be enabled"/>
        <c:simple-property name="exception-sorter-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error"/>
        <c:map-property name="exception-sorter-properties" description="The exception sorter properties" >
          <c:simple-property name="exception-sorter-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true" description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
          <c:property-options>
            <c:option value="FailingConnectionOnly"/>
            <c:option value="IdleConnections"/>
            <c:option value="EntirePool"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="idle-timeout-minutes" required="false" type="long" readOnly="true" description="The idle-timeout-minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle-timeout-minutes value of any pool. Changing this value can be done only on disabled datasource, requires a server restart otherwise."/>
        <c:simple-property name="interleaving" required="false" type="boolean" readOnly="true" defaultValue="false" description="An element to enable interleaving for XA connections. The default value is false."/>
        <c:simple-property name="jndi-name" required="true" type="string" readOnly="true" description="Specifies the JNDI name for the datasource"/>
        <c:simple-property name="jta" required="false" type="boolean" readOnly="true" defaultValue="true" description="Enable JTA integration. The default value is true."/>
        <c:simple-property name="max-pool-size" required="false" type="integer" readOnly="true" defaultValue="20" description="The max-pool-size element specifies the maximum number of connections for a pool. No more connections will be created in each sub-pool. The default value is 20."/>
        <c:simple-property name="min-pool-size" required="false" type="integer" readOnly="true" defaultValue="0" description="The min-pool-size element specifies the minimum number of connections for a pool. The default value is 0."/>
        <c:simple-property name="new-connection-sql" required="false" type="string" readOnly="true" description="Specifies an SQL statement to execute whenever a connection is added to the connection pool"/>
        <c:simple-property name="no-recovery" required="false" type="boolean" readOnly="true" description="Specifies if the connection pool should be excluded from recovery"/>
        <c:simple-property name="no-tx-separate-pool" required="false" type="boolean" readOnly="true" defaultValue="false" description="Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub-pools for the different contexts. The default value is false."/>
        <c:simple-property name="pad-xid" required="false" type="boolean" readOnly="true" defaultValue="false" description="Should the Xid be padded. The default value is false."/>
        <c:simple-property name="password" required="false" type="string" readOnly="true" description="Specifies the password used when creating a new connection"/>
        <c:simple-property name="pool-prefill" required="false" type="boolean" readOnly="true" defaultValue="false" description="Should the pool be prefilled. Changing this value can be done only on disabled datasource, requires a server restart otherwise. The default value is false."/>
        <c:simple-property name="pool-use-strict-min" required="false" type="boolean" readOnly="true" defaultValue="false" description="Specifies if the min-pool-size should be considered strictly. The default value is false."/>
        <c:simple-property name="prepared-statements-cache-size" required="false" type="long" readOnly="true" description="The number of prepared statements per connection in an LRU cache"/>
        <c:simple-property name="query-timeout" required="false" type="long" readOnly="true" description="Any configured query timeout in seconds. If not provided no timeout will be set"/>
        <c:simple-property name="reauth-plugin-class-name" required="false" type="string" readOnly="true" description="The fully qualified class name of the reauthentication plugin implementation"/>
        <c:map-property name="reauth-plugin-properties" description="The properties for the reauthentication plugin" >
          <c:simple-property name="reauth-plugin-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="recovery-password" required="false" type="string" readOnly="true" description="The password used for recovery"/>
        <c:simple-property name="recovery-plugin-class-name" required="false" type="string" readOnly="true" description="The fully qualified class name of the recovery plugin implementation"/>
        <c:map-property name="recovery-plugin-properties" description="The properties for the recovery plugin" >
          <c:simple-property name="recovery-plugin-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="recovery-security-domain" required="false" type="string" readOnly="true" description="The security domain used for recovery"/>
        <c:simple-property name="recovery-username" required="false" type="string" readOnly="true" description="The user name used for recovery"/>
        <c:simple-property name="same-rm-override" required="false" type="boolean" readOnly="true" description="The is-same-rm-override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false"/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="Specifies the security domain which defines the javax.security.auth.Subject that are used to distinguish connections in the pool"/>
        <c:simple-property name="set-tx-query-timeout" required="false" type="boolean" readOnly="true" defaultValue="false" description="Whether to set the query timeout based on the time remaining until transaction timeout. Any configured query timeout will be used if there is no transaction. The default value is false."/>
        <c:simple-property name="share-prepared-statements" required="false" type="boolean" readOnly="true" defaultValue="false" description="Whether to share prepared statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement. The default value is false."/>
        <c:simple-property name="spy" required="false" type="boolean" readOnly="true" defaultValue="false" description="Enable spying of SQL statements. The default value is false."/>
        <c:simple-property name="stale-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException"/>
        <c:map-property name="stale-connection-checker-properties" description="The stale connection checker properties" >
          <c:simple-property name="stale-connection-checker-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="track-statements" required="false" type="string" readOnly="true" defaultValue="NOWARN" description="Whether to check for unclosed statements when a connection is returned to the pool, result sets are closed, a statement is closed or return to the prepared statement cache. Valid values are: 'false' - do not track statements, 'true' - track statements and result sets and warn when they are not closed, 'nowarn' - track statements but do not warn about them being unclosed. The default value is 'NOWARN'."/>
        <c:simple-property name="transaction-isolation" required="false" type="string" readOnly="true" description="Set the java.sql.Connection transaction isolation level. Valid values are: TRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE and TRANSACTION_NONE">
          <c:property-options>
            <c:option value="TRANSACTION_READ_UNCOMMITTED"/>
            <c:option value="TRANSACTION_READ_COMMITTED"/>
            <c:option value="TRANSACTION_REPEATABLE_READ"/>
            <c:option value="TRANSACTION_SERIALIZABLE"/>
            <c:option value="TRANSACTION_NONE"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="url-delimiter" required="false" type="string" readOnly="true" description="Specifies the delimeter for URLs in connection-url for HA datasources"/>
        <c:simple-property name="url-selector-strategy-class-name" required="false" type="string" readOnly="true" description="A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy"/>
        <c:simple-property name="use-ccm" required="false" type="boolean" readOnly="true" defaultValue="true" description="Enable the use of a cached connection manager. The default value is true."/>
        <c:simple-property name="use-fast-fail" required="false" type="boolean" readOnly="true" defaultValue="false" description="Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false). The default value is false."/>
        <c:simple-property name="use-java-context" required="false" type="boolean" readOnly="true" defaultValue="true" description="Setting this to false will bind the datasource into global JNDI. The default value is true."/>
        <c:simple-property name="use-try-lock" required="false" type="long" readOnly="true" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
        <c:simple-property name="user-name" required="false" type="string" readOnly="true" description="Specify the user name used when creating a new connection"/>
        <c:simple-property name="valid-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element"/>
        <c:map-property name="valid-connection-checker-properties" description="The valid connection checker properties" >
          <c:simple-property name="valid-connection-checker-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="validate-on-match" required="false" type="boolean" readOnly="true" defaultValue="false" description="The validate-on-match element specifies if connection validation should be done when a connection factory attempts to match a managed connection. This is typically exclusive to the use of background validation. The default value is false."/>
        <c:simple-property name="wrap-xa-resource" required="false" type="boolean" readOnly="true" defaultValue="true" description="Should the XAResource instances be wrapped in a org.jboss.tm.XAResourceWrapper instance. The default value is true."/>
        <c:simple-property name="xa-datasource-class" required="false" type="string" readOnly="true" description="The fully qualifed name of the javax.sql.XADataSource implementation"/>
        <c:simple-property name="xa-resource-timeout" required="false" type="integer" readOnly="true" description="The value is passed to XAResource.setTransactionTimeout(), in seconds. Default is zero"/>

        <c:group name="children:xa-datasource-properties:key+-" displayName="XA Datasource Properties">
          <c:list-property name="*2" displayName="Properties" required="false" readOnly="true">
            <c:map-property name="*:key" displayName="Name" readOnly="true">
              <c:simple-property name="key" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value" readOnly="true"/>
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
    </service>

    <service name="Datasource Runtime"
             class="DatasourceComponent"
             discovery="SubsystemDiscovery"
             description="A JDBC data-source configuration">

      <runs-inside>
        <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      </runs-inside>

      <plugin-configuration>
        <c:simple-property name="path" default="data-source" readOnly="true"/>
      </plugin-configuration>

      <operation name="subsystem:flush-all-connection-in-pool" description="Flushes all connections in the pool">
        <results>
          <c:simple-property name="operationResult" description="Flushes all connections in the pool" />
        </results>
      </operation>

      <operation name="subsystem:flush-idle-connection-in-pool" description="Flushes all idle connections in the pool">
        <results>
           <c:simple-property name="operationResult" description="Flushes all idle connections in the pool" />
        </results>
      </operation>

      <operation name="subsystem:test-connection-in-pool" description="Test if a connection can be obtained">
        <results>
           <c:simple-property name="operationResult" description="Test if a connection can be obtained" />
        </results>
      </operation>

      <resource-configuration>
        <c:simple-property name="allocation-retry" required="false" type="integer" readOnly="true" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception"/>
        <c:simple-property name="allocation-retry-wait-millis" required="false" type="long" readOnly="true" description="The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection"/>
        <c:simple-property name="background-validation" required="false" type="boolean" readOnly="true" defaultValue="false" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value can be done only on disabled datasource,  requires a server restart otherwise. The default value is false."/>
        <c:simple-property name="background-validation-millis" required="false" type="long" readOnly="true" description="The background-validation-millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value can be done only on disabled datasource,  requires a server restart otherwise"/>
        <c:simple-property name="blocking-timeout-wait-millis" required="false" type="long" readOnly="true" description="The blocking-timeout-millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time"/>
        <c:simple-property name="check-valid-connection-sql" required="false" type="string" readOnly="true" description="Specify an SQL statement to check validity of a pool connection. This may be called when managed connection is obtained from the pool"/>
        <c:simple-property name="connection-url" required="true" type="string" readOnly="true" description="The JDBC driver connection URL"/>
        <c:simple-property name="datasource-class" required="false" type="string" readOnly="true" description="The fully qualifed name of the JDBC datasource class"/>
        <c:simple-property name="driver-class" required="false" type="string" readOnly="true" description="The fully qualifed name of the JDBC driver class"/>
        <c:simple-property name="driver-name" required="true" type="string" readOnly="true" description="Defines the JDBC driver the datasource should use. It is a symbolic name matching the the name of installed driver. In case the driver is deployed as jar, the name is the name of deployment unit"/>
        <c:simple-property name="enabled" required="false" type="boolean" readOnly="true" description="Specifies if the datasource should be enabled"/>
        <c:simple-property name="exception-sorter-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ExceptionSorter that provides an isExceptionFatal(SQLException) method to validate if an exception should broadcast an error"/>
        <c:map-property name="exception-sorter-properties" description="The exception sorter properties" >
            <c:simple-property name="exception-sorter-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true" description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
          <c:property-options>
            <c:option value="FailingConnectionOnly"/>
            <c:option value="IdleConnections"/>
            <c:option value="EntirePool"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="idle-timeout-minutes" required="false" type="long" readOnly="true" description="The idle-timeout-minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle-timeout-minutes value of any pool. Changing this value can be done only on disabled datasource, requires a server restart otherwise."/>
        <c:simple-property name="jndi-name" required="true" type="string" readOnly="true" description="Specifies the JNDI name for the datasource"/>
        <c:simple-property name="jta" required="false" type="boolean" readOnly="true" defaultValue="true" description="Enable JTA integration. The default value is true."/>
        <c:simple-property name="max-pool-size" required="false" type="integer" readOnly="true" defaultValue="20" description="The max-pool-size element specifies the maximum number of connections for a pool. No more connections will be created in each sub-pool. The default value is 20."/>
        <c:simple-property name="min-pool-size" required="false" type="integer" readOnly="true" defaultValue="0" description="The min-pool-size element specifies the minimum number of connections for a pool. The default value is 0."/>
        <c:simple-property name="new-connection-sql" required="false" type="string" readOnly="true" description="Specifies an SQL statement to execute whenever a connection is added to the connection pool"/>
        <c:simple-property name="password" required="false" type="string" readOnly="true" description="Specifies the password used when creating a new connection"/>
        <c:simple-property name="pool-prefill" required="false" type="boolean" readOnly="true" defaultValue="false" description="Should the pool be prefilled. Changing this value can be done only on disabled datasource, requires a server restart otherwise. The default value is false."/>
        <c:simple-property name="pool-use-strict-min" required="false" type="boolean" readOnly="true" defaultValue="false" description="Specifies if the min-pool-size should be considered strictly. The default value is false."/>
        <c:simple-property name="prepared-statements-cache-size" required="false" type="long" readOnly="true" description="The number of prepared statements per connection in an LRU cache"/>
        <c:simple-property name="query-timeout" required="false" type="long" readOnly="true" description="Any configured query timeout in seconds. If not provided no timeout will be set"/>
        <c:simple-property name="reauth-plugin-class-name" required="false" type="string" readOnly="true" description="The fully qualified class name of the reauthentication plugin implementation"/>
        <c:map-property name="reauth-plugin-properties" description="The properties for the reauthentication plugin" >
            <c:simple-property name="reauth-plugin-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="Specifies the security domain which defines the javax.security.auth.Subject that are used to distinguish connections in the pool"/>
        <c:simple-property name="set-tx-query-timeout" required="false" type="boolean" readOnly="true" defaultValue="false" description="Whether to set the query timeout based on the time remaining until transaction timeout. Any configured query timeout will be used if there is no transaction. The default value is false."/>
        <c:simple-property name="share-prepared-statements" required="false" type="boolean" readOnly="true" defaultValue="false" description="Whether to share prepared statements, i.e. whether asking for same statement twice without closing uses the same underlying prepared statement. The default value is false."/>
        <c:simple-property name="spy" required="false" type="boolean" readOnly="true" defaultValue="false" description="Enable spying of SQL statements. The default value is false."/>
        <c:simple-property name="stale-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.StaleConnectionChecker that provides an isStaleConnection(SQLException) method which if it returns true will wrap the exception in an org.jboss.jca.adapters.jdbc.StaleConnectionException"/>
        <c:map-property name="stale-connection-checker-properties" description="The stale connection checker properties" >
            <c:simple-property name="stale-connection-checker-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="track-statements" required="false" type="string" readOnly="true" defaultValue="NOWARN" description="Whether to check for unclosed statements when a connection is returned to the pool, result sets are closed, a statement is closed or return to the prepared statement cache. Valid values are: &apos;false&apos; - do not track statements, &apos;true&apos; - track statements and result sets and warn when they are not closed, &apos;nowarn&apos; - track statements but do not warn about them being unclosed. The default value is &apos;NOWARN&apos;."/>
        <c:simple-property name="transaction-isolation" required="false" type="string" readOnly="true" description="Set the java.sql.Connection transaction isolation level. Valid values are: TRANSACTION_READ_UNCOMMITTED, TRANSACTION_READ_COMMITTED, TRANSACTION_REPEATABLE_READ, TRANSACTION_SERIALIZABLE and TRANSACTION_NONE">
           <c:property-options>
            <c:option value="TRANSACTION_READ_UNCOMMITTED"/>
            <c:option value="TRANSACTION_READ_COMMITTED"/>
            <c:option value="TRANSACTION_REPEATABLE_READ"/>
            <c:option value="TRANSACTION_SERIALIZABLE"/>
            <c:option value="TRANSACTION_NONE"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="url-delimiter" required="false" type="string" readOnly="true" description="Specifies the delimeter for URLs in connection-url for HA datasources"/>
        <c:simple-property name="url-selector-strategy-class-name" required="false" type="string" readOnly="true" description="A class that implements org.jboss.jca.adapters.jdbc.URLSelectorStrategy"/>
        <c:simple-property name="use-ccm" required="false" type="boolean" readOnly="true" defaultValue="true" description="Enable the use of a cached connection manager. The default value is true."/>
        <c:simple-property name="use-fast-fail" required="false" type="boolean" readOnly="true" defaultValue="false" description="Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false). The default value is false."/>
        <c:simple-property name="use-java-context" required="false" type="boolean" readOnly="true" defaultValue="true" description="Setting this to false will bind the datasource into global JNDI. The default value is true."/>
        <c:simple-property name="use-try-lock" required="false" type="long" readOnly="true" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
        <c:simple-property name="user-name" required="false" type="string" readOnly="true" description="Specify the user name used when creating a new connection"/>
        <c:simple-property name="valid-connection-checker-class-name" required="false" type="string" readOnly="true" description="An org.jboss.jca.adapters.jdbc.ValidConnectionChecker that provides an isValidConnection(Connection) method to validate a connection. If an exception is returned that means the connection is invalid. This overrides the check-valid-connection-sql element"/>
        <c:map-property name="valid-connection-checker-properties" description="The valid connection checker properties" >
            <c:simple-property name="valid-connection-checker-property" required="false" type="string" readOnly="true"/>
        </c:map-property>
        <c:simple-property name="validate-on-match" required="false" type="boolean" readOnly="true" defaultValue="false" description="The validate-on-match element specifies if connection validation should be done when a connection factory attempts to match a managed connection. This is typically exclusive to the use of background validation. The default value is false."/>

        <c:group name="children:connection-properties:pname+-" displayName="Connection Properties">
          <c:list-property name="*1" displayName="Connection Property" readOnly="true" required="false">
            <c:map-property name="*:pname" displayName="Name" readOnly="true">
              <c:simple-property name="pname" displayName="Property-Name" readOnly="true"/>
              <c:simple-property name="value" displayName="Value" readOnly="true"/>
            </c:map-property>
          </c:list-property>
        </c:group>
      </resource-configuration>
    </service>
  </service>

  <service name="Messaging Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Runtime resources exposed by messaging resources included in this deployment."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      <parent-resource-type name="Subdeployment" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=messaging" readOnly="true"/>
    </plugin-configuration>

    <service name="HornetQ Server Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="A HornetQ server instance.">

      <plugin-configuration>
        <c:simple-property name="path" default="hornetq-server" readOnly="true"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="allow-failback" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether this server will automatically shutdown if the original live server comes back up. The default value is true."/>
        <c:simple-property name="async-connection-execution-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether incoming packets on the server should be handed off to a thread from the thread pool for processing. False if they should be handled on the remoting thread. The default value is true."/>
        <c:simple-property name="backup" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether this server is a backup server. The default value is false."/>
        <c:simple-property name="cluster-password" required="false" type="string" readOnly="false" defaultValue="CHANGE ME!!" description="The password used by cluster connections to communicate between the clustered nodes. The default value is CHANGE ME!!."/>
        <c:simple-property name="cluster-user" required="false" type="string" readOnly="false" defaultValue="HORNETQ.CLUSTER.ADMIN.USER" description="The user used by cluster connections to communicate between the clustered nodes. The default value is HORNETQ.CLUSTER.ADMIN.USER."/>
        <c:simple-property name="clustered" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether the server is clustered. The default value is false."/>
        <c:simple-property name="connection-ttl-override" required="false" type="long" readOnly="false" defaultValue="-1" description="If set, this will override how long (in ms) to keep a connection alive without receiving a ping. The default value is -1."/>
        <c:simple-property name="create-bindings-dir" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server should create the bindings directory on start up. The default value is true."/>
        <c:simple-property name="create-journal-dir" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server should create the journal directory on start up. The default value is true."/>
        <c:simple-property name="failback-delay" required="false" type="long" readOnly="false" defaultValue="5000" description="How long to wait before failback occurs on live server restart. The default value is 5000."/>
        <c:simple-property name="failover-on-shutdown" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether this backup server (if it is a backup server) should come live on a normal server shutdown. The default value is false."/>
        <c:simple-property name="id-cache-size" required="false" type="integer" readOnly="false" defaultValue="2000" description="The size of the cache for pre-creating message IDs. The default value is 2000."/>
        <c:simple-property name="jmx-domain" required="false" type="string" readOnly="false" defaultValue="org.hornetq" description="The JMX domain used to register internal HornetQ MBeans in the MBeanServer. The default value is org.hornetq."/>
        <c:simple-property name="jmx-management-enabled" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether HornetQ should expose its internal management API via JMX. This is not recommended, as accessing these MBeans can lead to inconsistent configuration. The default value is false."/>
        <c:simple-property name="journal-buffer-size" required="false" type="long" readOnly="false" description="The size of the internal buffer on the journal."/>
        <c:simple-property name="journal-buffer-timeout" required="false" type="long" readOnly="false" description="The timeout (in nanoseconds) used to flush internal buffers on the journal."/>
        <c:simple-property name="journal-compact-min-files" required="false" type="integer" readOnly="false" defaultValue="10" description="The minimal number of journal data files before we can start compacting. The default value is 10."/>
        <c:simple-property name="journal-compact-percentage" required="false" type="integer" readOnly="false" defaultValue="30" description="The percentage of live data on which we consider compacting the journal. The default value is 30."/>
        <c:simple-property name="journal-file-size" required="false" type="long" readOnly="false" defaultValue="10485760" description="The size (in bytes) of each journal file. The default value is 10485760."/>
        <c:simple-property name="journal-max-io" required="false" type="integer" readOnly="false" description="The maximum number of write requests that can be in the AIO queue at any one time."/>
        <c:simple-property name="journal-min-files" required="false" type="integer" readOnly="false" defaultValue="2" description="How many journal files to pre-create. The default value is 2."/>
        <c:simple-property name="journal-sync-non-transactional" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether to wait for non transaction data to be synced to the journal before returning a response to the client. The default value is true."/>
        <c:simple-property name="journal-sync-transactional" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether to wait for transaction data to be synchronized to the journal before returning a response to the client. The default value is true."/>
        <c:simple-property name="journal-type" required="false" type="string" readOnly="false" defaultValue="ASYNCIO" description="The type of journal to use. The default value is ASYNCIO."/>
        <c:simple-property name="live-connector-ref" required="false" type="string" readOnly="false" description="The name of the connector used to connect to the live connector. If this server is not a backup that uses shared nothing HA, it&apos;s value is &apos;undefined&apos;."/>
        <c:simple-property name="log-journal-write-rate" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether to periodically log the journal&apos;s write rate and flush rate. The default value is false."/>
        <c:simple-property name="management-address" required="false" type="string" readOnly="false" defaultValue="jms.queue.hornetq.management" description="Address to send management messages to. The default value is jms.queue.hornetq.management."/>
        <c:simple-property name="management-notification-address" required="false" type="string" readOnly="false" defaultValue="hornetq.notifications" description="The name of the address that consumers bind to  to receive management notifications. The default value is hornetq.notifications."/>
        <c:simple-property name="memory-measure-interval" required="false" type="long" readOnly="false" defaultValue="-1" description="Frequency to sample JVM memory in ms (or -1 to disable memory sampling). The default value is -1."/>
        <c:simple-property name="memory-warning-threshold" required="false" type="integer" readOnly="false" defaultValue="25" description="Percentage of available memory which if exceeded results in a warning log. The default value is 25."/>
        <c:simple-property name="message-counter-enabled" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether message counters are enabled. The default value is false."/>
        <c:simple-property name="message-counter-max-day-history" required="false" type="integer" readOnly="false" defaultValue="10" description="How many days to keep message counter history. The default value is 10."/>
        <c:simple-property name="message-counter-sample-period" required="false" type="long" readOnly="false" defaultValue="10000" description="The sample period (in ms) to use for message counters. The default value is 10000."/>
        <c:simple-property name="message-expiry-scan-period" required="false" type="long" readOnly="false" defaultValue="30000" description="How often (in ms) to scan for expired messages. The default value is 30000."/>
        <c:simple-property name="message-expiry-thread-priority" required="false" type="integer" readOnly="false" defaultValue="3" description="The priority of the thread expiring messages. The default value is 3."/>
        <c:simple-property name="perf-blast-pages" required="false" type="integer" readOnly="false" defaultValue="-1" description="TODO. The default value is -1."/>
        <c:simple-property name="persist-delivery-count-before-delivery" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether the delivery count is persisted before delivery. False means that this only happens after a message has been cancelled. The default value is false."/>
        <c:simple-property name="persist-id-cache" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether IDs are persisted to the journal. The default value is true."/>
        <c:simple-property name="persistence-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server will use the file based journal for persistence. The default value is true."/>
        <c:list-property name="remoting-interceptors" description="The list of interceptor classes used by this server." >
            <c:simple-property name="remoting-interceptors" />
        </c:list-property>
        <c:simple-property name="run-sync-speed-test" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether on startup to perform a diagnostic test on how fast your disk can sync. Useful when determining performance issues. The default value is false."/>
        <c:simple-property name="scheduled-thread-pool-max-size" required="false" type="integer" readOnly="false" defaultValue="5" description="The number of threads that the main scheduled thread pool has. The default value is 5."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="false" defaultValue="other" description="The security domain to use to verify user and role information. The default value is other."/>
        <c:simple-property name="security-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether security is enabled. The default value is true."/>
        <c:simple-property name="security-invalidation-interval" required="false" type="long" readOnly="false" defaultValue="10000" description="How long (in ms) to wait before invalidating the security cache. The default value is 10000."/>
        <c:simple-property name="server-dump-interval" required="false" type="long" readOnly="false" defaultValue="-1" description="How often to dump basic runtime information to the server log. A value less than 1 disables this feature. The default value is -1."/>
        <c:simple-property name="shared-store" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether this server is using a shared store for failover. The default value is true."/>
        <c:simple-property name="started" required="false" type="boolean" readOnly="true" description="Whether this server is started."/>
        <c:simple-property name="thread-pool-max-size" required="false" type="integer" readOnly="false" defaultValue="30" description="The number of threads that the main thread pool has. -1 means no limit. The default value is 30."/>
        <c:simple-property name="transaction-timeout" required="false" type="long" readOnly="false" defaultValue="300000" description="How long (in ms) before a transaction can be removed from the resource manager after create time. The default value is 300000."/>
        <c:simple-property name="transaction-timeout-scan-period" required="false" type="long" readOnly="false" defaultValue="1000" description="How often (in ms) to scan for timeout transactions. The default value is 1000."/>
        <c:simple-property name="version" required="false" type="string" readOnly="true" description="The server&apos;s version."/>
        <c:simple-property name="wild-card-routing-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server supports wild card routing. The default value is true."/>
      </resource-configuration>

      <service name="JMS Queue Runtime"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Defines a JMS queue.">

        <plugin-configuration>
          <c:simple-property name="path" default="jms-queue" readOnly="true"/>
        </plugin-configuration>
      </service>
    </service>

  </service>

  <service name="EJB3 Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Runtime resources exposed by EJBs components included in this deployment."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      <parent-resource-type name="Subdeployment" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=ejb3" readOnly="true"/>
    </plugin-configuration>

    <service name="Message Driven Bean Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Bean component included in the deployment.">

      <plugin-configuration>
        <c:simple-property name="path" default="message-driven-bean" readOnly="true"/>
      </plugin-configuration>

      <metric property="pool-available-count" description="The number of available (i.e. not in use) instances in the pool."/>
      <metric property="pool-create-count" description="The number of bean instances that have been created."/>
      <metric property="pool-current-size" description="The current size of the pool."/>
      <metric property="pool-max-size" description="The maximum size of the pool."/>
      <metric property="pool-remove-count" description="The number of bean instances that have been removed."/>

      <resource-configuration>
        <c:simple-property name="component-class-name" required="false" type="string" readOnly="true" description="The component&apos;s class name."/>
        <c:list-property name="declared-roles" description="The roles declared (via @DeclareRoles) on this EJB component." >
          <c:simple-property name="declared-role" />
        </c:list-property>
        <c:simple-property name="run-as-role" required="false" type="string" readOnly="true" description="The run-as role (if any) for this EJB component."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="The security domain for this EJB component."/>
        <c:list-property name="timers" readOnly="true" description="EJB timers associated with the component.">
          <c:map-property name="timer" readOnly="true" description="EJB timer associated with the component.">
            <c:simple-property name="time-remaining" required="false" type="long" readOnly="true" description="The number of milliseconds that will elapse before the next scheduled timer expiration, or 'undefined' if the timer has no future timeouts, is expired, or has been cancelled."/>
            <c:simple-property name="next-timeout" required="false" type="long" readOnly="true" description="The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or 'undefined' if the timer has no future timeouts, is expired, or has been cancelled."/>
            <c:simple-property name="calendar-timer" required="false" type="boolean" readOnly="true" description="Whether this timer is a calendar-based timer, or 'undefined' if the timer has expired or been cancelled."/>
            <c:simple-property name="persistent" required="false" type="boolean" readOnly="true" description="Whether this timer has persistent semantics, or 'undefined' if the timer has expired or been cancelled."/>
            <c:map-property name="schedule" readOnly="true" description="The schedule expression corresponding to this timer, or 'undefined' if the timer was not created using a schedule expression, is expired, or has been cancelled.">
              <c:simple-property name="year" required="false" type="string" readOnly="true" description="A particular calendar year."/>
              <c:simple-property name="month" required="false" type="string" readOnly="true" description="One or more months within a year."/>
              <c:simple-property name="day-of-month" required="false" type="string" readOnly="true" description="One or more days within a month."/>
              <c:simple-property name="day-of-week" required="false" type="string" readOnly="true" description="One or more days within a week."/>
              <c:simple-property name="hour" required="false" type="string" readOnly="true" description="One or more hours within a day."/>
              <c:simple-property name="minute" required="false" type="string" readOnly="true" description="One or more minutes within a hour."/>
              <c:simple-property name="second" required="false" type="string" readOnly="true" description="One or more seconds within a minute."/>
              <c:simple-property name="timezone" required="false" type="string" readOnly="true" description="A non-default time zone in whose context the schedule specification is to be evaluated."/>
              <c:simple-property name="start" required="false" type="string" readOnly="true" description="The start date for the timer, in ms since the epoch."/>
              <c:simple-property name="end" required="false" type="string" readOnly="true" description="The end date for the timer, in ms since the epoch."/>
            </c:map-property>
          </c:map-property>
        </c:list-property>
      </resource-configuration>
    </service>

    <service name="Singleton Bean Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Singleton bean component included in the deployment.">

      <plugin-configuration>
        <c:simple-property name="path" default="singleton-bean" readOnly="true"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="component-class-name" required="false" type="string" readOnly="true" description="The component&apos;s class name."/>
        <c:list-property name="declared-roles" description="The roles declared (via @DeclareRoles) on this EJB component." >
          <c:simple-property name="declared-role" />
        </c:list-property>
        <c:simple-property name="run-as-role" required="false" type="string" readOnly="true" description="The run-as role (if any) for this EJB component."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="The security domain for this EJB component."/>
        <c:list-property name="timers" readOnly="true" description="EJB timers associated with the component.">
          <c:map-property name="timer" readOnly="true" description="EJB timer associated with the component.">
            <c:simple-property name="time-remaining" required="false" type="long" readOnly="true" description="The number of milliseconds that will elapse before the next scheduled timer expiration, or 'undefined' if the timer has no future timeouts, is expired, or has been cancelled."/>
            <c:simple-property name="next-timeout" required="false" type="long" readOnly="true" description="The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or 'undefined' if the timer has no future timeouts, is expired, or has been cancelled."/>
            <c:simple-property name="calendar-timer" required="false" type="boolean" readOnly="true" description="Whether this timer is a calendar-based timer, or 'undefined' if the timer has expired or been cancelled."/>
            <c:simple-property name="persistent" required="false" type="boolean" readOnly="true" description="Whether this timer has persistent semantics, or 'undefined' if the timer has expired or been cancelled."/>
            <c:map-property name="schedule" readOnly="true" description="The schedule expression corresponding to this timer, or 'undefined' if the timer was not created using a schedule expression, is expired, or has been cancelled.">
              <c:simple-property name="year" required="false" type="string" readOnly="true" description="A particular calendar year."/>
              <c:simple-property name="month" required="false" type="string" readOnly="true" description="One or more months within a year."/>
              <c:simple-property name="day-of-month" required="false" type="string" readOnly="true" description="One or more days within a month."/>
              <c:simple-property name="day-of-week" required="false" type="string" readOnly="true" description="One or more days within a week."/>
              <c:simple-property name="hour" required="false" type="string" readOnly="true" description="One or more hours within a day."/>
              <c:simple-property name="minute" required="false" type="string" readOnly="true" description="One or more minutes within a hour."/>
              <c:simple-property name="second" required="false" type="string" readOnly="true" description="One or more seconds within a minute."/>
              <c:simple-property name="timezone" required="false" type="string" readOnly="true" description="A non-default time zone in whose context the schedule specification is to be evaluated."/>
              <c:simple-property name="start" required="false" type="string" readOnly="true" description="The start date for the timer, in ms since the epoch."/>
              <c:simple-property name="end" required="false" type="string" readOnly="true" description="The end date for the timer, in ms since the epoch."/>
            </c:map-property>
          </c:map-property>
        </c:list-property>
      </resource-configuration>
    </service>

    <service name="Stateless Session Bean Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Stateless session bean component included in the deployment.">

      <plugin-configuration>
        <c:simple-property name="path" default="stateless-session-bean" readOnly="true"/>
      </plugin-configuration>

      <metric property="pool-available-count" description="The number of available (i.e. not in use) instances in the pool."/>
      <metric property="pool-create-count" description="The number of bean instances that have been created."/>
      <metric property="pool-current-size" description="The current size of the pool."/>
      <metric property="pool-max-size" description="The maximum size of the pool."/>
      <metric property="pool-remove-count" description="The number of bean instances that have been removed."/>

      <resource-configuration>
        <c:simple-property name="component-class-name" required="false" type="string" readOnly="true" description="The component&apos;s class name."/>
        <c:list-property name="declared-roles" description="The roles declared (via @DeclareRoles) on this EJB component." >
          <c:simple-property name="declared-role" />
        </c:list-property>
        <c:simple-property name="run-as-role" required="false" type="string" readOnly="true" description="The run-as role (if any) for this EJB component."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="The security domain for this EJB component."/>
        <c:list-property name="timers" readOnly="true" description="EJB timers associated with the component.">
          <c:map-property name="timer" readOnly="true" description="EJB timer associated with the component.">
            <c:simple-property name="time-remaining" required="false" type="long" readOnly="true" description="The number of milliseconds that will elapse before the next scheduled timer expiration, or 'undefined' if the timer has no future timeouts, is expired, or has been cancelled."/>
            <c:simple-property name="next-timeout" required="false" type="long" readOnly="true" description="The point in time (in ms since the epoch) at which the next timer expiration is scheduled to occur, or 'undefined' if the timer has no future timeouts, is expired, or has been cancelled."/>
            <c:simple-property name="calendar-timer" required="false" type="boolean" readOnly="true" description="Whether this timer is a calendar-based timer, or 'undefined' if the timer has expired or been cancelled."/>
            <c:simple-property name="persistent" required="false" type="boolean" readOnly="true" description="Whether this timer has persistent semantics, or 'undefined' if the timer has expired or been cancelled."/>
            <c:map-property name="schedule" readOnly="true" description="The schedule expression corresponding to this timer, or 'undefined' if the timer was not created using a schedule expression, is expired, or has been cancelled.">
              <c:simple-property name="year" required="false" type="string" readOnly="true" description="A particular calendar year."/>
              <c:simple-property name="month" required="false" type="string" readOnly="true" description="One or more months within a year."/>
              <c:simple-property name="day-of-month" required="false" type="string" readOnly="true" description="One or more days within a month."/>
              <c:simple-property name="day-of-week" required="false" type="string" readOnly="true" description="One or more days within a week."/>
              <c:simple-property name="hour" required="false" type="string" readOnly="true" description="One or more hours within a day."/>
              <c:simple-property name="minute" required="false" type="string" readOnly="true" description="One or more minutes within a hour."/>
              <c:simple-property name="second" required="false" type="string" readOnly="true" description="One or more seconds within a minute."/>
              <c:simple-property name="timezone" required="false" type="string" readOnly="true" description="A non-default time zone in whose context the schedule specification is to be evaluated."/>
              <c:simple-property name="start" required="false" type="string" readOnly="true" description="The start date for the timer, in ms since the epoch."/>
              <c:simple-property name="end" required="false" type="string" readOnly="true" description="The end date for the timer, in ms since the epoch."/>
            </c:map-property>
          </c:map-property>
        </c:list-property>
      </resource-configuration>
    </service>

    <service name="Entity Bean Runtime"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="Entity bean component included in the deployment.">

      <plugin-configuration>
        <c:simple-property name="path" default="entity-bean" readOnly="true"/>
      </plugin-configuration>

      <metric property="pool-available-count" description="The number of available (i.e. not in use) instances in the pool."/>
      <metric property="pool-create-count" description="The number of bean instances that have been created."/>
      <metric property="pool-current-size" description="The current size of the pool."/>
      <metric property="pool-max-size" description="The maximum size of the pool."/>
      <metric property="pool-remove-count" description="The number of bean instances that have been removed."/>

      <resource-configuration>
        <c:simple-property name="component-class-name" required="false" type="string" readOnly="true" description="The component&apos;s class name."/>
        <c:list-property name="declared-roles" description="The roles declared (via @DeclareRoles) on this EJB component." >
          <c:simple-property name="declared-roles" />
        </c:list-property>
        <c:simple-property name="run-as-role" required="false" type="string" readOnly="true" description="The run-as role (if any) for this EJB component."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="The security domain for this EJB component."/>
      </resource-configuration>
    </service>

    <service name="Stateful Session Bean Runtime"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="Stateful session bean component included in the deployment.">

      <plugin-configuration>
        <c:simple-property name="path" default="stateful-session-bean" readOnly="true"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="component-class-name" required="false" type="string" readOnly="true" description="The component&apos;s class name."/>
        <c:list-property name="declared-roles" description="The roles declared (via @DeclareRoles) on this EJB component." >
          <c:simple-property name="declared-role" />
        </c:list-property>
        <c:simple-property name="run-as-role" required="false" type="string" readOnly="true" description="The run-as role (if any) for this EJB component."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="true" description="The security domain for this EJB component."/>
      </resource-configuration>
    </service>

  </service>


  <service name="Webservices Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Runtime resources exposed by web service components in the deployment."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      <parent-resource-type name="Subdeployment" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=webservices" readOnly="true"/>
    </plugin-configuration>

    <service name="Endpoint Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Webservice endpoint.">

      <plugin-configuration>
        <c:simple-property name="path" default="endpoint" readOnly="true"/>
      </plugin-configuration>

      <metric property="average-processing-time" description="Average endpoint processing time."/>
      <metric property="fault-count" description="Count of faults the endpoint generated."/>
      <metric property="max-processing-time" description="Maximal endpoint processing time."/>
      <metric property="min-processing-time" description="Minimal endpoint processing time."/>
      <metric property="request-count" description="Count of requests the endpoint processed."/>
      <metric property="response-count" description="Count of responses the endpoint generated."/>
      <metric property="total-processing-time" description="Total endpoint processing time."/>

      <resource-configuration>
        <c:simple-property name="class" required="true" type="string" readOnly="true" description="Webservice endpoint class."/>
        <c:simple-property name="context" required="true" type="string" readOnly="true" description="Webservice endpoint context."/>
        <c:simple-property name="name" required="true" type="string" readOnly="true" description="Webservice endpoint name."/>
        <c:simple-property name="type" required="true" type="string" readOnly="true" description="Webservice endpoint type."/>
        <c:simple-property name="wsdl-url" required="true" type="string" readOnly="true" description="Webservice endpoint WSDL URL."/>
      </resource-configuration>
    </service>

  </service>

  <service name="JPA Runtime"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="The configuration of the JPA subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Deployment" plugin="&pluginName;"/>
      <parent-resource-type name="Subdeployment" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=jpa" readOnly="true"/>
    </plugin-configuration>

    <service name="Hibernate Persistence Unit"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="Runtime information about JPA use in the deployment."
             singleton="true">

      <plugin-configuration>
        <c:simple-property name="path" default="hibernate-persistance-unit" readOnly="true"/>
      </plugin-configuration>

      <operation name="subsystem:clear" description="Clear statistics.">
        <results>
           <c:simple-property name="operationResult" description="Clear statistics." />
        </results>
      </operation>

      <operation name="subsystem:evict-all" description="Evict all entities from second level cache.">
        <results>
           <c:simple-property name="operationResult" description="Evict all entities from second level cache." />
        </results>
      </operation>

      <operation name="subsystem:summary" description="Log the statistics.">
        <results>
           <c:simple-property name="operationResult" description="Log the statistics." />
        </results>
      </operation>

      <metric property="close-statement-count" displayType="summary" measurementType="trendsup" description="Number of released prepared statements."/>
      <metric property="collection-fetch-count" displayType="summary" measurementType="trendsup" description="Number of collections fetched."/>
      <metric property="collection-load-count" displayType="summary" measurementType="trendsup" description="Number of collections loaded."/>
      <metric property="collection-recreated-count" displayType="summary" measurementType="trendsup" description="Number of collections recreated."/>
      <metric property="collection-remove-count" displayType="summary" measurementType="trendsup" description="Number of collections removed."/>
      <metric property="collection-update-count" displayType="summary" measurementType="trendsup" description="Number of collections updated."/>
      <metric property="completed-transaction-count" displayType="summary" measurementType="trendsup" description="Number of completed transactions."/>
      <metric property="connect-count" displayType="summary" measurementType="trendsup" description="Get the number of connections asked for by the sessions."/>
      <metric property="entity-delete-count" displayType="summary" measurementType="trendsup" description="Get number of entity deletes."/>
      <metric property="entity-fetch-count" displayType="summary" measurementType="trendsup" description="Get number of entity fetches."/>
      <metric property="entity-insert-count" displayType="summary" measurementType="trendsup" description="Get number of entity inserts."/>
      <metric property="entity-load-count" displayType="summary" measurementType="trendsup" description="Get number of entity loads."/>
      <metric property="entity-update-count" displayType="summary" measurementType="trendsup" description="Get number of entity updates."/>
      <metric property="flush-count" displayType="summary" measurementType="trendsup" description="Get the number of flushes executed by sessions (either implicit or explicit)."/>
      <metric property="optimistic-failure-count" displayType="summary" measurementType="trendsup" description="Number of optimistic lock exceptions."/>
      <metric property="prepared-statement-count" displayType="summary" measurementType="trendsup" description="Number of acquired prepared statements."/>
      <metric property="query-cache-hit-count" displayType="summary" measurementType="trendsup" description="Get the number of cached queries successfully retrieved from cache."/>
      <metric property="query-cache-miss-count" displayType="summary" measurementType="trendsup" description="Get the number of cached queries not found in cache."/>
      <metric property="query-cache-put-count" displayType="summary" measurementType="trendsup" description="Get the number of cacheable queries put in cache."/>
      <metric property="query-execution-count" displayType="summary" measurementType="trendsup" description="Get number of executed queries."/>
      <metric property="query-execution-max-time" description="Get the time in milliseconds of the slowest query."/>
      <metric property="query-execution-max-time-query-string" dataType="trait" description="Get the query string for the slowest query."/>
      <metric property="second-level-cache-hit-count" displayType="summary" measurementType="trendsup" description="Number of cacheable entities/collections successfully retrieved from the cache."/>
      <metric property="second-level-cache-miss-count" displayType="summary" measurementType="trendsup" description="Number of cacheable entities/collections not found in the cache and loaded."/>
      <metric property="second-level-cache-put-count" displayType="summary" measurementType="trendsup" description="Number of cacheable entities/collections put in the cache."/>
      <metric property="session-close-count" displayType="summary" measurementType="trendsup" description="Number of sessions closed."/>
      <metric property="session-open-count" displayType="summary" measurementType="trendsup" description="Number of sessions opened."/>
      <metric property="successful-transaction-count" displayType="summary" measurementType="trendsup" description="Number of successful transactions."/>

      <resource-configuration>
        <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" description="Determine if statistics are enabled."/>
      </resource-configuration>

      <service name="Entity Cache"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Statistics for a Hibernate Second Level Cache region."
               singleton="true">

        <plugin-configuration>
          <c:simple-property name="path" default="entity-cache" readOnly="true"/>
        </plugin-configuration>

        <metric property="element-count-in-memory" description="Number of cacheable entities/collections currently stored in memory."/>
        <metric property="hit-count" description="Number of cacheable entities/collections successfully retrieved from the cache."/>
        <metric property="miss-count" description="Number of cacheable entities/collections not found in the cache and loaded."/>
        <metric property="put-count" description="Number of cacheable entities/collections put in the cache."/>
      </service>

      <service name="Query Cache"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Statistics for individual queries."
               singleton="true">

        <plugin-configuration>
          <c:simple-property name="path" default="query-cache" readOnly="true"/>
        </plugin-configuration>

        <metric property="query-cache-hit-count" displayType="summary" measurementType="trendsup" description="Get the number of times query was retrieved from cache."/>
        <metric property="query-cache-miss-count" displayType="summary" measurementType="trendsup" description="Get the number of times query was not found in cache."/>
        <metric property="query-cache-put-count" displayType="summary" measurementType="trendsup" description="Get the number of times query was put in cache."/>
        <metric property="query-execution-average-time" description="Get the average time in milliseconds of the query."/>
        <metric property="query-execution-count" displayType="summary" measurementType="trendsup" description="Get number of times query has been executed."/>
        <metric property="query-execution-max-time" description="Get the time in milliseconds of the query."/>
        <metric property="query-execution-min-time" description="Get the minimum time in milliseconds of the query."/>
        <metric property="query-execution-row-count" displayType="summary" measurementType="trendsup" description="Get number of rows returned from executions of query."/>
        <metric property="query-name" dataType="trait" description="Query name."/>
      </service>

      <service name="Entity"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Statistics for individual entities.">

        <plugin-configuration>
          <c:simple-property name="path" default="entity" readOnly="true"/>
        </plugin-configuration>

        <metric property="entity-delete-count" displayType="summary" measurementType="trendsup" description="Get number of entity deletes."/>
        <metric property="entity-fetch-count" displayType="summary" measurementType="trendsup" description="Get number of entity fetches."/>
        <metric property="entity-insert-count" displayType="summary" measurementType="trendsup" description="Get number of entity inserts."/>
        <metric property="entity-load-count" displayType="summary" measurementType="trendsup" description="Get number of entity loads."/>
        <metric property="entity-update-count" displayType="summary" measurementType="trendsup" description="Get number of entity updates."/>
        <metric property="optimistic-failure-count" displayType="summary" measurementType="trendsup" description="Number of optimistic lock exceptions."/>
      </service>

      <service name="Collection"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Statistics for individual collections.">

        <plugin-configuration>
          <c:simple-property name="path" default="collection" readOnly="true"/>
        </plugin-configuration>

        <metric property="collection-fetch-count" displayType="summary" measurementType="trendsup" description="Number of times collection was fetched."/>
        <metric property="collection-load-count" displayType="summary" measurementType="trendsup" description="Number of times collection was loaded."/>
        <metric property="collection-recreated-count" displayType="summary" measurementType="trendsup" description="Number of times collection was recreated."/>
        <metric property="collection-remove-count" displayType="summary" measurementType="trendsup" description="Number of times collection was removed."/>
        <metric property="collection-update-count" displayType="summary" measurementType="trendsup" description="Number of times collection was updated."/>
      </service>
    </service>

  </service>


  <service name="DeploymentScanner"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="Management of the deployment scanner"
           singleton="true"
      >
    <runs-inside>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=deployment-scanner" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <!--<c:simple-property name="default" readOnly="false" required="true" description="Scanner policy to use"/>-->
      <c:group name="children:scanner:name+-" displayName="Available scanners">
        <c:list-property name="*" displayName="Scanners" description="List of scanners">
          <c:map-property name="scanner">
            <c:simple-property name="name" required="true" type="string" readOnly="true" description="The name of the scanner"/>
            <c:simple-property name="path" required="true" type="string" readOnly="false"
                               description="The actual filesystem path to be scanned. Treated as an absolute path, unless the 'relative-to' attribute is specified, in which case the value is treated as relative to that path."/>
            <c:simple-property name="relative-to" required="false" type="string" readOnly="false"
                               description="Reference to a filesystem path defined in the 'paths' section of the server configuration."/>
            <c:simple-property name="scan-enabled" required="false" type="boolean" readOnly="false"
                               defaultValue="true" description="Flag indicating that all scanning (including initial scanning at startup) should be disabled."/>
            <c:simple-property name="scan-interval" required="false" type="integer" readOnly="false"
                               defaultValue="5000" description="Periodic interval, in milliseconds, at which the repository should be scanned for changes. A value of less than 1 indicates the repository should only be scanned at initial startup."/>
            <c:simple-property name="auto-deploy-zipped" required="false" type="boolean" readOnly="false"
                               defaultValue="true" description="Controls whether zipped deployment content should be automatically deployed by the scanner without requiring the user to add a .dodeploy marker file."/>
            <c:simple-property name="auto-deploy-exploded" required="false" type="boolean" readOnly="false"
                               defaultValue="false" description="Controls whether zipped deployment content should be automatically deployed by the scanner without requiring the user to add a .dodeploy marker file. Setting this to 'true' is not recommended for anything but basic development scenarios,  as there is no way to ensure that deployment will not occur in the middle of changes to the content."/>
            <c:simple-property name="deployment-timeout" required="false" type="long" readOnly="false"
                               defaultValue="60" description="Timeout, in seconds, a deployment is allows to execute before being canceled.  The default is 60 seconds."/>
          </c:map-property>
        </c:list-property>
      </c:group>

    </resource-configuration>

  </service>

  <service name="JacORB"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="JacORB subsystem configuration"
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=jacorb" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="add-component-via-interceptor" required="false" type="string" readOnly="false" defaultValue="on" description="Indicates whether SSL components should be added by an IOR interceptor (on) or not (off). The default value is on."/>
      <c:simple-property name="cache-poa-names" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether POA names should be cached (on) or not (off). The default value is off."/>
      <c:simple-property name="cache-typecodes" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether typecodes should be cached (on) or not (off). The default value is off."/>
      <c:simple-property name="chunk-custom-rmi-valuetypes" required="false" type="string" readOnly="false" defaultValue="on" description="Indicates whether custom RMI valuetypes should be encoded as chunks (on) or not (off). The default value is on."/>
      <c:simple-property name="client-requires" required="false" type="string" readOnly="false" defaultValue="None" description="Value that indicates the client SSL required parameters (None, ServerAuth, ClientAuth, MutualAuth). The default value is None."/>
      <c:simple-property name="client-supports" required="false" type="string" readOnly="false" defaultValue="MutualAuth" description="Value that indicates the client SSL supported parameters (None, ServerAuth, ClientAuth, MutualAuth). The default value is MutualAuth."/>
      <c:simple-property name="client-timeout" required="false" type="integer" readOnly="false" defaultValue="0" description="The client-side connection timeout value in milliseconds. A value of zero indicates that the connection never times out. The default value is 0."/>
      <c:simple-property name="comet" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether interoperability with Comet's ORB is enabled (on) or not (off). The default value is off."/>
      <c:simple-property name="export-corbaloc" required="false" type="string" readOnly="false" defaultValue="on" description="Indicates whether the root context should be exported as corbaloc::address:port/NameService (on) or not (off). The default value is on."/>
      <c:simple-property name="giop-minor-version" required="false" type="integer" readOnly="false" defaultValue="2" description="The GIOP minor version to be used. The default value is 2."/>
      <c:simple-property name="indirection-encoding-disable" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether indirection encoding for repeated typecodes should be disabled (on) or not (off). The default value is off."/>
      <c:simple-property name="iona" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether interoperability with IONA's ASP is enabled (on) or not (off). The default value is off."/>
      <c:simple-property name="lax-boolean-encoding" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether any non-zero CDR encoded boolean value should be interpreted as true (on) or not (off). The default value is off."/>
      <c:simple-property name="max-managed-buf-size" required="false" type="integer" readOnly="false" defaultValue="24" description="The log2 of maximum size managed by the internal buffer manager. The default value is 24."/>
      <c:simple-property name="max-server-connections" required="false" type="integer" readOnly="false" defaultValue="2147483647" description="The maximum number of connections accepted by the server. The default value is 2147483647."/>
      <c:simple-property name="max-threads" required="false" type="integer" readOnly="false" defaultValue="32" description="The maximum number of active request processor threads. Threads are first obtained from the pool and once the pool is exhausted new threads are created until the number of threads reaches this limit. New requests will wait until an active thread finishes its job. The default value is 32."/>
      <c:simple-property name="monitoring" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether the monitoring GUI should be displayed (on) or not (off). The default value is off."/>
      <c:simple-property name="name" required="false" type="string" readOnly="false" defaultValue="JBoss" description="The name of the running ORB. The default value is JBoss."/>
      <c:simple-property name="outbuf-cache-timeout" required="false" type="integer" readOnly="false" defaultValue="-1" description="The buffer cache timeout in milliseconds. The default value is -1."/>
      <c:simple-property name="outbuf-size" required="false" type="integer" readOnly="false" defaultValue="2048" description="The size of the network buffers for outgoing messages. The default value is 2048."/>
      <c:simple-property name="pool-size" required="false" type="integer" readOnly="false" defaultValue="5" description="The size of the request processors thread-pool. Threads that finish processing a request are placed back in the pool if the pool is not full and discarded otherwise. The default value is 5."/>
      <c:simple-property name="print-version" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether the version number should be printed during ORB startup (on) or not (off). The default value is off."/>
      <c:list-property name="properties" required="false" description="A list of generic key/value properties.">
        <c:map-property name="property:collapsed" displayName="Property">
          <c:simple-property name="name:0" type="string" displayName="Name" required="true"/>
          <c:simple-property name="value:1" type="string" displayName="Value" required="true"/>
        </c:map-property>
      </c:list-property>
      <c:simple-property name="queue-max" required="false" type="integer" readOnly="false" defaultValue="100" description="The maximum number of requests that can be queued. The default value is 100."/>
      <c:simple-property name="queue-min" required="false" type="integer" readOnly="false" defaultValue="10" description="The size of the queue for notifying waiting requests. In other words, blocked requests are only notified when the queue has no more than queue-min requests. The default value is 10."/>
      <c:simple-property name="queue-wait" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether requests that exceed the maximum queue size should wait (on) or not (off). When disabled, a TRANSIENT exception is thrown if the queue is full. The default value is off."/>
      <c:simple-property name="retries" required="false" type="integer" readOnly="false" defaultValue="5" description="The number of retries if connections cannot be promptly established. The default value is 5."/>
      <c:simple-property name="retry-interval" required="false" type="integer" readOnly="false" defaultValue="500" description="The interval in milliseconds between retries. The default value is 500."/>
      <c:simple-property name="root-context" required="false" type="string" readOnly="false" defaultValue="JBoss/Naming/root" description="The naming service root context. The default value is JBoss/Naming/root."/>
      <c:simple-property name="security" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether the security interceptors are to be installed (on) or not (off). The default value is off."/>
      <c:simple-property name="security-domain" required="false" type="string" readOnly="false" description="The name of the security domain that holds the key and trust stores that will be used to establish SSL connections."/>
      <c:simple-property name="server-requires" required="false" type="string" readOnly="false" defaultValue="None" description="Value that indicates the server SSL required parameters (None, ServerAuth, ClientAuth, MutualAuth). The default value is None."/>
      <c:simple-property name="server-supports" required="false" type="string" readOnly="false" defaultValue="MutualAuth" description="Value that indicates the server SSL supported parameters (None, ServerAuth, ClientAuth, MutualAuth). The default value is MutualAuth."/>
      <c:simple-property name="server-timeout" required="false" type="integer" readOnly="false" defaultValue="0" description="The server-side connection timeout value in milliseconds. A value of zero indicates that the connection never times out. The default value is 0."/>
      <c:simple-property name="strict-check-on-tc-creation" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether the method create_abstract_interface_tc should perform a validation check on the name parameter (on) or not (off). The default value is off."/>
      <c:simple-property name="sun" required="false" type="string" readOnly="false" defaultValue="on" description="Indicates whether interoperability with Sun's ORB is enabled (on) or not (off). The default value is on."/>
      <c:simple-property name="support-ssl" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether SSL is to be supported (on) or not (off). The default value is off."/>
      <c:simple-property name="transactions" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether the transactions interceptors are to be installed (on or spec) or not (off). The value 'on' enabled JTS while 'spec' enables a spec compliant mode (non JTS) that rejects incoming transaction contexts. The default value is off."/>
      <c:simple-property name="use-bom" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether GIOP 1.2 byte order markers should be used (on) or not (off). The default value is off."/>
      <c:simple-property name="use-imr" required="false" type="string" readOnly="false" defaultValue="off" description="Indicates whether the implementation repository should be used (on) or not (off). The default value is off."/>
    </resource-configuration>
  </service>


  <service name="JDR"
           class="JDRComponent"
           discovery="SubsystemDiscovery"
           description="JBoss Diagnostic Reporter (JDR) Subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=jdr" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <operation name="generate-jdr-report" displayName="Generate JDR Report" description="Request the generation of a JDR report.">
      <results>
        <c:simple-property name="start-time" required="false" type="string" readOnly="false"/>
        <c:simple-property name="end-time" required="false" type="string" readOnly="false"/>
        <c:simple-property name="report-location" required="false" type="string" readOnly="false"/>
      </results>
    </operation>

  </service>

  <service name="JCA"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="The Java EE Connector Architecture (JCA) subsystem providing general configuration for resource adapters"
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=jca" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:group name="child:bean-validation=bean-validation" displayName="Bean validation (JSR-303) for resource adapters.">
        <c:simple-property name="enabled:1" required="false" type="boolean" readOnly="false" defaultValue="true" displayName="Enabled" description="Specify whether bean validation is enabled. The default value is true."/>
      </c:group>
      <c:group name="child:archive-validation=archive-validation" displayName="Archive validation for resource adapters.">
        <c:simple-property name="enabled:2" required="false" type="boolean" readOnly="false" defaultValue="true" displayName="Enabled" description="Specify whether archive validation is enabled. The default value is true."/>
        <c:simple-property name="fail-on-error" required="false" type="boolean" readOnly="false" defaultValue="true" description="Should an archive validation error report fail the deployment. The default value is true."/>
        <c:simple-property name="fail-on-warn" required="false" type="boolean" readOnly="false" defaultValue="false" description="Should an archive validation warning report fail the deployment. The default value is false."/>
      </c:group>
      <c:group name="child:cached-connection-manager=cached-connection-manager" displayName="Cached connection manager for resource adapters.">
        <c:simple-property name="debug" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable/disable debug information logging. The default value is false."/>
        <c:simple-property name="error" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable/disable error information logging. The default value is false."/>
        <c:simple-property name="install" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enable/disable the cached connection manager valve and interceptor. The default value is false."/>
      </c:group>
    </resource-configuration>

    <service name="BootstrapContext"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="Bootstrap context for resource adapters."
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="bootstrap-context"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="name" required="false" type="string" readOnly="false" description="The name of the BootstrapContext"/>
        <c:simple-property name="workmanager" required="false" type="string" readOnly="false" description="The WorkManager instance for the BootstrapContext">
          <c:option-source target="resource" expression="type=Workmanager plugin=&pluginName;"/>
        </c:simple-property>
      </resource-configuration>
    </service>

    <service name="Workmanager"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="WorkManager for resource adapters."
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="workmanager"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="name" required="false" type="string" readOnly="false" description="The name of the WorkManager"/>
      </resource-configuration>

      <service name="Long Running Thread Pool"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Long running thread pool executor with a bounded queue where threads submitting tasks may block."
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="long-running-threads"/>
        </plugin-configuration>

        <metric property="current-thread-count" description="The current number of threads in the pool."/>
        <metric property="keepalive-time:time" description="The time"/>
        <metric property="largest-thread-count" description="The largest number of threads that have ever simultaneously been in the pool."/>
        <metric property="rejected-count" description="The number of tasks that have been passed to the handoff-executor (if one is specified) or discarded."/>

        <resource-configuration>
          <c:simple-property name="allow-core-timeout" required="false" type="boolean" readOnly="false" defaultValue="false" displayName="Allow Core Timeout" description="Whether core threads may time out. The default value is false."/>
          <c:simple-property name="core-threads:expr" required="false" type="integer" readOnly="false" displayName="Core Threads" description="The core thread pool size which is smaller than the maximum pool size. If undefined, the core thread pool size is the same as the maximum thread pool size."/>
          <c:map-property name="keepalive-time" required="true" displayName="Keepalive Time" description="Used to specify the amount of time that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down.">
            <c:simple-property name="time" required="true" type="long" readOnly="false" description="The time"/>
            <c:simple-property name="unit" required="true" type="string" readOnly="false" description="The time unit"/>
          </c:map-property>
          <c:simple-property name="max-threads:expr" required="true" type="integer" readOnly="false" displayName="Max Threads" description="The maximum thread pool size."/>
          <c:simple-property name="name" required="false" type="string" readOnly="true" displayName="Name" description="The name of the thread pool."/>
          <c:simple-property name="queue-length:expr" required="true" type="integer" readOnly="false" displayName="Queue Length" description="The queue length."/>
          <c:simple-property name="thread-factory" required="false" type="string" readOnly="false" displayName="Thread Factory" description="Specifies the name of a specific thread factory to use to create worker threads. If not defined an appropriate default thread factory will be used."/>
        </resource-configuration>
      </service>

      <service name="Short Running Thread Pool"
               class="BaseComponent"
               discovery="SubsystemDiscovery"
               description="Short running thread pool executor with a bounded queue where threads submitting tasks may block."
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="short-running-threads"/>
        </plugin-configuration>

        <metric property="current-thread-count" description="The current number of threads in the pool."/>
        <metric property="keepalive-time:time" description="The time"/>
        <metric property="largest-thread-count" description="The largest number of threads that have ever simultaneously been in the pool."/>
        <metric property="rejected-count" description="The number of tasks that have been passed to the handoff-executor (if one is specified) or discarded."/>

        <resource-configuration>
          <c:simple-property name="allow-core-timeout" required="false" type="boolean" readOnly="false" defaultValue="false" displayName="Allow Core Timeout" description="Whether core threads may time out. The default value is false."/>
          <c:simple-property name="core-threads:expr" required="false" type="integer" readOnly="false" displayName="Core Threads" description="The core thread pool size which is smaller than the maximum pool size. If undefined, the core thread pool size is the same as the maximum thread pool size."/>
          <c:map-property name="keepalive-time" required="true" displayName="Keepalive Time" description="Used to specify the amount of time that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down.">
            <c:simple-property name="time" required="true" type="long" readOnly="false" description="The time"/>
            <c:simple-property name="unit" required="true" type="string" readOnly="false" description="The time unit"/>
          </c:map-property>
          <c:simple-property name="max-threads:expr" required="true" type="integer" readOnly="false" displayName="Max Threads" description="The maximum thread pool size."/>
          <c:simple-property name="name" required="false" type="string" readOnly="true" displayName="Name" description="The name of the thread pool."/>
          <c:simple-property name="queue-length:expr" required="true" type="integer" readOnly="false" displayName="Queue Length" description="The queue length."/>
          <c:simple-property name="thread-factory" required="false" type="string" readOnly="false" displayName="Thread Factory" description="Specifies the name of a specific thread factory to use to create worker threads. If not defined an appropriate default thread factory will be used."/>
        </resource-configuration>
      </service>
    </service>

  </service>

  <service name="JAXR"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="The configuration of the JAXR subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=jaxr" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="connection-factory" required="false" type="string" readOnly="false" description="The JNDI name for the ConnectionFactory"/>
      <c:simple-property name="publish-url" required="false" type="string" readOnly="false" description="The jUDDI server publish URL"/>
      <c:simple-property name="query-url" required="false" type="string" readOnly="false" description="The jUDDI server query URL"/>
    </resource-configuration>

  </service>

  <service name="JPA"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="The configuration of the JPA subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=jpa" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="default-datasource" required="false" type="string" readOnly="false" description="The name of the default global datasource."/>
    </resource-configuration>

  </service>

  <service name="CMP"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="The configuration of the cmp subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=cmp" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="HiloKeygenerator"
             class="BaseComponent"
             discovery="SubsystemDiscovery"
             description="HiLo based key generators."
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="hilo-keygenerator"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="block-size" required="false" type="long" readOnly="true" description="The block size"/>
        <c:simple-property name="create-table" required="false" type="boolean" readOnly="true" description="Boolean to determine whether to create create the tables"/>
        <c:simple-property name="create-table-ddl" required="false" type="string" readOnly="true" description="The DDL used to create the table"/>
        <c:simple-property name="data-source" required="true" type="string" readOnly="true" description="The datasource used for sequence generation">
          <c:option-source target="resource" expression="type=DataSource plugin=&pluginName;"/>
        </c:simple-property>
        <c:simple-property name="drop-table" required="false" type="boolean" readOnly="true" description="Boolean to determine whether to create drop the tables"/>
        <c:simple-property name="id-column" required="false" type="string" readOnly="true" description="The ID column name"/>
        <c:simple-property name="select-hi-ddl" required="false" type="string" readOnly="true" description="The DDL used to select the hi value"/>
        <c:simple-property name="sequence-column" required="false" type="string" readOnly="true" description="The sequence column name"/>
        <c:simple-property name="sequence-name" required="false" type="string" readOnly="true" description="The name of the sequence"/>
        <c:simple-property name="table-name" required="false" type="string" readOnly="true" description="The table name"/>
      </resource-configuration>
    </service>

  </service>

  <service name="EE"
           class="BaseComponent"
           discovery="SubsystemDiscovery"
           description="The configuration of the EE subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" default="subsystem=ee" readOnly="true"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="ear-subdeployments-isolated" required="false" type="boolean" readOnly="false" defaultValue="false" description="Flag indicating whether each of the subdeployments within a .ear can access classes belonging to another subdeployment within the same .ear. A value of false means the subdeployments can see classes belonging to other subdeployments within the .ear. The default value is false."/>
      <c:list-property name="global-modules" description="A list of modules that should be made available to all deployments." required="false">
        <c:map-property name="globalmodule" displayName="Global module">
          <c:simple-property name="name" type="string" displayName="Name" required="true"/>
          <c:simple-property name="slot" type="string" displayName="Slot" required="true"/>
        </c:map-property>
      </c:list-property>
    </resource-configuration>
  </service>

  <service name="Security"
         discovery="SubsystemDiscovery"
         class="BaseComponent">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=security"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

   <operation name="add" description="Adds the security subsystem.">
     <parameters>
       <c:simple-property name="deep-copy-subject-mode" required="false" type="boolean" readOnly="false" description="Sets the copy mode of subjects done by the security managers to be deep copies that makes copies of the subject principals and credentials if they are cloneable. It should be set to true if subject include mutable content that can be corrupted when multiple threads have the same identity and cache flushes/logout clearing the subject in one thread results in subject references affecting other threads."/>
     </parameters>
     <results>
        <c:simple-property name="operationResult" description="Adds the security subsystem." />
     </results>
   </operation>

   <operation name="remove" description="Removes the security subsystem.">
     <results>
        <c:simple-property name="operationResult" description="Removes the security subsystem." />
     </results>
   </operation>

   <resource-configuration>
     <c:simple-property name="deep-copy-subject-mode" required="false" type="boolean" readOnly="false" defaultValue="false"
         description="Sets the copy mode of subjects done by the security managers to be deep copies that makes copies of the subject principals and credentials if they are cloneable. It should be set to true if subject include mutable content that can be corrupted when multiple threads have the same identity and cache flushes/logout clearing the subject in one thread results in subject references affecting other threads. The default value is false."/>
   </resource-configuration>

     <service name="Security Domain"
              discovery="SubsystemDiscovery"
              class="BaseComponent">

       <plugin-configuration>
           <c:simple-property name="path" readOnly="true" default="security-domain"/>
       </plugin-configuration>

       <operation name="add" description="Add a security domain.">
         <parameters>
           <c:simple-property name="cache-type" required="false" type="string" readOnly="false" description="Adds a cache to speed up authentication checks. Allowed values are &apos;default&apos; to use simple map as the cache and &apos;infinispan&apos; to use an Infinispan cache."/>
         </parameters>
         <results>
            <c:simple-property name="operationResult" description="Add a security domain." />
         </results>
       </operation>

       <operation name="flush-cache" description="Remove entries stored in the authentication cache for this security domain. A single entry can be flushed by using the principal argument with the username as the value. If no argument is passed to the operation, all entries are flushed.">
         <results>
            <c:simple-property name="operationResult" description="Remove entries stored in the authentication cache for this security domain. A single entry can be flushed by using the principal argument with the username as the value. If no argument is passed to the operation, all entries are flushed." />
         </results>
       </operation>

       <operation name="list-cached-principals" description="Lists the principals stored in the authentication cache for this security domain.">
         <results>
            <c:simple-property name="operationResult" description="Lists the principals stored in the authentication cache for this security domain." />
         </results>
       </operation>

       <operation name="remove" description="Remove a security domain.">
         <results>
            <c:simple-property name="operationResult" description="Remove a security domain." />
         </results>
       </operation>

       <resource-configuration>
         <c:simple-property name="cache-type" required="false" type="string" readOnly="false" description="Adds a cache to speed up authentication checks. Allowed values are &apos;default&apos; to use simple map as the cache and &apos;infinispan&apos; to use an Infinispan cache."/>
       </resource-configuration>

         <service name="acl"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="acl"/>
             </plugin-configuration>

           <operation name="add" description="Adds an ACL configuration">
             <parameters>
               <c:simple-property name="acl-modules" required="true" type="string" readOnly="false" description="List of acl modules"/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds an ACL configuration" />
             </results>
           </operation>

           <operation name="remove" description="Removes an ACL configuration">
             <results>
                <c:simple-property name="operationResult" description="Removes an ACL configuration" />
             </results>
           </operation>

           <resource-configuration>
             <c:list-property name="acl-modules" required="false" description="List of acl modules" >
                 <c:simple-property name="acl-modules" />
             </c:list-property>
           </resource-configuration>

         </service>
         <service name="audit"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="audit"/>
             </plugin-configuration>

           <operation name="add" description="Adds an audit configuration">
             <parameters>
               <c:simple-property name="provider-modules" required="true" type="string" readOnly="false" description="List of provider modules"/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds an audit configuration" />
             </results>
           </operation>

           <operation name="remove" description="Removes and audit configuration">
             <results>
                <c:simple-property name="operationResult" description="Removes and audit configuration" />
             </results>
           </operation>

           <resource-configuration>
             <c:list-property name="provider-modules" required="false" description="List of provider modules" >
                 <c:simple-property name="provider-modules" />
             </c:list-property>
           </resource-configuration>

         </service>
         <service name="authentication"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="authentication"/>
             </plugin-configuration>

           <operation name="add" description="Adds a traditional authentication configuration">
             <parameters>
               <c:simple-property name="login-modules" required="true" type="string" readOnly="false" description="List of authentication modules"/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds a traditional authentication configuration" />
             </results>
           </operation>

           <operation name="remove" description="Removes a traditional authentication configuration">
             <results>
                <c:simple-property name="operationResult" description="Removes a traditional authentication configuration" />
             </results>
           </operation>

           <resource-configuration>
             <c:list-property name="login-modules" required="false" description="List of authentication modules" >
                 <c:simple-property name="login-modules" />
             </c:list-property>
           </resource-configuration>

         </service>
         <service name="authorization"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="authorization"/>
             </plugin-configuration>

           <operation name="add" description="Adds an authorization configuration">
             <parameters>
               <c:simple-property name="policy-modules" required="true" type="string" readOnly="false" description="List of authorization modules"/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds an authorization configuration" />
             </results>
           </operation>

           <operation name="remove" description="Removes an authorization configuration">
             <results>
                <c:simple-property name="operationResult" description="Removes an authorization configuration" />
             </results>
           </operation>

           <resource-configuration>
             <c:list-property name="policy-modules" required="false" description="List of authorization modules" >
                 <c:simple-property name="policy-modules" />
             </c:list-property>
           </resource-configuration>

         </service>
         <service name="identity-trust"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="identity-trust"/>
             </plugin-configuration>

           <operation name="add" description="Adds an identity trust configuration.">
             <parameters>
               <c:simple-property name="trust-modules" required="true" type="string" readOnly="false" description="List of trust modules"/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds an identity trust configuration." />
             </results>
           </operation>

           <operation name="remove" description="Removes an identity trust configuration.">
             <results>
                <c:simple-property name="operationResult" description="Removes an identity trust configuration." />
             </results>
           </operation>

           <resource-configuration>
             <c:list-property name="trust-modules" required="false" description="List of trust modules" >
                 <c:simple-property name="trust-modules" />
             </c:list-property>
           </resource-configuration>

         </service>
         <service name="jsse"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="jsse"/>
             </plugin-configuration>

           <operation name="add" description="Adds a JSSE configuration">
             <parameters>
               <c:simple-property name="client-auth" required="false" type="boolean" readOnly="false" description="Boolean attribute to indicate if client&apos;s certificates should also be authenticated on the server side."/>
	    <c:simple-property name="protocols" required="false" type="string" readOnly="false" description="Comma separated list of protocols to enable on SSLSockets."/>
	    <c:simple-property name="truststore" required="false" type="string" readOnly="false" description="Configures a JSSE trust store"/>
	    <c:simple-property name="trust-manager" required="false" type="string" readOnly="false" description="JSEE Trust Manager factory"/>
	    <c:simple-property name="key-manager" required="false" type="string" readOnly="false" description="JSEE Key Manager factory"/>
	    <c:simple-property name="service-auth-token" required="false" type="string" readOnly="false" description="Token to retrieve PrivateKeys from the KeyStore."/>
	    <c:simple-property name="keystore" required="false" type="string" readOnly="false" description="Configures a JSSE key store"/>
	    <c:simple-property name="additional-properties" required="false" type="string" readOnly="false" description="Additional properties that may be necessary to configure JSSE."/>
	    <c:simple-property name="server-alias" required="false" type="string" readOnly="false" description="Preferred alias to use when the KeyManager chooses the server alias."/>
	    <c:simple-property name="client-alias" required="false" type="string" readOnly="false" description="Preferred alias to use when the KeyManager chooses the client alias."/>
	    <c:simple-property name="cipher-suites" required="false" type="string" readOnly="false" description="Comma separated list of cipher suites to enable on SSLSockets."/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds a JSSE configuration" />
             </results>
           </operation>

           <operation name="remove" description="Removes a JSSE configuration.">
             <results>
                <c:simple-property name="operationResult" description="Removes a JSSE configuration." />
             </results>
           </operation>

           <resource-configuration>
             <c:simple-property name="cipher-suites" required="false" type="string" readOnly="false" description="Comma separated list of cipher suites to enable on SSLSockets."/>
             <c:simple-property name="client-alias" required="false" type="string" readOnly="false" description="Preferred alias to use when the KeyManager chooses the client alias."/>
             <c:simple-property name="client-auth" required="false" type="boolean" readOnly="false" description="Boolean attribute to indicate if client&apos;s certificates should also be authenticated on the server side."/>
             <c:map-property name="key-manager" required="false" description="JSEE Key Manager factory" >
                 <c:simple-property name="algorithm" required="false" type="string" readOnly="true" description="Algorithm to use when creating the KeyManagerFactory."/>
                 <c:simple-property name="provider" required="false" type="string" readOnly="true" description="Provider class name to use when creating the KeyManagerFactory."/>
             </c:map-property>
             <c:map-property name="keystore" required="false" description="Configures a JSSE key store" >
                 <c:simple-property name="password" required="false" type="string" readOnly="true" description="Sets the password of the keystore. Either this or &apos;truststore&#45;password&apos; must be present otherwise the security domain will be useless."/>
                 <c:simple-property name="type" required="false" type="string" readOnly="true" description="Type of the keystore. If not set, type defaults to &apos;JKS&apos;."/>
                 <c:simple-property name="url" required="false" type="string" readOnly="true" description="URL of the keystore."/>
                 <c:simple-property name="provider" required="false" type="string" readOnly="true" description="Provider class name to use when creating the KeyStore."/>
                 <c:simple-property name="provider-argument" required="false" type="string" readOnly="true" description="String argument to pass to the keystore Provider constructor when instantiating it."/>
             </c:map-property>
             <c:simple-property name="protocols" required="false" type="string" readOnly="false" description="Comma separated list of protocols to enable on SSLSockets."/>
             <c:simple-property name="server-alias" required="false" type="string" readOnly="false" description="Preferred alias to use when the KeyManager chooses the server alias."/>
             <c:simple-property name="service-auth-token" required="false" type="string" readOnly="false" description="Token to retrieve PrivateKeys from the KeyStore."/>
             <c:map-property name="trust-manager" required="false" description="JSEE Trust Manager factory" >
                 <c:simple-property name="algorithm" required="false" type="string" readOnly="true" description="Algorithm to use when creating the TrustManagerFactory."/>
                 <c:simple-property name="provider" required="false" type="string" readOnly="true" description="Provider class name to use when creating the TrustManagerFactory."/>
             </c:map-property>
             <c:map-property name="truststore" required="false" description="Configures a JSSE trust store" >
                 <c:simple-property name="password" required="false" type="string" readOnly="true" description="Sets the password of the truststore. Either this or &apos;keystore&#45;password&apos; must be present otherwise the security domain will be useless."/>
                 <c:simple-property name="type" required="false" type="string" readOnly="true" description="Type of the truststore. If not set, type defaults to &apos;JKS&apos;."/>
                 <c:simple-property name="url" required="false" type="string" readOnly="true" description="URL of the truststore."/>
                 <c:simple-property name="provider" required="false" type="string" readOnly="true" description="Provider class name to use when creating the truststore."/>
                 <c:simple-property name="provider-argument" required="false" type="string" readOnly="true" description="String argument to pass to the truststore Provider constructor when instantiating it."/>
             </c:map-property>
           </resource-configuration>

         </service>
         <service name="mapping"
                  discovery="SubsystemDiscovery"
                  class="BaseComponent">

             <plugin-configuration>
               <c:simple-property name="path" readOnly="true" default="mapping"/>
             </plugin-configuration>

           <operation name="add" description="Adds a mapping configuration.">
             <parameters>
               <c:simple-property name="mapping-modules" required="true" type="string" readOnly="false" description="List of modules that map principal, role, and credential information"/>
             </parameters>
             <results>
                <c:simple-property name="operationResult" description="Adds a mapping configuration." />
             </results>
           </operation>

           <operation name="remove" description="Removes a mapping configuration.">
             <results>
                <c:simple-property name="operationResult" description="Removes a mapping configuration." />
             </results>
           </operation>

           <resource-configuration>
             <c:list-property name="mapping-modules" required="false" description="List of modules that map principal, role, and credential information" >
                 <c:simple-property name="mapping-modules" />
             </c:list-property>
           </resource-configuration>

         </service>
     </service>
     <service name="vault"
              discovery="SubsystemDiscovery"
              class="BaseComponent">

         <plugin-configuration>
           <c:simple-property name="path" readOnly="true" default="vault"/>
         </plugin-configuration>

       <operation name="add" description="Adds a security vault configuration">
         <parameters>
           <c:simple-property name="code" required="false" type="string" readOnly="false" description="Fully Qualified Name of the Security Vault Implementation."/>
    <c:simple-property name="options" required="false" type="string" readOnly="false" description="Security Vault options."/>
         </parameters>
         <results>
            <c:simple-property name="operationResult" description="Adds a security vault configuration" />
         </results>
       </operation>

       <operation name="remove" description="Removes a security vault configuration">
         <results>
            <c:simple-property name="operationResult" description="Removes a security vault configuration" />
         </results>
       </operation>

       <resource-configuration>
         <c:simple-property name="code" required="false" type="string" readOnly="false" description="Fully Qualified Name of the Security Vault Implementation."/>
       </resource-configuration>

     </service>
  </service><!-- End of Security subsystem service -->


  <service name="Threads"
           discovery="SubsystemDiscovery"
           class="ThreadsComponent"
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=threads"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="ThreadFactory"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A thread factory (implementing java.util.concurrent.ThreadFactory)."
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="thread-factory"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="group-name" required="false" type="string" readOnly="false" description="Specifies the name of a  thread group to create for this thread factory."/>
        <c:simple-property name="name" required="false" type="string" readOnly="true" description="The name of the created thread factory."/>
        <c:simple-property name="priority:expr" required="false" type="string" readOnly="false" defaultValue="-1" displayName="Priority" description="May be used to specify the thread priority of created threads. The default value is -1."/>
        <c:simple-property name="thread-name-pattern" required="false" type="string" readOnly="false" description="The template used to create names for threads.  The following patterns may be used:
              %% - emit a percent sign
              %t - emit the per-factory thread sequence number
              %g - emit the global thread sequence number
              %f - emit the factory sequence number
              %i - emit the thread ID."/>
      </resource-configuration>
    </service>

    <service name="ThreadPool"
             discovery="SubsystemDiscovery"
             class="ThreadPoolComponent"
             description="A thread pool executor"
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="bounded-queue-thread-pool|queueless-thread-pool|scheduled-thread-pool|unbounded-queue-thread-pool"/>
      </plugin-configuration>

      <metric property="active-count" description="The approximate number of threads that are actively executing tasks."/>
      <metric property="completed-task-count" description="The approximate total number of tasks that have completed execution."/>
      <metric property="current-thread-count" description="The current number of threads in the pool."/>
      <metric property="largest-thread-count" description="The largest number of threads that have ever simultaneously been in the pool."/>
      <metric property="rejected-count" description="The number of tasks that have been rejected."/>
      <metric property="task-count" description="The approximate total number of tasks that have ever been scheduled for execution."/>

      <resource-configuration>
        <c:map-property name="keepalive-time" readOnly="false" description="Used to specify the amount of time that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down.">
          <c:simple-property name="time" required="true" readOnly="false" type="long" description="The time"/>
          <c:simple-property name="unit" required="true" readOnly="false" type="string" description="The time unit"/>
        </c:map-property>
        <c:simple-property name="max-threads:expr" required="true" type="string" readOnly="false" displayName="Max Threads" description="The maximum thread pool size."/>
        <c:simple-property name="name" required="false" type="string" readOnly="true" description="The name of the thread pool."/>
        <c:simple-property name="thread-factory" required="false" type="string" readOnly="false" description="Specifies the name of a specific thread factory to use to create worker threads. If not defined an appropriate default thread factory will be used."/>

        <c:simple-property name="type" readOnly="true" default="scheduled-thread-pool" displayName="Thread Pool Type" description="Thread pool type">
          <c:property-options>
            <c:option value="bounded-queue-thread-pool"/>
            <c:option value="queueless-thread-pool"/>
            <c:option value="unbounded-queue-thread-pool"/>
            <c:option value="scheduled-thread-pool"/>
          </c:property-options>
        </c:simple-property>
        <c:template name="Bounded Queue Thread Pool" description="Bounded Queue Thread Pool">
          <c:simple-property name="type" readOnly="true" default="bounded-queue-thread-pool"/>
        </c:template>
        <c:template name="Queueless Thread Pool" description="Queueless Thread Pool">
          <c:simple-property name="type" readOnly="true" default="queueless-thread-pool"/>
        </c:template>
        <c:template name="Scheduled Thread Pool" description="Scheduled Thread Pool">
          <c:simple-property name="type" readOnly="true" default="scheduled-thread-pool"/>
        </c:template>
        <c:template name="Unbounded Queue Thread Pool" description="Unbounded Queue Thread Pool">
          <c:simple-property name="type" readOnly="true" default="unbounded-queue-thread-pool"/>
        </c:template>
      </resource-configuration>
    </service>

  </service>


  <service name="EJB3"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           description="The configuration of the ejb3 subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=ejb3"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="default-clustered-sfsb-cache" required="false" type="string" readOnly="false" description="Name of the default stateful bean cache, which will be applicable to all clustered stateful EJBs, unless overridden at the deployment or bean level"/>
      <c:simple-property name="default-entity-bean-instance-pool" required="false" type="string" readOnly="false" description="Name of the default entity bean instance pool, which will be applicable to all entity beans, unless overridden at the deployment or bean level"/>
      <c:simple-property name="default-entity-bean-optimistic-locking" required="false" type="boolean" readOnly="false" description="If set to true entity beans will use optimistic locking by default"/>
      <c:simple-property name="default-mdb-instance-pool" required="false" type="string" readOnly="false" description="Name of the default MDB instance pool, which will be applicable to all MDBs, unless overridden at the deployment or bean level"/>
      <c:simple-property name="default-resource-adapter-name" required="false" type="string" readOnly="false" defaultValue="hornetq-ra" description="Name of the default resource adapter name that will be used by MDBs, unless overridden at the deployment or bean level. The default value is hornetq-ra."/>
      <c:simple-property name="default-sfsb-cache" required="false" type="string" readOnly="false" description="Name of the default stateful bean cache, which will be applicable to all stateful EJBs, unless overridden at the deployment or bean level"/>
      <c:simple-property name="default-singleton-bean-access-timeout:expr" required="false" type="string" readOnly="false" defaultValue="5000" description="The default access timeout for singleton beans. The default value is 5000."/>
      <c:simple-property name="default-slsb-instance-pool" required="false" type="string" readOnly="false" description="Name of the default stateless bean instance pool, which will be applicable to all stateless EJBs, unless overridden at the deployment or bean level"/>
      <c:simple-property name="default-stateful-bean-access-timeout:expr" required="false" type="string" readOnly="false" defaultValue="5000" description="The default access timeout for stateful beans. The default value is 5000."/>
      <c:simple-property name="in-vm-remote-interface-invocation-pass-by-value" required="false" type="boolean" readOnly="false" defaultValue="true" description="If set to false, the parameters to invocations on remote interface of an EJB, will be passed by reference. Else, the parameters will be passed by value. The default value is true."/>
    </resource-configuration>

    <service name="EJB3 Thread Pool"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A thread pool executor with an unbounded queue.  Such a thread pool has a core size and a queue with no upper bound.  When a task is submitted, if the number of running threads is less than the core size, a new thread is created.  Otherwise, the task is placed in queue.  If too many tasks are allowed to be submitted to this type of executor, an out of memory condition may occur.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="thread-pool"/>
      </plugin-configuration>

      <metric property="active-count" description="The approximate number of threads that are actively executing tasks."/>
      <metric property="completed-task-count" description="The approximate total number of tasks that have completed execution."/>
      <metric property="current-thread-count" description="The current number of threads in the pool."/>
      <metric property="keepalive-time:time" description="The time"/>
      <metric property="largest-thread-count" description="The largest number of threads that have ever simultaneously been in the pool."/>
      <metric property="rejected-count" description="The number of tasks that have been rejected."/>
      <metric property="task-count" description="The approximate total number of tasks that have ever been scheduled for execution."/>

      <resource-configuration>
        <c:map-property name="keepalive-time" description="Used to specify the amount of time that pool threads should be kept running when idle; if not specified, threads will run until the executor is shut down.">
          <c:simple-property name="time" required="true" type="long" readOnly="true" description="The time"/>
          <c:simple-property name="unit" required="true" type="string" readOnly="true" description="The time unit"/>
        </c:map-property>
        <c:simple-property name="max-threads:expr" required="false" type="string" readOnly="false" description="The maximum thread pool size."/>
        <c:simple-property name="name" required="false" type="string" readOnly="true" description="The name of the thread pool."/>
        <c:simple-property name="thread-factory" required="false" type="string" readOnly="false" description="Specifies the name of a specific thread factory to use to create worker threads. If not defined an appropriate default thread factory will be used."/>
      </resource-configuration>
    </service>

    <service name="File Passivation Store"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A file system based passivation store.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="file-passivation-store"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="groups-path" required="false" type="string" readOnly="false" defaultValue="ejb3/groups"/>
        <c:simple-property name="idle-timeout:expr" required="false" type="string" readOnly="false" defaultValue="300" description="The timeout in units specified by idle-timeout-unit, after which a bean will passivate. The default value is 300."/>
        <c:simple-property name="idle-timeout-unit" required="false" type="string" readOnly="false" defaultValue="SECONDS" description="The unit of idle-timeout. The default value is SECONDS."/>
        <c:simple-property name="max-size:expr" required="false" type="string" readOnly="false" defaultValue="10000" description="The maximum number of beans this cache should store before forcing old beans to passivate. The default value is 10000."/>
        <c:simple-property name="relative-to" required="false" type="string" readOnly="false" defaultValue="jboss.server.data.dir"/>
        <c:simple-property name="sessions-path" required="false" type="string" readOnly="false" defaultValue="ejb3/sessions"/>
        <c:simple-property name="subdirectory-count:expr" required="false" type="string" readOnly="false" defaultValue="100"/>
      </resource-configuration>
    </service>

    <service name="Strict Max Bean Instance Pool"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A bean instance pool with a strict upper limit">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="strict-max-bean-instance-pool"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="max-pool-size:expr" required="false" type="string" readOnly="false" defaultValue="20" description="The maximum number of bean instances that the pool can hold at a given point in time. The default value is 20."/>
        <c:simple-property name="timeout:expr" required="false" type="string" readOnly="false" defaultValue="5" description="The maximum amount of time to wait for a bean instance to be available from the pool. The default value is 5."/>
        <c:simple-property name="timeout-unit" required="false" type="string" readOnly="false" defaultValue="MINUTES" description="The instance acquisition timeout unit. The default value is MINUTES."/>
      </resource-configuration>
    </service>

    <service name="EJB3 Cache"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A SFSB cache.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="cache"/>
      </plugin-configuration>

      <resource-configuration>
        <c:list-property name="aliases" description="The aliases by which this cache may also be referenced">
          <c:simple-property name="aliases"/>
        </c:list-property>
        <c:simple-property name="passivation-store" required="false" type="string" readOnly="false" description="The passivation store used by this cache"/>
      </resource-configuration>
    </service>

    <service name="Cluster Passivation Store"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A clustered passivation store.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="cluster-passivation-store"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="bean-cache" required="false" type="string" readOnly="false" description="The name of the cache used to store bean instances."/>
        <c:simple-property name="cache-container" required="false" type="string" readOnly="false" defaultValue="ejb" description="The name of the cache container used for the bean and client-mappings caches. The default value is ejb."/>
        <c:simple-property name="client-mappings-cache" required="false" type="string" readOnly="false" defaultValue="remote-connector-client-mappings" description="The name of the cache used to store client-mappings of the EJB remoting connector's socket-bindings. The default value is remote-connector-client-mappings."/>
        <c:simple-property name="idle-timeout:expr" required="false" type="string" readOnly="false" defaultValue="300" description="The timeout in units specified by idle-timeout-unit, after which a bean will passivate. The default value is 300."/>
        <c:simple-property name="idle-timeout-unit" required="false" type="string" readOnly="false" defaultValue="SECONDS" description="The unit of idle-timeout. The default value is SECONDS."/>
        <c:simple-property name="max-size:expr" required="false" type="string" readOnly="false" defaultValue="10000" description="The maximum number of beans this cache should store before forcing old beans to passivate. The default value is 10000."/>
        <c:simple-property name="passivate-events-on-replicate" required="false" type="boolean" readOnly="false" defaultValue="true" description="Indicates whether replication should trigger passivation events on the bean. The default value is true."/>
      </resource-configuration>
    </service>

    <service name="Async Service"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="The EJB3 Asynchronous Invocation Service"
             singleton="true">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="service=async"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="thread-pool-name" required="false" type="string" readOnly="false" description="The name of the thread pool which handles asynchronous invocations"/>
      </resource-configuration>
    </service>

    <service name="IIOP Service"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="The IIOP service"
             singleton="true">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="service=iiop"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="enable-by-default" required="false" type="boolean" readOnly="false" description="If this is true EJB&apos;s will be exposed over IIOP by default, otherwise it needs to be explicitly enabled in the deployment descriptor"/>
        <c:simple-property name="use-qualified-name" required="false" type="boolean" readOnly="false" description="If true EJB names will be bound into the naming service with the application and module name prepended to the name (e.g. myapp/mymodule/MyEjb)"/>
      </resource-configuration>
    </service>

    <service name="Remote Service"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="The EJB3 remote service"
             singleton="true">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="service=remote"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="connector-ref" required="false" type="string" readOnly="false" description="The name of the connector on which the EJB3 remoting channel is registered"/>
        <c:simple-property name="thread-pool-name" required="false" type="string" readOnly="false" description="The name of the thread pool that handles remote invocations"/>
      </resource-configuration>
    </service>

    <service name="Timer Service"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="The EJB timer service"
             singleton="true">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="service=timer-service"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="path" required="false" type="string" readOnly="false" description="The directory to store persistent timer information in"/>
        <c:simple-property name="relative-to" required="false" type="string" readOnly="false" description="The relative path that is used to resolve the timer data store location"/>
        <c:simple-property name="thread-pool-name" required="false" type="string" readOnly="false" description="The name of the thread pool used to run timer service invocations"/>
      </resource-configuration>
    </service>

  </service>


  <service name="JMX"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           description="The configuration of the JMX subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=jmx"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="show-model" required="false" type="boolean" readOnly="false" description="Set to 'true' to include MBeans for the model controller resources"/>
      <c:group name="children:remoting-connector" displayName="JBoss remoting connector for the JMX subsystem.">
        <c:simple-property name="use-management-endpoint" required="false" type="boolean" readOnly="false" defaultValue="true" description="If true the connector will use the management endpoint, otherwise it will use the remoting subsystem one. The default value is true."/>
      </c:group>
    </resource-configuration>

  </service>


  <service name="Resource Adapters"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           description="Configuration of the resource adapters subsystem."
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=resource-adapters"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="Resource Adapter"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="The configuration of a resource adapter."
             createDeletePolicy="both">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="resource-adapter"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="archive" required="true" type="string" readOnly="false" description="Specifies the resource adapter archive"/>
        <c:simple-property name="beanvalidationgroups" required="false" type="string" readOnly="false" description="Specifies the bean validation groups that should be used"/>
        <c:simple-property name="bootstrapcontext" required="false" type="string" readOnly="false" description="Specifies the unique name of the bootstrap context that should be used"/>
        <c:simple-property name="transaction-support" required="true" type="string" readOnly="false" description="Specifies the transaction support level of the resource adapter">
          <c:property-options>
            <c:option value="LocalTransaction"/>
            <c:option value="XATransaction"/>
            <c:option value="NoTransaction"/>
          </c:property-options>
        </c:simple-property>
      </resource-configuration>

      <service name="Admin Objects"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               description="Specifies the administration objects."
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="admin-objects"/>
        </plugin-configuration>

        <resource-configuration>
          <c:simple-property name="class-name" required="true" type="string" readOnly="false" description="Specifies the fully qualified class name of a managed connection factory or admin object"/>
          <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Specifies if the resource adapter should be enabled. The default value is true."/>
          <c:simple-property name="jndi-name" required="false" type="string" readOnly="false" description="Specifies the JNDI name for the connection factory or admin object"/>
          <c:simple-property name="use-java-context" required="false" type="boolean" readOnly="false" defaultValue="true" description="Setting this to false will bind the object into global JNDI. The default value is true."/>
        </resource-configuration>

      </service>

      <service name="Config Properties"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               description="Custom defined config properties."
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="config-properties"/>
        </plugin-configuration>

        <resource-configuration>
          <c:simple-property name="value" required="false" type="string" readOnly="true" description="Custom defined config property value"/>
        </resource-configuration>

      </service>

      <service name="Connection Definitions"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               description="Specifies the connection definitions."
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="connection-definitions"/>
        </plugin-configuration>

        <operation name="subsystem:flush-all-connection-in-pool" displayName="Flush All Connections in Pool" description="Flushes all connections in the pool">
          <results>
             <c:simple-property name="operationResult" description="Flushes all connections in the pool" />
          </results>
        </operation>

        <operation name="subsystem:flush-idle-connection-in-pool" displayName="Flush Idle Connections in Pool"  description="Flushes all idle connections in the pool">
          <results>
             <c:simple-property name="operationResult" description="Flushes all idle connections in the pool" />
          </results>
        </operation>

        <operation name="subsystem:test-connection-in-pool" displayName="Test Connection in Pool" description="Test if a connection can be obtained">
          <results>
             <c:simple-property name="operationResult" description="Test if a connection can be obtained" />
          </results>
        </operation>

        <resource-configuration>
          <c:simple-property name="allocation-retry:expr" required="false" type="long" readOnly="false" displayName="Allocation Retry" description="The allocation retry element indicates the number of times that allocating a connection should be tried before throwing an exception"/>
          <c:simple-property name="allocation-retry-wait-millis:expr" required="false" type="long" readOnly="false" displayName="Allocation Retry Wait Millis" description="The allocation retry wait millis element specifies the amount of time, in milliseconds, to wait between retrying to allocate a connection"/>
          <c:simple-property name="background-validation" required="false" type="boolean" readOnly="false" defaultValue="false" description="An element to specify that connections should be validated on a background thread versus being validated prior to use. Changing this value requires a server restart. The default value is false."/>
          <c:simple-property name="background-validation-millis:expr" required="false" type="integer" readOnly="false" displayName="Background Validation Millis" description="The background&#45;validation&#45;millis element specifies the amount of time, in milliseconds, that background validation will run. Changing this value requires a server restart"/>
          <c:simple-property name="blocking-timeout-wait-millis:expr" required="false" type="long" readOnly="false" displayName="Blocking Timeout Wait Millis" description="The blocking&#45;timeout&#45;millis element specifies the maximum time, in milliseconds, to block while waiting for a connection before throwing an exception. Note that this blocks only while waiting for locking a connection, and will never throw an exception if creating a new connection takes an inordinately long time"/>
          <c:simple-property name="class-name" required="true" type="string" readOnly="false" description="Specifies the fully qualified class name of a managed connection factory or admin object"/>
          <c:simple-property name="enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Specifies if the resource adapter should be enabled. The default value is true."/>
          <c:simple-property name="flush-strategy" required="false" type="string" readOnly="true"
                             description="Specifies how the pool should be flush in case of an error." default="FailingConnectionOnly" defaultValue="FailingConnectionOnly">
            <c:property-options>
              <c:option value="FailingConnectionOnly"/>
              <c:option value="IdleConnections"/>
              <c:option value="EntirePool"/>
            </c:property-options>
          </c:simple-property>
          <c:simple-property name="idle-timeout-minutes:expr" required="false" type="long" readOnly="false" displayName="Idle Timeout Minutes" description="The idle&#45;timeout&#45;minutes elements specifies the maximum time, in minutes, a connection may be idle before being closed. The actual maximum time depends also on the IdleRemover scan time, which is half of the smallest idle&#45;timeout&#45;minutes value of any pool. Changing this value requires a server restart."/>
          <c:simple-property name="interleaving" required="false" type="boolean" readOnly="false" defaultValue="false" description="An element to enable interleaving for XA connections. The default value is false."/>
          <c:simple-property name="jndi-name" required="false" type="string" readOnly="false" description="Specifies the JNDI name for the connection factory or admin object"/>
          <c:simple-property name="max-pool-size:expr" required="false" type="integer" readOnly="false" defaultValue="20" displayName="Max Pool Size" description="The max&#45;pool&#45;size element specifies the maximum number of connections for a pool. No more connections will be created in each sub&#45;pool. The default value is 20."/>
          <c:simple-property name="min-pool-size:expr" required="false" type="integer" readOnly="false" defaultValue="0" displayName="Min Pool Size" description="The min&#45;pool&#45;size element specifies the minimum number of connections for a pool. The default value is 0."/>
          <c:simple-property name="no-recovery" required="false" type="boolean" readOnly="false" description="Specifies if the connection pool should be excluded from recovery"/>
          <c:simple-property name="no-tx-separate-pool" required="false" type="boolean" readOnly="false" defaultValue="false" description="Oracle does not like XA connections getting used both inside and outside a JTA transaction. To workaround the problem you can create separate sub&#45;pools for the different contexts. The default value is false."/>
          <c:simple-property name="pad-xid" required="false" type="boolean" readOnly="false" defaultValue="false" description="Should the Xid be padded. The default value is false."/>
          <c:simple-property name="pool-prefill" required="false" type="boolean" readOnly="false" defaultValue="false" description="Should the pool be prefilled. Changing this value requires a server restart. The default value is false."/>
          <c:simple-property name="pool-use-strict-min" required="false" type="boolean" readOnly="false" defaultValue="false" description="Specifies if the min&#45;pool&#45;size should be considered strictly. The default value is false."/>
          <c:simple-property name="recovery-password" required="false" type="string" readOnly="false" description="The password used for recovery"/>
          <c:simple-property name="recovery-plugin-class-name" required="false" type="string" readOnly="false" description="The fully qualified class name of the recovery plugin implementation"/>
          <c:map-property name="recovery-plugin-properties" required="false" displayName="Recovery Plugin Properties" description="The properties for the recovery plugin" >
            <c:simple-property name="recovery-plugin-properties" required="false" type="string" readOnly="false" displayName="Recovery Plugin Property"/>
          </c:map-property>
          <c:simple-property name="recovery-security-domain" required="false" type="string" readOnly="false" description="The security domain used for recovery"/>
          <c:simple-property name="recovery-username" required="false" type="string" readOnly="false" description="The user name used for recovery"/>
          <c:simple-property name="same-rm-override" required="false" type="boolean" readOnly="false" description="The is&#45;same&#45;rm&#45;override element allows one to unconditionally set whether the javax.transaction.xa.XAResource.isSameRM(XAResource) returns true or false"/>
          <c:simple-property name="security-application" required="false" type="boolean" readOnly="false" description="Indicates that app supplied parameters (such as from getConnection(user, pw)) are used to distinguish connections in the pool"/>
          <c:simple-property name="security-domain" required="false" type="string" readOnly="false" description="Specifies the security domain which defines the javax.security.auth.Subject that are used to distinguish connections in the pool"/>
          <c:simple-property name="security-domain-and-application" required="false" type="string" readOnly="false" description="Indicates that either app supplied parameters (such as from getConnection(user, pw)) or Subject (from security domain) are used to distinguish connections in the pool"/>
          <c:simple-property name="use-ccm" required="false" type="boolean" readOnly="false" defaultValue="true" description="Enable the use of a cached connection manager. The default value is true."/>
          <c:simple-property name="use-fast-fail" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether to fail a connection allocation on the first try if it is invalid (true) or keep trying until the pool is exhausted of all potential connections (false). The default value is false."/>
          <c:simple-property name="use-java-context" required="false" type="boolean" readOnly="false" defaultValue="true" description="Setting this to false will bind the object into global JNDI. The default value is true."/>
          <c:simple-property name="use-try-lock:expr" required="false" type="long" readOnly="false" displayName="Use Try Lock" description="Any configured timeout for internal locks on the resource adapter objects in seconds"/>
          <c:simple-property name="wrap-xa-resource" required="false" type="boolean" readOnly="false" defaultValue="true" description="Should the XAResource instances be wrapped in a org.jboss.tm.XAResourceWrapper instance. The default value is true."/>
          <c:simple-property name="xa-resource-timeout:expr" required="false" type="integer" readOnly="false" displayName="XA Resource Timeout" description="The value is passed to XAResource.setTransactionTimeout(), in seconds. Default is zero"/>
        </resource-configuration>

        <service name="Config Properties (Connection Definition)"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               description="Custom defined config properties."
               createDeletePolicy="both">

          <plugin-configuration>
            <c:simple-property name="path" readOnly="true" default="config-properties"/>
          </plugin-configuration>

          <resource-configuration>
            <c:simple-property name="value" required="false" type="string" readOnly="true" description="Custom defined config property value"/>
          </resource-configuration>
        </service>
      </service>
    </service>

  </service>


  <service name="Infinispan"
          discovery="SubsystemDiscovery"
          class="IspnComponent"
          singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=infinispan"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="Cache Container"
             discovery="SubsystemDiscovery"
             class="IspnCContainerComponent"
             createDeletePolicy="both"
             creationDataType="configuration">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="cache-container"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="default-cache" required="false" type="string" readOnly="false" description="The default infinispan cache"/>
        <!-- TODO select from child cache services -->
        <c:list-property name="aliases" required="false" description="The list of aliases for this cache container">
          <c:simple-property name="alias"/>
        </c:list-property>
        <c:simple-property name="jndi-name" required="false" type="string" readOnly="false" description="The jndi name to which to bind this cache container"/>
        <c:simple-property name="start" required="false" type="string" readOnly="false" defaultValue="LAZY" description="The cache container start mode, which can be EAGER (immediate start) or LAZY (on-demand start).">
          <c:property-options>
            <c:option value="LAZY"/>
            <c:option value="EAGER"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="listener-executor" required="false" type="string" readOnly="false" description="The executor used for the replication queue"/>
        <c:simple-property name="eviction-executor" required="false" type="string" readOnly="false" description="The scheduled executor used for eviction"/>
        <c:simple-property name="replication-queue-executor" required="false" type="string" readOnly="false" description="The executor used for asynchronous cache operations"/>
      </resource-configuration>

      <service name="Cache"
               discovery="SubsystemDiscovery"
               class="IspnCacheComponent"
               createDeletePolicy="both"
               creationDataType="configuration">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="distributed-cache|local-cache|invalidation-cache|replicated-cache"/>
        </plugin-configuration>

        <resource-configuration>
          <c:simple-property name="_flavor" displayName="Kind of cache" required="true" readOnly="true" default="local-cache" description="What special kind of cache is this.">
            <c:property-options>
              <c:option value="local-cache"/>
              <c:option value="invalidation-cache"/>
              <c:option value="distributed-cache"/>
              <c:option value="replicated-cache"/>
            </c:property-options>
          </c:simple-property>
          <c:simple-property name="start" required="false" type="string" readOnly="false" default="LAZY" description="The cache start mode, which can be EAGER (immediate start) or LAZY (on-demand start).">
            <c:property-options>
              <c:option value="LAZY"/>
              <c:option value="EAGER"/>
            </c:property-options>
          </c:simple-property>
          <c:simple-property name="batching" required="false" type="boolean" readOnly="false" default="false" description="If enabled, the invocation batching API will be made available for this cache."/>
          <c:simple-property name="indexing" required="false" type="string" readOnly="false" default="NONE" description="If enabled, entries will be indexed when they are added to the cache. Indexes will be updated as entries change or are removed.">
            <c:property-options>
              <c:option value="NONE"/>
              <c:option value="LOCAL"/>
              <c:option value="ALL"/>
            </c:property-options>
          </c:simple-property>
          <c:simple-property name="jndi-name" required="false" type="string" readOnly="false" description="The jndi-name to which to bind this cache instance."/>
          <c:simple-property name="mode" required="false" type="string" readOnly="true" default="SYNC" description="Sets the clustered cache mode, ASYNC for asynchronous operation, or SYNC for synchronous operation.">
            <c:property-options>
              <c:option value="SYNC"/>
              <c:option value="ASYNC"/>
            </c:property-options>
          </c:simple-property>
          <c:simple-property name="queue-size" required="false" type="integer" readOnly="false" default="0" description="In ASYNC mode, this attribute can be used to trigger flushing of the queue when it reaches a specific threshold."/>
          <c:simple-property name="queue-flush-interval" required="false" type="long" readOnly="false" default="10" description="In ASYNC mode, this attribute controls how often the asynchronous thread used to flush the replication queue runs. This should be a positive integer which represents thread wakeup time in milliseconds."/>
          <c:simple-property name="remote-timeout" required="false" type="long" readOnly="false" default="17500" description="In SYNC mode, the timeout (in ms) used to wait for an acknowledgment when making a remote call, after which the call is aborted and an exception is thrown."/>
        </resource-configuration>
      </service>
    </service>

  </service>


  <service name="JGroups"
          discovery="SubsystemDiscovery"
          class="BaseComponent"
          singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=jgroups"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="default-stack" description="Default stack to use"/>
    </resource-configuration>
  </service>


  <service name="Remoting"
          discovery="SubsystemDiscovery"
          class="BaseComponent"
          singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=remoting"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <resource-configuration>
      <c:simple-property name="worker-read-threads" required="false" type="integer" readOnly="false" defaultValue="1" description="The number of read threads to create for the remoting worker. The default value is 1."/>
      <c:simple-property name="worker-task-core-threads" required="false" type="integer" readOnly="false" defaultValue="4" description="The number of core threads for the remoting worker task thread pool. The default value is 4."/>
      <c:simple-property name="worker-task-keepalive" required="false" type="integer" readOnly="false" defaultValue="60" description="The number of milliseconds to keep non-core remoting worker task threads alive. The default value is 60."/>
      <c:simple-property name="worker-task-limit" required="false" type="integer" readOnly="false" defaultValue="16384" description="The maximum number of remoting worker tasks to allow before rejecting. The default value is 16384."/>
      <c:simple-property name="worker-task-max-threads" required="false" type="integer" readOnly="false" defaultValue="16" description="The maximum number of threads for the remoting worker task thread pool. The default value is 16."/>
      <c:simple-property name="worker-write-threads" required="false" type="integer" readOnly="false" defaultValue="1" description="The number of write threads to create for the remoting worker. The default value is 1."/>
    </resource-configuration>

  </service>


  <service name="Osgi"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           description="The OSGi subsystem configuration."
           singleton="true">

    <runs-inside>
        <parent-resource-type name="Profile"  plugin="&pluginName;"/>
        <parent-resource-type name="JBossAS7 Standalone Server"  plugin="&pluginName;"/>
        <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="subsystem=osgi"/>
        <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <operation name="subsystem:activate" displayName="Activate" description="Activate the OSGi subsystem.">
      <results>
         <c:simple-property name="operationResult" description="Activate the OSGi subsystem." />
      </results>
    </operation>

    <resource-configuration>
      <c:simple-property name="activation" required="false" type="string" readOnly="false" defaultValue="LAZY" description="Activation flag for the OSGi subsystem. Possible values: lazy, eager. The default value is LAZY."/>
      <c:simple-property name="startlevel" required="false" type="integer" readOnly="false" description="The current Start Level of the OSGi Framework. Changing this value will change the Start Level of the Framework accordingly."/>
      <c:list-property name="property" description="A list of generic key/value properties.">
        <c:map-property name="property:collapsed" displayName="Property">
          <c:simple-property name="name:0" type="string" displayName="Name" required="true"/>
          <c:simple-property name="value:1" type="string" displayName="Value" required="true"/>
        </c:map-property>
      </c:list-property>
    </resource-configuration>

    <service name="Property"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A framework property. The identity of the resource defines the property name.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="property"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="value" required="true" type="string" readOnly="false" description="The framework property value."/>
      </resource-configuration>
    </service>

    <service name="Capability"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="A framework capability. A capability maps to a JBoss Module in the modules directory or an OSGi bundle in the bundles directory. The identity maps to the resource identifier of the module or bundle.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="capability"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="startlevel" required="false" type="integer" readOnly="true" description="The startlevel for the capability. Can only be specified for OSGi bundles."/>
      </resource-configuration>
    </service>

    <service name="Bundle"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="Runtime bundle information.">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="bundle"/>
      </plugin-configuration>

      <operation name="subsystem:start" displayName="Start" description="Starts the bundle.">
        <results>
         <c:simple-property name="operationResult" description="Starts the bundle." />
        </results>
      </operation>

      <operation name="subystem:stop" displayName="Stop" description="Stops the bundle.">
        <results>
           <c:simple-property name="operationResult" description="Stops the bundle." />
        </results>
      </operation>

      <resource-configuration>
        <c:simple-property name="id" required="false" type="long" readOnly="true" description="The bundle ID."/>
        <c:simple-property name="startlevel" required="false" type="integer" readOnly="true" description="The bundle&apos;s start level."/>
        <c:simple-property name="symbolic-name" required="false" type="string" readOnly="true" description="The bundle symbolic name."/>
        <c:simple-property name="version" required="false" type="string" readOnly="true" description="The bundle version."/>
      </resource-configuration>
    </service>

  </service>


  <service name="Mail"
           discovery="SubsystemDiscovery"
           class="BaseComponent"
           singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile"  plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server"  plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=mail"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="Mail Session"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             createDeletePolicy="both">

      <runs-inside>
        <parent-resource-type name="Mail"  plugin="&pluginName;"/>
      </runs-inside>

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="mail-session"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="debug" required="false" type="boolean" readOnly="false" defaultValue="false" description="Enables javamail debugging. The default value is false."/>
        <c:simple-property name="from" required="false" type="string" readOnly="false" description="From address that is used as default from, if not set when sending"/>
        <c:simple-property name="jndi-name" required="false" type="string" readOnly="false" description="JNDI name to where mail session should be bound"/>
      </resource-configuration>

      <service name="SMTP Mail Server"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               singleton="true"
               createDeletePolicy="both">

          <runs-inside>
              <parent-resource-type name="Mail Session"  plugin="&pluginName;"/>
          </runs-inside>

          <plugin-configuration>
              <c:simple-property name="path" readOnly="true" default="server=smtp"/>
          </plugin-configuration>

          <resource-configuration>
            <c:simple-property name="outbound-socket-binding-ref" required="false" type="string" readOnly="false" description="Outbound Socket binding to POP3 server"/>
            <c:simple-property name="password" required="false" type="string" readOnly="false" description="Password to authenticate on server"/>
            <c:simple-property name="ssl" required="false" type="boolean" readOnly="false" defaultValue="false" description="Does server requires SSL?. The default value is false."/>
            <c:simple-property name="username" required="false" type="string" readOnly="false" description="Username to authenticate on server"/>
          </resource-configuration>
        </service>

        <service name="IMAP Mail Server"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               singleton="true"
               createDeletePolicy="both">

          <runs-inside>
              <parent-resource-type name="Mail Session"  plugin="&pluginName;"/>
          </runs-inside>

          <plugin-configuration>
              <c:simple-property name="path" readOnly="true" default="server=imap"/>
          </plugin-configuration>

          <resource-configuration>
            <c:simple-property name="outbound-socket-binding-ref" required="false" type="string" readOnly="false" description="Outbound Socket binding to POP3 server"/>
            <c:simple-property name="password" required="false" type="string" readOnly="false" description="Password to authenticate on server"/>
            <c:simple-property name="ssl" required="false" type="boolean" readOnly="false" defaultValue="false" description="Does server requires SSL?. The default value is false."/>
            <c:simple-property name="username" required="false" type="string" readOnly="false" description="Username to authenticate on server"/>
          </resource-configuration>
        </service>

        <service name="POP3 Mail Server"
               discovery="SubsystemDiscovery"
               class="BaseComponent"
               singleton="true"
               createDeletePolicy="both">

          <runs-inside>
              <parent-resource-type name="Mail Session"  plugin="&pluginName;"/>
          </runs-inside>

          <plugin-configuration>
              <c:simple-property name="path" readOnly="true" default="server=pop3"/>
          </plugin-configuration>

          <resource-configuration>
            <c:simple-property name="outbound-socket-binding-ref" required="false" type="string" readOnly="false" description="Outbound Socket binding to POP3 server"/>
            <c:simple-property name="password" required="false" type="string" readOnly="false" description="Password to authenticate on server"/>
            <c:simple-property name="ssl" required="false" type="boolean" readOnly="false" defaultValue="false" description="Does server requires SSL?. The default value is false."/>
            <c:simple-property name="username" required="false" type="string" readOnly="false" description="Username to authenticate on server"/>
          </resource-configuration>
        </service>
       </service>

    </service>


    <service name="Messaging-Provider"
             discovery="SubsystemDiscovery"
             class="BaseComponent"
             description="The messaging subsystems"
             singleton="true">

    <runs-inside>
      <parent-resource-type name="Profile" plugin="&pluginName;"/>
      <parent-resource-type name="JBossAS7 Standalone Server" plugin="&pluginName;"/>
      <parent-resource-type name="Managed Server" plugin="&pluginName;"/>
    </runs-inside>

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="subsystem=messaging"/>
      <c:simple-property name="managedRuntime" default="true" type="boolean" readOnly="true"/>
    </plugin-configuration>

    <service name="HornetQ"
             discovery="SubsystemDiscovery"
             class="HornetQComponent"
             description="The HornetQ based messaging subsystem">

      <plugin-configuration>
        <c:simple-property name="path" readOnly="true" default="hornetq-server"/>
      </plugin-configuration>

      <resource-configuration>
        <c:simple-property name="allow-failback" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether this server will automatically shutdown if the original live server comes back up. The default value is true."/>
        <c:simple-property name="async-connection-execution-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether incoming packets on the server should be handed off to a thread from the thread pool for processing. False if they should be handled on the remoting thread. The default value is true."/>
        <c:simple-property name="backup" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether this server is a backup server. The default value is false."/>
        <c:simple-property name="cluster-password" required="false" type="string" readOnly="false" defaultValue="CHANGE ME!!" description="The password used by cluster connections to communicate between the clustered nodes. The default value is CHANGE ME!!."/>
        <c:simple-property name="cluster-user" required="false" type="string" readOnly="false" defaultValue="HORNETQ.CLUSTER.ADMIN.USER" description="The user used by cluster connections to communicate between the clustered nodes. The default value is HORNETQ.CLUSTER.ADMIN.USER."/>
        <c:simple-property name="clustered" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether the server is clustered. The default value is false."/>
        <c:simple-property name="connection-ttl-override" required="false" type="long" readOnly="false" defaultValue="&#45;1" description="If set, this will override how long (in ms) to keep a connection alive without receiving a ping. The default value is &#45;1."/>
        <c:simple-property name="create-bindings-dir" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server should create the bindings directory on start up. The default value is true."/>
        <c:simple-property name="create-journal-dir" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server should create the journal directory on start up. The default value is true."/>
        <c:simple-property name="failback-delay" required="false" type="long" readOnly="false" defaultValue="5000" description="How long to wait before failback occurs on live server restart. The default value is 5000."/>
        <c:simple-property name="failover-on-shutdown" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether this backup server (if it is a backup server) should come live on a normal server shutdown. The default value is false."/>
        <c:simple-property name="id-cache-size" required="false" type="integer" readOnly="false" defaultValue="2000" description="The size of the cache for pre&#45;creating message IDs. The default value is 2000."/>
        <c:simple-property name="jmx-domain" required="false" type="string" readOnly="false" defaultValue="org.hornetq" description="The JMX domain used to register internal HornetQ MBeans in the MBeanServer. The default value is org.hornetq."/>
        <c:simple-property name="jmx-management-enabled" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether HornetQ should expose its internal management API via JMX. This is not recommended, as accessing these MBeans can lead to inconsistent configuration. The default value is false."/>
        <c:simple-property name="journal-buffer-size" required="false" type="long" readOnly="false" description="The size of the internal buffer on the journal."/>
        <c:simple-property name="journal-buffer-timeout" required="false" type="long" readOnly="false" description="The timeout (in nanoseconds) used to flush internal buffers on the journal."/>
        <c:simple-property name="journal-compact-min-files" required="false" type="integer" readOnly="false" defaultValue="10" description="The minimal number of journal data files before we can start compacting. The default value is 10."/>
        <c:simple-property name="journal-compact-percentage" required="false" type="integer" readOnly="false" defaultValue="30" description="The percentage of live data on which we consider compacting the journal. The default value is 30."/>
        <c:simple-property name="journal-file-size" required="false" type="long" readOnly="false" defaultValue="10485760" description="The size (in bytes) of each journal file. The default value is 10485760."/>
        <c:simple-property name="journal-max-io" required="false" type="integer" readOnly="false" description="The maximum number of write requests that can be in the AIO queue at any one time."/>
        <c:simple-property name="journal-min-files" required="false" type="integer" readOnly="false" defaultValue="2" description="How many journal files to pre&#45;create. The default value is 2."/>
        <c:simple-property name="journal-sync-non-transactional" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether to wait for non transaction data to be synced to the journal before returning a response to the client. The default value is true."/>
        <c:simple-property name="journal-sync-transactional" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether to wait for transaction data to be synchronized to the journal before returning a response to the client. The default value is true."/>
        <c:simple-property name="journal-type" required="false" type="string" readOnly="false" defaultValue="ASYNCIO" description="The type of journal to use. The default value is ASYNCIO.">
          <c:property-options>
            <c:option value="ASYNCIO" name="ASYNCIO"/>
            <c:option value="NIO" name="NIO"/>
          </c:property-options>
        </c:simple-property>
        <c:simple-property name="live-connector-ref" required="false" type="string" readOnly="false" description="The name of the connector used to connect to the live connector. If this server is not a backup that uses shared nothing HA, it&apos;s value is &apos;undefined&apos;."/>
        <c:simple-property name="log-journal-write-rate" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether to periodically log the journal&apos;s write rate and flush rate. The default value is false."/>
        <c:simple-property name="management-address" required="false" type="string" readOnly="false" defaultValue="jms.queue.hornetq.management" description="Address to send management messages to. The default value is jms.queue.hornetq.management."/>
        <c:simple-property name="management-notification-address" required="false" type="string" readOnly="false" defaultValue="hornetq.notifications" description="The name of the address that consumers bind to  to receive management notifications. The default value is hornetq.notifications."/>
        <c:simple-property name="memory-measure-interval:expr" required="false" type="string" readOnly="false" defaultValue="&#45;1" description="Frequency to sample JVM memory in ms (or &#45;1 to disable memory sampling). The default value is &#45;1."/>
        <c:simple-property name="memory-warning-threshold:expr" required="false" type="string" readOnly="false" defaultValue="25" description="Percentage of available memory which if exceeded results in a warning log. The default value is 25."/>
        <c:simple-property name="message-counter-enabled" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether message counters are enabled. The default value is false."/>
        <c:simple-property name="message-counter-max-day-history" required="false" type="integer" readOnly="false" defaultValue="10" description="How many days to keep message counter history. The default value is 10."/>
        <c:simple-property name="message-counter-sample-period" required="false" type="long" readOnly="false" defaultValue="10000" description="The sample period (in ms) to use for message counters. The default value is 10000."/>
        <c:simple-property name="message-expiry-scan-period" required="false" type="long" readOnly="false" defaultValue="30000" description="How often (in ms) to scan for expired messages. The default value is 30000."/>
        <c:simple-property name="message-expiry-thread-priority" required="false" type="integer" readOnly="false" defaultValue="3" description="The priority of the thread expiring messages. The default value is 3."/>
        <c:simple-property name="page-max-concurrent-io" required="false" type="integer" readOnly="false" defaultValue="5" description="The maximum number of concurrent reads allowed on paging. The default value is 5."/>
        <c:simple-property name="perf-blast-pages" required="false" type="integer" readOnly="false" defaultValue="&#45;1" description="TODO. The default value is &#45;1."/>
        <c:simple-property name="persist-delivery-count-before-delivery" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether the delivery count is persisted before delivery. False means that this only happens after a message has been cancelled. The default value is false."/>
        <c:simple-property name="persist-id-cache" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether IDs are persisted to the journal. The default value is true."/>
        <c:simple-property name="persistence-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server will use the file based journal for persistence. The default value is true."/>
        <c:list-property name="remoting-interceptors" required="false" description="The list of interceptor classes used by this server." >
            <c:simple-property name="remoting-interceptors" />
        </c:list-property>
        <c:simple-property name="run-sync-speed-test" required="false" type="boolean" readOnly="false" defaultValue="false" description="Whether on startup to perform a diagnostic test on how fast your disk can sync. Useful when determining performance issues. The default value is false."/>
        <c:simple-property name="scheduled-thread-pool-max-size:expr" required="false" type="string" readOnly="false" defaultValue="5" description="The number of threads that the main scheduled thread pool has. The default value is 5."/>
        <c:simple-property name="security-domain" required="false" type="string" readOnly="false" defaultValue="other" description="The security domain to use to verify user and role information. The default value is other."/>
        <c:simple-property name="security-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether security is enabled. The default value is true."/>
        <c:simple-property name="security-invalidation-interval" required="false" type="long" readOnly="false" defaultValue="10000" description="How long (in ms) to wait before invalidating the security cache. The default value is 10000."/>
        <c:simple-property name="server-dump-interval" required="false" type="long" readOnly="false" defaultValue="&#45;1" description="How often to dump basic runtime information to the server log. A value less than 1 disables this feature. The default value is &#45;1."/>
        <c:simple-property name="shared-store" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether this server is using a shared store for failover. The default value is true."/>
        <c:simple-property name="started" required="false" type="boolean" readOnly="true" description="Whether this server is started."/>
        <c:simple-property name="thread-pool-max-size:expr" required="false" type="string" readOnly="false" defaultValue="30" description="The number of threads that the main thread pool has. &#45;1 means no limit. The default value is 30."/>
        <c:simple-property name="transaction-timeout" required="false" type="long" readOnly="false" defaultValue="300000" description="How long (in ms) before a transaction can be removed from the resource manager after create time. The default value is 300000."/>
        <c:simple-property name="transaction-timeout-scan-period" required="false" type="long" readOnly="false" defaultValue="1000" description="How often (in ms) to scan for timeout transactions. The default value is 1000."/>
        <c:simple-property name="version" required="false" type="string" readOnly="true" description="The server&apos;s version."/>
        <c:simple-property name="wild-card-routing-enabled" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the server supports wild card routing. The default value is true."/>
      </resource-configuration>

      <service name="JMS Queue"
               discovery="SubsystemDiscovery"
               class="JmsComponent"
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="jms-queue"/>
        </plugin-configuration>

        <resource-configuration>
          <c:simple-property name="dead-letter-address" required="false" type="string" readOnly="true" description="The address to send dead messages to."/>
          <c:simple-property name="durable" required="false" type="boolean" readOnly="false" defaultValue="true" description="Whether the queue is durable or not. The default value is true."/>
          <c:list-property name="entries" required="true" description="The jndi names the queue will be bound to." >
              <c:simple-property name="entry" type="string" description="A single JNDI entry"/>
          </c:list-property>
          <c:simple-property name="expiry-address" required="false" type="string" readOnly="true" description="The address to send expired messages to."/>
          <c:simple-property name="paused" required="true" type="boolean" readOnly="true" description="Whether the queue is paused."/>
          <c:simple-property name="queue-address" required="true" type="string" readOnly="true" description="The queue address defines what address is used for routing messages."/>
          <c:simple-property name="selector" required="false" type="string" readOnly="false" description="The queue selector."/>
          <c:simple-property name="temporary" required="true" type="boolean" readOnly="true" description="Whether the queue is temporary."/>
        </resource-configuration>
      </service>

      <service name="JMS Topic"
               discovery="SubsystemDiscovery"
               class="JmsComponent"
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="jms-topic"/>
        </plugin-configuration>

        <resource-configuration>
          <c:list-property name="entries" required="true" readOnly="false" displayName="JNDI Names" min="1"
                           description="The jndi names the queue will be bound to.">
            <c:simple-property name="entry" type="string" description="A single JNDI entry"/>
          </c:list-property>
        </resource-configuration>
      </service>

      <service name="Connection-Factory"
               discovery="SubsystemDiscovery"
               class="JmsComponent"
               createDeletePolicy="both">

        <plugin-configuration>
          <c:simple-property name="path" readOnly="true" default="connection-factory"/>
        </plugin-configuration>

        <resource-configuration>
          <c:list-property name="entries" required="true" readOnly="false" displayName="JNDI Names" min="1"
                           description="The jndi names the queue will be bound to.">
            <c:simple-property name="entry" type="string" description="A single JNDI entry"/>
          </c:list-property>

          <c:map-property name="connector:collapsed" required="false" readOnly="false" displayName="Connector"
                          description="Defines the connector to be used. This is mutually exclusive with discovery-group-name">
            <c:simple-property name="name:0" displayName="Name" description="Connector name. Mutually exclusive with discovery-group-name" required="false"/>
          </c:map-property>
          <c:simple-property name="discovery-group-name" required="false" type="string" readOnly="false" description="The discovery group name. This is mutually exclusive with Connector"/>

          <c:simple-property name="auto-group" required="false" type="boolean" readOnly="false" description="Whether or not message grouping is automatically used"/>
          <c:simple-property name="block-on-acknowledge" required="false" type="boolean" readOnly="false" description="True to set block on acknowledge."/>
          <c:simple-property name="block-on-durable-send" required="false" type="boolean" readOnly="false" description="True to set block on durable send."/>
          <c:simple-property name="block-on-non-durable-send" required="false" type="boolean" readOnly="false" description="True to set block on non durable send."/>
          <c:simple-property name="cache-large-message-client" required="false" type="boolean" readOnly="false" description="True to cache large messages."/>
          <c:simple-property name="call-timeout" required="false" type="long" readOnly="false" description="The call time out."/>
          <c:simple-property name="client-failure-check-period" required="false" type="integer" readOnly="false" description="The client failure check period."/>
          <c:simple-property name="client-id" required="false" type="string" readOnly="false" description="The client id."/>
          <c:simple-property name="compress-large-messages" required="false" type="boolean" readOnly="false" description="Whether large messages should be compressed."/>
          <c:simple-property name="confirmation-window-size" required="false" type="integer" readOnly="false" description="The confirmation window size."/>
          <c:simple-property name="connection-ttl" required="false" type="long" readOnly="false" description="The connection ttl."/>
          <c:simple-property name="consumer-max-rate" required="false" type="integer" readOnly="false" description="The consumer max rate."/>
          <c:simple-property name="consumer-window-size" required="false" type="integer" readOnly="false" description="The consumer window size."/>
          <c:simple-property name="discovery-initial-wait-timeout" required="false" type="long" readOnly="false" description="The discovery initial wait time out."/>
          <c:simple-property name="dups-ok-batch-size" required="false" type="integer" readOnly="false" description="The dups ok batch size."/>
          <c:simple-property name="failover-on-initial-connection" required="false" type="boolean" readOnly="false" description="True to fail over on initial connection."/>
          <c:simple-property name="failover-on-server-shutdown" required="false" type="boolean" readOnly="false" description="True to fail over on server shutdown."/>
          <c:simple-property name="group-id" required="false" type="string" readOnly="false" description="The group id."/>
          <c:simple-property name="ha" required="false" type="boolean" readOnly="false" description="Whether the connection factory supports High Availability."/>
          <c:simple-property name="connection-load-balancing-policy-class-name" required="false" type="string" readOnly="false"
                             description="Name of a class implementing a client-side load balancing policy that a client can use to load balance sessions across different nodes in a cluster."/>
          <c:simple-property name="max-retry-interval" required="false" type="long" readOnly="false" description="The max retry interval."/>
          <c:simple-property name="min-large-message-size" required="false" type="integer" readOnly="false" description="The min large message size."/>
          <c:simple-property name="pre-acknowledge" required="false" type="boolean" readOnly="false" description="True to pre-acknowledge."/>
          <c:simple-property name="producer-max-rate" required="false" type="integer" readOnly="false" description="The producer max rate."/>
          <c:simple-property name="producer-window-size" required="false" type="integer" readOnly="false" description="The producer window size."/>
          <c:simple-property name="reconnect-attempts" required="false" type="integer" readOnly="false" description="The reconnect attempts."/>
          <c:simple-property name="retry-interval" required="false" type="long" readOnly="false" description="The retry interval."/>
          <c:simple-property name="retry-interval-multiplier" required="false" type="float" readOnly="false" description="The retry interval multiplier."/>
          <c:simple-property name="scheduled-thread-pool-max-size" required="false" type="integer" readOnly="false" description="The scheduled thread pool max size."/>
          <c:simple-property name="thread-pool-max-size" required="false" type="integer" readOnly="false" description="The thread pool max size."/>
          <c:simple-property name="transaction-batch-size" required="false" type="integer" readOnly="false" description="The transaction batch size."/>
          <c:simple-property name="use-global-pools" required="false" type="boolean" readOnly="false" description="True to use global pools."/>
        </resource-configuration>
      </service><!-- End of Connection-Factory service -->

  <service name="Security Setting"
     discovery="SubsystemDiscovery"
     class="BaseComponent">

     <plugin-configuration>
       <c:simple-property name="path" readOnly="true" default="security-setting"/>
     </plugin-configuration>

           <!-- Removing. Add/Remove a little to low level
     <operation name="add" description="Add new security setting.">
       <results>
    <c:simple-property name="operationResult" description="Add new security setting." />
       </results>
     </operation>

     <operation name="remove" description="Remove an existing security setting.">
       <results>
    <c:simple-property name="operationResult" description="Remove an existing security setting." />
       </results>
     </operation> -->

       <service name="Role"
          discovery="SubsystemDiscovery"
          class="BaseComponent">

    <plugin-configuration>
      <c:simple-property name="path" readOnly="true" default="role"/>
    </plugin-configuration>

         <operation name="add" description="Add new security role.">
     <parameters>
             <c:simple-property name="name" required="true" type="string" readOnly="false" description="The role&apos;s name."/>
       <c:simple-property name="send" required="true" type="boolean" readOnly="false" description="This permission allows the user to send a message to matching addresses."/>
       <c:simple-property name="consume" required="true" type="boolean" readOnly="false" description="his permission allows the user to consume a message from a queue bound to matching addresses."/>
       <c:simple-property name="create-durable-queue" required="true" type="boolean" readOnly="false" description="This permission allows the user to create a durable queue."/>
       <c:simple-property name="delete-durable-queue" required="true" type="boolean" readOnly="false" description="This permission allows the user to delete a durable queue."/>
       <c:simple-property name="create-non-durable-queue" required="true" type="boolean" readOnly="false" description="This permission allows the user to create a temporary queue."/>
       <c:simple-property name="delete-non-durable-queue" required="true" type="boolean" readOnly="false" description="This permission allows the user to delete a temporary queue."/>
       <c:simple-property name="manage" required="true" type="boolean" readOnly="false" description="This permission allows the user to invoke management operations by sending management messages to the management address."/>
     </parameters>
     <results>
        <c:simple-property name="operationResult" description="Add new security role." />
     </results>
         </operation>

         <operation name="remove" description="Remove an existing security role.">
     <parameters>
             <c:simple-property name="name" required="true" type="string" readOnly="false" description="The role&apos;s name."/>
           </parameters>
     <results>
        <c:simple-property name="operationResult" description="Remove an existing security role." />
     </results>
         </operation>

         <resource-configuration>
     <c:simple-property name="consume" required="false" type="boolean" readOnly="false" defaultValue="false" description="his permission allows the user to consume a message from a queue bound to matching addresses. The default value is false."/>
     <c:simple-property name="create-durable-queue" required="false" type="boolean" readOnly="false" defaultValue="false"
     description="This permission allows the user to create a durable queue. The default value is false."/>
     <c:simple-property name="create-non-durable-queue" required="false" type="boolean" readOnly="false" defaultValue="false"
     description="This permission allows the user to create a temporary queue. The default value is false."/>
     <c:simple-property name="delete-durable-queue" required="false" type="boolean" readOnly="false" defaultValue="false"
     description="This permission allows the user to delete a durable queue. The default value is false."/>
     <c:simple-property name="delete-non-durable-queue" required="false" type="boolean" readOnly="false" defaultValue="false"
     description="This permission allows the user to delete a temporary queue. The default value is false."/>
     <c:simple-property name="manage" required="false" type="boolean" readOnly="false" defaultValue="false" description="This permission allows the user to invoke management operations by sending management messages to the management address. The default value is false."/>
     <c:simple-property name="send" required="false" type="boolean" readOnly="false" defaultValue="false" description="This permission allows the user to send a message to matching addresses. The default value is false."/>
         </resource-configuration>

       </service><!-- End of role service -->

  </service><!-- End of Security Settings service -->

    </service><!-- End of HornetQ service -->

  </service><!-- End of Messaging-Provider service -->

</plugin>
