<?xml version="1.0"?>

<!-- $Id$ -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-plugins-parent</artifactId>
    <version>4.4.0-SNAPSHOT</version>
  </parent>

  <groupId>org.jboss.on</groupId>
  <artifactId>jopr-jboss-as-5-plugin</artifactId>
  <packaging>jar</packaging>

  <name>RHQ JBossAS 5.x Plugin</name>
  <description>A plugin for managing JBoss Application Server 5.x</description>

  <properties>
    <jbossas.version>6.0.0.M1</jbossas.version>
    <as5.version>6.1.0.Final</as5.version>
    <as5.url>http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</as5.url>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.jboss.jbossas</groupId>
        <artifactId>jboss-as-parent</artifactId>
        <version>${jbossas.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.jboss.jbossas</groupId>
        <artifactId>jboss-as-component-matrix</artifactId>
        <version>${jbossas.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-jboss-as-common</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-io</artifactId>
      <version>1.3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.4</version>
    </dependency>

    <dependency>
      <groupId>gnu-getopt</groupId>
      <artifactId>getopt</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
    </dependency>

    <dependency>
      <groupId>${rhq.groupId}</groupId>
      <artifactId>rhq-jmx-plugin</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.integration</groupId>
      <artifactId>jboss-profileservice-spi</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.man</groupId>
      <artifactId>jboss-managed</artifactId>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>sun-jaxb</groupId>
          <artifactId>jaxb-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.jboss.man</groupId>
      <artifactId>jboss-metatype</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-common-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.remoting</groupId>
      <artifactId>jboss-remoting</artifactId>
      <scope>provided</scope>
    </dependency>

    <!--  To prevent the classloading issues with the maven's isolated classloader
and the plugin classloader in our integration tests, we just include all
the deps for the AS5 plugin in the test scope. -->

    <!-- NOTE: To shorten the list of required dependencies (as commented out below),
we now use the following method. -->
    <dependency>
      <groupId>org.jboss.jbossas</groupId>
      <artifactId>jboss-as-client</artifactId>
      <version>${jbossas.version}</version>
      <type>pom</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.microcontainer</groupId>
      <artifactId>jboss-dependency</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.aspects</groupId>
      <artifactId>jboss-security-aspects</artifactId>
      <scope>test</scope>
    </dependency>

    <!--
            <dependency>
                <groupId>org.jboss.microcontainer</groupId>
                <artifactId>jboss-kernel</artifactId>
                <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.naming</groupId>
              <artifactId>jnp-client</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.jbossas</groupId>
              <artifactId>jboss-as-aspects</artifactId>
              <version>5.1.0.CR1</version>
              <classifier>jboss-aspect-jdk50-client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>trove</groupId>
              <artifactId>trove</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>javassist</groupId>
              <artifactId>javassist</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.security</groupId>
              <artifactId>jboss-security-spi</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.javaee</groupId>
              <artifactId>jboss-javaee</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>oswego-concurrent</groupId>
              <artifactId>concurrent</artifactId>
              <version>1.3.4-jboss</version>
              <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.jbossas</groupId>
                <artifactId>jboss-as-server</artifactId>
                <classifier>client</classifier>
                <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss</groupId>
              <artifactId>jboss-mdr</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.logging</groupId>
              <artifactId>jboss-logging-spi</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.logging</groupId>
              <artifactId>jboss-logging-log4j</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.jbossas</groupId>
              <artifactId>jboss-as-security</artifactId>
              <version>5.1.0.CR1</version>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.integration</groupId>
              <artifactId>jboss-transaction-spi</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.ejb3</groupId>
              <artifactId>jboss-ejb3-common</artifactId>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.ejb3</groupId>
              <artifactId>jboss-ejb3-core</artifactId>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.ejb3</groupId>
              <artifactId>jboss-ejb3-ext-api</artifactId>
              <version>1.0.0</version>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.ejb3</groupId>
              <artifactId>jboss-ejb3-proxy-spi</artifactId>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.ejb3</groupId>
              <artifactId>jboss-ejb3-proxy-impl</artifactId>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.ejb3</groupId>
              <artifactId>jboss-ejb3-security</artifactId>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.microcontainer</groupId>
              <artifactId>jboss-dependency</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.security</groupId>
              <artifactId>jbosssx-client</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.aspects</groupId>
              <artifactId>jboss-security-aspects</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss.aop</groupId>
              <artifactId>jboss-aop</artifactId>
              <classifier>client</classifier>
              <scope>test</scope>
            </dependency>

            <dependency>
              <groupId>org.jboss</groupId>
              <artifactId>jboss-common-core</artifactId>
              <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-reflect</artifactId>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>jboss</groupId>
                <artifactId>jboss-serialization</artifactId>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.deployers</groupId>
                <artifactId>jboss-deployers-core-spi</artifactId>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.deployers</groupId>
                <artifactId>jboss-deployers-client-spi</artifactId>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.jbossas</groupId>
                <artifactId>jboss-as-profileservice</artifactId>
                <classifier>client</classifier>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.jboss.jbossas</groupId>
                <artifactId>jboss-as-server</artifactId>
                <classifier>jmx-invoker-adaptor-client</classifier>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>jboss.messaging</groupId>
                <artifactId>jboss-messaging-client</artifactId>
                <scope>test</scope>
            </dependency>
    -->
    <!-- Uncomment the below deps if you want to pull down the jboss-profileservice
         and jboss-system sources jars for debugging purposes.
    -->
    <!--
            <dependency>
                <groupId>org.jboss.jbossas</groupId>
                <artifactId>jboss-as-profileservice</artifactId>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.jbossas</groupId>
                <artifactId>jboss-as-system</artifactId>
                <scope>provided</scope>
            </dependency>
    -->

    <dependency>
       <groupId>${rhq.groupId}</groupId>
       <artifactId>rhq-core-plugin-test-api</artifactId>
       <version>${project.version}</version>
       <type>pom</type>
       <scope>test</scope>
    </dependency>

    <dependency>
       <groupId>${rhq.groupId}</groupId>
       <artifactId>rhq-core-plugin-test-util</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>

          <execution>
            <id>copy-dependencies</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>runtime</includeScope>
              <excludeTransitive>true</excludeTransitive>
              <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
            </configuration>
          </execution>

          <execution>
            <id>copy-dependencies-of-jbossas-common</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>jboss</groupId>
                  <artifactId>jbpm</artifactId>
                  <version>3.1.1</version>
                </artifactItem>
                <artifactItem>
                  <groupId>ant</groupId>
                  <artifactId>ant</artifactId>
                  <version>1.6.5</version>
                </artifactItem>
                <artifactItem>
                  <groupId>dom4j</groupId>
                  <artifactId>dom4j</artifactId>
                  <version>1.6.1</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludes>
            <exclude>org/rhq/plugins/jbossas5/itest/**</exclude>
            <exclude>org/rhq/plugins/jbossas5/test/**</exclude>
          </excludes>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>

    <profile>
      <id>integration-tests</id>
      <!--
      <activation>
         <property>
            <name>maven.test.skip</name>
            <value>!true</value>
         </property>
      </activation>
      -->

      <build>
        <plugins>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>pre-integration-test</phase>
                <configuration>
                  <tasks>
                    <echo>Setting up plugin dependencies...</echo>
                    <property name="settings.localRepository"
                              location="${user.home}/.m2/repository"/>
                    <mkdir dir="target/itest"/>
                    <mkdir dir="target/itest/plugins"/>
                    <mkdir dir="target/itest/lib"/>
                    <copy toDir="target/itest/plugins" flatten="true">
                      <fileset dir="${settings.localRepository}/">
                        <include
                            name="org/rhq/rhq-platform-plugin/${project.version}/rhq-platform-plugin-${project.version}.jar"/>
                        <include
                            name="org/rhq/rhq-jmx-plugin/${project.version}/rhq-jmx-plugin-${project.version}.jar"/>
                      </fileset>
                      <fileset dir="${project.build.directory}">
                        <include name="${project.artifactId}-${project.version}.jar"/>
                      </fileset>
                    </copy>
                    <unzip dest="target/itest/lib">
                      <fileset
                          dir="${settings.localRepository}/org/hyperic/sigar-dist/${sigar.version}"
                          includes="*.zip"/>
                      <patternset>
                        <include name="**/lib/sigar.jar"/>
                        <include name="**/lib/bcel*.jar"/>
                        <include name="**/lib/*.so"/>
                        <include name="**/lib/*.sl"/>
                        <include name="**/lib/*.dll"/>
                        <include name="**/lib/*.dylib"/>
                      </patternset>
                    </unzip>
                    <move todir="target/itest/lib" flatten="true">
                      <fileset dir="target/itest/lib">
                        <include name="**/lib/*"/>
                      </fileset>
                    </move>
                    <delete dir="target/itest/lib/hyperic-sigar-${sigar.version}"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <skip>true</skip>
            </configuration>
            <executions>
              <execution>
                <id>surefire-it</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skipTests>${skipTests}</skipTests>
                  <parallel>false</parallel>
                  <useSystemClassLoader>true</useSystemClassLoader>
                  <excludes><exclude>org/rhq/plugins/jbossas5/itest/**</exclude></excludes>
                  <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
                  <argLine>-Dorg.hyperic.sigar.path=${basedir}/target/itest/lib</argLine>
                  <!--<argLine>-Dorg.hyperic.sigar.path=${basedir}/target/itest/lib -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y</argLine>-->
                  <additionalClasspathElements>
                    <additionalClasspathElement>
                      ${project.build.testSourceDirectory}/../jars/ejb2-test.jar
                    </additionalClasspathElement>
                    <additionalClasspathElement>
                      ${project.build.testSourceDirectory}/../jars/ejb2-entity-bean-test.jar
                    </additionalClasspathElement>
                    <additionalClasspathElement>
                      ${project.build.testSourceDirectory}/../jars/ejb2-sfsb-test.jar
                    </additionalClasspathElement>
                    <additionalClasspathElement>
                      ${project.build.testSourceDirectory}/../jars/ejb3-slsb-test.jar
                    </additionalClasspathElement>
                    <additionalClasspathElement>
                      ${project.build.testSourceDirectory}/../jars/ejb3-sfsb-test.jar
                    </additionalClasspathElement>
                    <additionalClasspathElement>
                      ${project.build.testSourceDirectory}/../jars/ejb3-local-interface-test.jar
                    </additionalClasspathElement>
                  </additionalClasspathElements>
                  <systemProperties>
                    <property>
                      <name>project.artifactId</name>
                      <value>${project.artifactId}</value>
                    </property>
                    <property>
                      <name>project.version</name>
                      <value>${project.version}</value>
                    </property>
                    <property>
                      <name>ejb2.test.jars.path</name>
                      <value>
                        ${project.build.testSourceDirectory}/../jars/ejb2-test.jar;${project.build.testSourceDirectory}/../jars/ejb2-entity-bean-test.jar;${project.build.testSourceDirectory}/../jars/ejb2-sfsb-test.jar
                      </value>
                    </property>
                    <property>
                      <name>ejb3.test.jars.path</name>
                      <value>
                        ${project.build.testSourceDirectory}/../jars/ejb3-slsb-test.jar;${project.build.testSourceDirectory}/../jars/ejb3-sfsb-test.jar;${project.build.testSourceDirectory}/../jars/ejb3-mdb-test.jar;${project.build.testSourceDirectory}/../jars/ejb3-embedded-test.ear;${project.build.testSourceDirectory}/../jars/ejb3-local-interface-test.jar
                      </value>
                    </property>
                    <property>
                      <name>principal</name>
                      <value>admin</value>
                    </property>
                    <property>
                      <name>credentials</name>
                      <value>admin</value>
                    </property>
                  </systemProperties>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>as600.itest.setup</id>

      <activation>
        <property>
          <name>as5.version</name>
          <value>6.0.0.Final</value>
        </property>
      </activation>

      <properties>
        <as5.url>http://sourceforge.net/projects/jboss/files/JBoss/JBoss-6.0.0.Final/jboss-as-distribution-6.0.0.Final.zip/download</as5.url>
      </properties>

    </profile>

    <profile>
      <id>as610.itest.setup</id>

      <activation>
        <property>
          <name>as5.version</name>
          <value>6.1.0.Final</value>
        </property>
      </activation>

      <properties>
        <as5.url>http://download.jboss.org/jbossas/6.1/jboss-as-distribution-6.1.0.Final.zip</as5.url>
      </properties>

    </profile>

    <!-- Activate this profile to run the integration tests (these can take a while to complete). -->
    <profile>
      <id>as5.itest</id>

      <activation>
        <property>
          <name>as5.itest</name>
        </property>
      </activation>

      <properties>
        <jboss5.home>${java.io.tmpdir}/jboss-as-${as5.version}</jboss5.home>
        <jboss.bindAddress>127.0.0.1</jboss.bindAddress>
        <jboss.portOffset>30000</jboss.portOffset>
        <!-- IMPORTANT: The management port must be the port offset + 1099. -->
        <jboss.jnpPort>31099</jboss.jnpPort>
      </properties>

      <build>
        <plugins>

          <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                  <execution>
                      <id>downloadAndUnzip</id>
                      <phase>initialize</phase>
                      <goals>
                          <goal>run</goal>
                      </goals>
                      <configuration>
                          <target>
                            <property name="as5.zipfile"
                                      location="${java.io.tmpdir}/jboss-as-${as5.version}.zip"/>
                            <get src="${as5.url}" dest="${as5.zipfile}"
                                 usetimestamp="true" verbose="true"/>
                            <unzip src="${as5.zipfile}" dest="${java.io.tmpdir}"/>
                            <move file="${java.io.tmpdir}/jboss-${as5.version}"
                                  tofile="${java.io.tmpdir}/jboss-as-${as5.version}" failonerror="false"
                                  overwrite="false"/>
                            <replace dir="${jboss5.home}"
                                     includes="server/default/conf/bindingservice.beans/META-INF/bindings-jboss-beans.xml"
                                     token="&lt;parameter&gt;300&lt;/parameter&gt;" value="&lt;parameter&gt;${jboss.portOffset}&lt;/parameter&gt;"/>
                          </target>
                      </configuration>
                  </execution>
              </executions>
          </plugin>

          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>1.2.1.jbossorg-3</version>

            <executions>
              <execution>
                <id>start-jboss5</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>exec</goal>
                </goals>
                <configuration>
                    <background>true</background>
                    <backgroundPollingAddress>${jboss.bindAddress}:${jboss.jnpPort}</backgroundPollingAddress>
                    <executable>${java.home}/bin/java</executable>
                    <arguments>
                      <argument>-server</argument>
                      <argument>-Xms128M</argument>
                      <argument>-Xmx512M</argument>
                      <argument>-XX:MaxPermSize=256M</argument>
                      <argument>-Dorg.jboss.resolver.warning=true</argument>
                      <argument>-Dsun.rmi.dgc.client.gcInterval=3600000</argument>
                      <argument>-Dsun.rmi.dgc.server.gcInterval=3600000</argument>
                      <argument>-Djava.net.preferIPv4Stack=true</argument>
                      <argument>-Dlogging.configuration=file://${jboss5.home}/bin/logging.properties</argument>
                      <argument>-Djava.library.path=${jboss5.home}/bin/native/lib64</argument>
                      <argument>-Djava.endorsed.dirs=${jboss5.home}/lib/endorsed</argument>
                      <argument>-classpath</argument>
                      <argument>${jboss5.home}/bin/run.jar:${java.home}/lib/tools.jar</argument>
                      <argument>org.jboss.Main</argument>
                      <argument>--configuration=default</argument>
                      <argument>--host=${jboss.bindAddress}</argument>
                      <argument>-Djboss.service.binding.set=ports-03</argument>
                    </arguments>
                </configuration>
              </execution>

            </executions>

          </plugin>

          <plugin>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <includes><include>org/rhq/plugins/jbossas5/itest/**/*Test.java</include></includes>
              <systemPropertyVariables>
                <arquillian.xml>${project.build.testSourceDirectory}/../resources/itest/arquillian.xml</arquillian.xml>
                <jboss5.home>${jboss5.home}</jboss5.home>
                <as5.version>${as5.version}</as5.version>
              </systemPropertyVariables>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>

    </profile>

    <profile>
      <id>dev</id>

      <properties>
        <rhq.rootDir>../../..</rhq.rootDir>
        <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
        <rhq.deploymentDir>
          ${rhq.containerDir}/jbossas/server/default/deploy/${rhq.earName}/rhq-downloads/rhq-plugins
        </rhq.deploymentDir>
      </properties>

      <build>
        <plugins>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>

              <execution>
                <id>deploy</id>
                <phase>compile</phase>
                <configuration>
                  <tasks>
                    <mkdir dir="${rhq.deploymentDir}"/>
                    <property name="deployment.file"
                              location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                    <echo>*** Updating ${deployment.file}...</echo>
                    <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>deploy-jar-meta-inf</id>
                <phase>package</phase>
                <configuration>
                  <tasks>
                    <property name="deployment.file"
                              location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                    <echo>*** Updating META-INF dir in ${deployment.file}...</echo>
                    <unjar src="${project.build.directory}/${project.build.finalName}.jar"
                           dest="${project.build.outputDirectory}">
                      <patternset>
                        <include name="META-INF/**"/>
                      </patternset>
                    </unjar>
                    <jar destfile="${deployment.file}"
                         manifest="${project.build.outputDirectory}/META-INF/MANIFEST.MF"
                         update="true">
                    </jar>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>undeploy</id>
                <phase>clean</phase>
                <configuration>
                  <tasks>
                    <property name="deployment.file"
                              location="${rhq.deploymentDir}/${project.build.finalName}.jar"/>
                    <echo>*** Deleting ${deployment.file}...</echo>
                    <delete file="${deployment.file}"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>cobertura-plugins</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.cobertura</groupId>
                <artifactId>cobertura</artifactId>
                <version>${cobertura.version}</version>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>cobertura-instrument</id>
                <phase>pre-integration-test</phase>
                <configuration>
                  <tasks>
                    <!-- prepare directory structure for cobertura-->
                    <mkdir dir="target/cobertura"/>
                    <mkdir dir="target/cobertura/backup"/>
                    <!-- backup all classes so that we can instrument the original classes-->
                    <copy toDir="target/cobertura/backup" verbose="true" overwrite="true">
                      <fileset dir="target/classes">
                        <include name="**/*.class"/>
                      </fileset>
                    </copy>
                    <!-- create a properties file and save there location of cobertura data file-->
                    <touch file="target/classes/cobertura.properties"/>
                    <echo file="target/classes/cobertura.properties">
                      net.sourceforge.cobertura.datafile=${project.build.directory}/cobertura/cobertura.ser
                    </echo>
                    <taskdef classpathref="maven.plugin.classpath" resource="tasks.properties"/>
                    <!-- instrument all classes in target/classes directory -->
                    <cobertura-instrument
                        datafile="${project.build.directory}/cobertura/cobertura.ser"
                        todir="${project.build.directory}/classes">
                      <fileset dir="${project.build.directory}/classes">
                        <include name="**/*.class"/>
                      </fileset>
                    </cobertura-instrument>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
              <execution>
                <id>cobertura-report</id>
                <phase>post-integration-test</phase>
                <configuration>
                  <tasks>
                    <taskdef classpathref="maven.plugin.classpath" resource="tasks.properties"/>
                    <!-- prepare directory structure for cobertura-->
                    <mkdir dir="target/cobertura"/>
                    <mkdir dir="target/site/cobertura"/>
                    <!-- restore classes from backup folder to classes folder -->
                    <copy toDir="target/classes" verbose="true" overwrite="true">
                      <fileset dir="target/cobertura/backup">
                        <include name="**/*.class"/>
                      </fileset>
                    </copy>
                    <!-- delete backup folder-->
                    <delete dir="target/cobertura/backup"/>
                    <!-- create a code coverage report -->
                    <cobertura-report format="html"
                                      datafile="${project.build.directory}/cobertura/cobertura.ser"
                                      destdir="${project.build.directory}/site/cobertura">
                      <fileset dir="${basedir}/src/main/java">
                        <include name="**/*.java"/>
                      </fileset>
                    </cobertura-report>
                    <!-- delete cobertura.properties file -->
                    <delete file="target/classes/cobertura.properties"/>
                  </tasks>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

  </profiles>


  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>2.3.2</version>
      </plugin>
    </plugins>
  </reporting>

</project>

