<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-plugins-parent</artifactId>
      <version>4.9.0.JON320ER4</version>
   </parent>

   <groupId>org.rhq</groupId>
   <artifactId>rhq-rhqstorage-plugin</artifactId>

   <name>RHQ Storage Plugin</name>
   <description>A plugin for managing RHQ Storage Nodes</description>

  <properties>
    <pc.basedir>${project.build.directory}/plugin-container</pc.basedir>
    <pc.plugins.dir>${pc.basedir}/plugins</pc.plugins.dir>
    <pc.lib.dir>${pc.basedir}/lib</pc.lib.dir>
  </properties>

   <dependencies>

     <dependency>
       <groupId>${rhq.groupId}</groupId>
       <artifactId>rhq-cassandra-plugin</artifactId>
       <version>${project.version}</version>
     </dependency>

     <dependency>
       <groupId>${project.groupId}</groupId>
       <artifactId>rhq-cassandra-schema</artifactId>
       <version>${project.version}</version>
     </dependency>

     <dependency>
       <groupId>${rhq.groupId}</groupId>
       <artifactId>rhq-jmx-plugin</artifactId>
       <version>${project.version}</version>
       <scope>provided</scope>
     </dependency>

     <dependency>
       <groupId>mc4j</groupId>
       <artifactId>org-mc4j-ems</artifactId>
       <scope>provided</scope>
     </dependency>

     <!-- Test dependencies -->

     <dependency>
       <groupId>${project.groupId}</groupId>
       <artifactId>rhq-cassandra-ccm-core</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
     </dependency>

     <dependency>
       <groupId>${project.groupId}</groupId>
       <artifactId>rhq-platform-plugin</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
     </dependency>

     <dependency>
       <groupId>${rhq.groupId}</groupId>
       <artifactId>test-utils</artifactId>
       <version>${project.version}</version>
       <scope>test</scope>
       <exclusions>
         <exclusion>
           <groupId>org.slf4j</groupId>
           <artifactId>slf4j-nop</artifactId>
         </exclusion>
       </exclusions>
     </dependency>

     <dependency>
       <groupId>org.picketbox</groupId>
       <artifactId>picketbox</artifactId>
       <scope>test</scope>
     </dependency>

   </dependencies>

   <build>
     <plugins>
       <plugin>
         <artifactId>maven-antrun-plugin</artifactId>
         <executions>
           <execution>
             <phase>pre-integration-test</phase>
             <configuration>
               <target>
                 <property name="sigar.dir" value="${project.build.directory}/sigar"/>

                 <mkdir dir="${pc.basedir}"/>
                 <mkdir dir="${pc.lib.dir}"/>
                 <mkdir dir="${pc.plugins.dir}"/>

                 <copy file="${org.rhq:rhq-platform-plugin:jar}" todir="${pc.plugins.dir}"/>
                 <copy file="${org.rhq:rhq-jmx-plugin:jar}" todir="${pc.plugins.dir}"/>
                 <copy file="${org.rhq:rhq-cassandra-plugin:jar}" todir="${pc.plugins.dir}"/>
                 <copy file="${project.build.directory}/${project.build.finalName}.jar" todir="${pc.plugins.dir}"/>

                 <unzip src="${org.hyperic:sigar-dist:zip}" dest="${sigar.dir}">
                   <patternset>
                     <include name="**/lib/sigar.jar" />
                     <include name="**/lib/bcel*.jar" />
                     <include name="**/lib/*.so" />
                     <include name="**/lib/*.sl" />
                     <include name="**/lib/*.dll" />
                     <include name="**/lib/*.dylib" />
                   </patternset>
                 </unzip>
                 <move todir="${pc.lib.dir}" flatten="true">
                   <fileset dir="${sigar.dir}" includes="**/lib/*"/>
                 </move>
                 <delete dir="${sigar.dir}"/>
               </target>
             </configuration>
             <goals>
               <goal>run</goal>
             </goals>
           </execution>
         </executions>
       </plugin>

       <plugin>
         <artifactId>maven-failsafe-plugin</artifactId>
         <version>2.13</version>
         <configuration>
           <includes>
             <include>**/*ITest.java</include>
           </includes>
           <argLine>-Djava.library.path=${pc.lib.dir}</argLine>
           <systemPropertyVariables>
             <pc.plugins.dir>${pc.plugins.dir}</pc.plugins.dir>
           </systemPropertyVariables>
           <properties>
             <property>
               <name>listener</name>
               <value>org.rhq.test.testng.StdoutReporter</value>
             </property>
           </properties>
         </configuration>
         <executions>
           <execution>
             <id>integration-test</id>
             <goals>
               <goal>integration-test</goal>
             </goals>
           </execution>
           <execution>
             <id>verify</id>
             <goals>
               <goal>verify</goal>
             </goals>
           </execution>
         </executions>
       </plugin>

       <plugin>
         <artifactId>maven-surefire-plugin</artifactId>
         <configuration>
           <excludes>
             <exclude>**/*ITest.java</exclude>
           </excludes>
           <properties>
             <property>
               <name>listener</name>
               <value>org.rhq.test.testng.StdoutReporter</value>
             </property>
           </properties>
         </configuration>
       </plugin>
     </plugins>
   </build>

   <profiles>
      <profile>
         <id>dev</id>

         <properties>
            <rhq.rootDir>../../..</rhq.rootDir>
            <rhq.containerDir>${rhq.rootDir}/${rhq.devContainerServerPath}</rhq.containerDir>
            <rhq.deploymentDir>${rhq.containerDir}/${rhq.agentPluginDir}</rhq.deploymentDir>
         </properties>

         <build>
            <plugins>

               <plugin>
                 <artifactId>maven-antrun-plugin</artifactId>
                 <executions>

                     <execution>
                        <id>deploy</id>
                        <phase>compile</phase>
                        <configuration>
                          <target>
                            <mkdir dir="${rhq.deploymentDir}" />
                            <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                            <echo>*** Updating ${deployment.file}...</echo>
                            <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}" />
                          </target>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>deploy-jar-meta-inf</id>
                        <phase>package</phase>
                        <configuration>
                          <target>
                             <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                             <echo>*** Updating META-INF dir in ${deployment.file}...</echo>
                             <unjar src="${project.build.directory}/${project.build.finalName}.jar" dest="${project.build.outputDirectory}">
                               <patternset><include name="META-INF/**" /></patternset>
                             </unjar>
                             <jar destfile="${deployment.file}" manifest="${project.build.outputDirectory}/META-INF/MANIFEST.MF" update="true">
                             </jar>
                          </target>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>undeploy</id>
                        <phase>clean</phase>
                        <configuration>
                          <target>
                            <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                            <echo>*** Deleting ${deployment.file}...</echo>
                            <delete file="${deployment.file}" />
                          </target>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>

                   </executions>
               </plugin>

            </plugins>
         </build>
      </profile>
   </profiles>
</project>

