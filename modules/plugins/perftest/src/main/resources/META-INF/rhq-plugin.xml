<?xml version="1.0" encoding="UTF-8" ?>

<plugin name="PerfTest"
        displayName="Performance Test Plugin"
        package="org.rhq.plugins.perftest"
        description="A utility plugin for testing the performance of the RHQ Server and Agent Subsystems"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration">

   <platform name="platform-a" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Platform A">
   </platform>

   <!-- try to make server-a and its children representative of "average" resources -->
   <server name="server-omega" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Server Omega">

      <plugin-configuration>
         <c:simple-property name="omega-property0"/>
         <c:simple-property name="omega-property1"/>
         <c:simple-property name="omega-property2"/>
         <c:simple-property name="omega-property3"/>
         <c:simple-property name="omega-property4"/>
      </plugin-configuration>

      <metric displayName="Omega Metric 0" property="omega-metric0" defaultOn="false"/>
      <metric displayName="Omega Metric 1" property="omega-metric1" defaultOn="true" displayType="summary"/>
      <metric displayName="Omega Metric 2" property="omega-metric2" defaultOn="true" displayType="summary"/>
      <metric displayName="Omega Metric 3" property="omega-metric3" defaultOn="true" displayType="summary"/>
      <metric displayName="Omega Metric 4" property="omega-metric4" defaultOn="true" displayType="summary"/>
      <metric displayName="Omega Metric 5" property="omega-metric5" defaultOn="true" displayType="summary"/>
      <metric displayName="Omega Metric 6" property="omega-metric6" defaultOn="true" displayType="detail"/>
      <metric displayName="Omega Metric 7" property="omega-metric7" defaultOn="true" displayType="detail"/>
      <metric displayName="Omega Metric 8" property="omega-metric8" defaultOn="true" displayType="detail"/>
      <metric displayName="Omega Metric 9" property="omega-metric9" defaultOn="true" displayType="detail"/>
      <metric displayName="Omega Metric 10" property="omega-metric10" defaultOn="true" displayType="detail"/>

      <event name="OmegaEventType" description="a test event type for omega server"/>

      <content displayName="Omega Content 0" name="omega-content0" category="configuration"/>
      <content displayName="Omega Content 1" name="omega-content1" category="configuration"/>
      <content displayName="Omega Content 2" name="omega-content2" category="configuration"/>
      <content displayName="Omega Content 3" name="omega-content3" category="configuration"/>
      <content displayName="Omega Content 4" name="omega-content4" category="configuration"/>

      <service name="service-alpha" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Omega Service Alpha">

         <plugin-configuration>
            <c:simple-property name="alpha-property0"/>
            <c:simple-property name="alpha-property1"/>
            <c:simple-property name="alpha-property2"/>
         </plugin-configuration>

         <operation name="createEvents">
            <parameters>
               <c:simple-property name="source" required="true" type="string" description="The event source"/>
               <c:simple-property name="details" required="true" type="string" description="The event details"/>
               <c:simple-property name="severity" required="true" type="string" description="The event severity"/>
               <c:simple-property name="count" required="true" type="integer" default="1" description="The number of events to create"/>
            </parameters>
            <results>
               <c:simple-property name="succeeded" type="string" description="A flag that indicates whether or not the operation succeeded"/>
            </results>
         </operation>

         <metric displayName="Alpha Metric 0" property="alpha-metric0" defaultOn="false"/>
         <metric displayName="Alpha Metric 1" property="alpha-metric1" defaultOn="true" displayType="summary"/>
         <metric displayName="Alpha Metric 2" property="alpha-metric2" defaultOn="true" displayType="summary"/>
         <metric displayName="Alpha Metric 3" property="alpha-metric3" defaultOn="true" displayType="detail"/>
         <metric displayName="Alpha Metric 4" property="alpha-metric4" defaultOn="true" displayType="detail"/>
         <metric displayName="Alpha Metric 5" property="alpha-metric5" defaultOn="true" displayType="detail"/>

         <event name="service-alpha-event" description="An event for the service-alpha service"/>

         <content displayName="Alpha Content 0" name="alpha-content0" category="configuration"/>

      </service>

      <service name="service-beta" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Omega Service Beta">

         <plugin-configuration>
            <c:simple-property name="beta-property0"/>
         </plugin-configuration>

         <operation name="createEvents">
            <parameters>
               <c:simple-property name="source" required="true" type="string" description="The event source"/>
               <c:simple-property name="details" required="true" type="string" description="The event details"/>
               <c:simple-property name="severity" required="true" type="string" description="The event severity"/>
               <c:simple-property name="count" required="true" type="integer" default="1" description="The number of events to create"/>
            </parameters>
            <results>
               <c:simple-property name="succeeded" type="boolean" description="A flag that indicates whether or not the operation succeeded"/>
            </results>
         </operation>

         <metric displayName="Beta Metric 0" property="beta-metric0" defaultOn="false"/>
         <metric displayName="Beta Metric 1" property="beta-metric1" defaultOn="true" displayType="summary"/>
         <metric displayName="Beta Metric 2" property="beta-metric2" defaultOn="true" displayType="summary"/>
         <metric displayName="Beta Metric 3" property="beta-metric3" defaultOn="true" displayType="summary"/>
         <metric displayName="Beta Metric 4" property="beta-metric4" defaultOn="true" displayType="summary"/>
         <metric displayName="Beta Metric 5" property="beta-metric5" defaultOn="true" displayType="summary"/>
         <metric displayName="Beta Metric 6" property="beta-metric6" defaultOn="true" displayType="detail"/>
         <metric displayName="Beta Metric 7" property="beta-metric7" defaultOn="true" displayType="detail"/>
         <metric displayName="Beta Metric 8" property="beta-metric8" defaultOn="true" displayType="detail"/>
         <metric displayName="Beta Metric 9" property="beta-metric9" defaultOn="true" displayType="detail"/>
         <metric displayName="Beta Metric 10" property="beta-metric10" defaultOn="true" displayType="detail"/>

         <event name="service-beta-event" description="An event for the service-beta event"/>

         <resource-configuration>
            <c:simple-property name="beta-config0"/>
            <c:simple-property name="beta-config1"/>
            <c:simple-property name="beta-config2"/>
         </resource-configuration>
      </service>

      <service name="service-gamma" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Omega Service Gamma">
         <plugin-configuration>
            <c:simple-property name="gamma-property0"/>
         </plugin-configuration>
         
         <metric displayName="Gamma Metric 0" property="gamma-metric0" defaultOn="false"/>         
      </service>

   </server>

   <!-- try to make server-a and its children representative of "average" resources -->
   <server name="server-a" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Server A">

      <subcategories>
         <subcategory name="subcategory0">
            <subcategory name="childSubcategory0"/>
         </subcategory>
      </subcategories>

      <plugin-configuration>
         <c:simple-property name="property0"/>
         <c:simple-property name="property1"/>
         <c:simple-property name="property2"/>
         <c:simple-property name="property3"/>
         <c:simple-property name="property4"/>
      </plugin-configuration>

      <operation name="operation0"/>

      <metric property="metric0" defaultOn="true" displayType="summary"/>
      <metric property="metric1" defaultOn="true" displayType="summary"/>
      <metric property="metric2" defaultOn="true" displayType="summary"/>
      <metric property="metric3" defaultOn="true" displayType="summary"/>
      <metric property="metric4" defaultOn="true" displayType="summary"/>
      <metric property="metric5" defaultOn="true" displayType="summary"/>
      <metric property="metric6" defaultOn="true" displayType="summary"/>
      <metric property="metric7" defaultOn="true" displayType="summary"/>
      <metric property="metric8" defaultOn="true" displayType="summary"/>
      <metric property="metric9" defaultOn="true" displayType="summary"/>

      <metric property="trait000" defaultOn="true" dataType="trait" displayType="summary"/>
      <metric property="trait001" defaultOn="true" dataType="trait" displayType="summary"/>
      <metric property="trait002" defaultOn="true" dataType="trait" displayType="summary"/>
      <metric property="trait003" defaultOn="true" dataType="trait" displayType="summary"/>
      <metric property="trait004" defaultOn="true" dataType="trait" displayType="summary"/>

      <event name="PerfTestEventType" description="a test event type"/>

      <content name="artifact0" displayName="Artifact 0" category="configuration"/>
      <content name="artifact1" displayName="Artifact 1" category="configuration"/>
      <content name="artifact2" displayName="Artifact 2" category="configuration"/>
      <content name="artifact3" displayName="Artifact 3" category="configuration"/>
      <content name="artifact4" displayName="Artifact 4" category="configuration"/>

      <service name="service-a" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent"
               description="Nested Service A" subCategory="childSubcategory0">

         <plugin-configuration>
            <c:simple-property name="childProperty0" default="red"/>
            <c:simple-property name="childProperty1" default="green"/>
            <c:simple-property name="childProperty2" default="blue"/>
         </plugin-configuration>

         <operation name="childOperation0"/>

         <metric property="childMetric0" defaultOn="true" displayType="summary"/>
         <metric property="childMetric1" defaultOn="true" displayType="summary"/>
         <metric property="childMetric2" defaultOn="true" displayType="summary"/>
         <metric property="childMetric3" defaultOn="true" displayType="summary"/>
         <metric property="childMetric4" defaultOn="true" displayType="summary"/>
         <metric property="childMetric5" defaultOn="true" displayType="summary"/>
         <metric property="childMetric6" defaultOn="true" displayType="summary"/>
         <metric property="childMetric7" defaultOn="true" displayType="summary"/>
         <metric property="childMetric8" defaultOn="true" displayType="summary"/>
         <metric property="childMetric9" defaultOn="true" displayType="summary"/>

         <metric property="childTrait000" defaultOn="true" dataType="trait" displayType="summary"/>
         <metric property="childTrait001" defaultOn="true" dataType="trait" displayType="summary"/>
         <metric property="childTrait002" defaultOn="true" dataType="trait" displayType="summary"/>
         <metric property="childTrait003" defaultOn="true" dataType="trait" displayType="summary"/>
         <metric property="childTrait004" defaultOn="true" dataType="trait" displayType="summary"/>

         <content name="childArtifact0" displayName="Child Artifact 0" category="configuration"/>

         <resource-configuration>

              <!-- This group contains a sampling of all of the various types of properties. -->
              <c:group name="group1" displayName="Group 1">
                  <c:simple-property name="string" type="string" default="blah"/>
                  <c:simple-property name="longString" type="longString" default="blah blah blah"/>
                  <c:simple-property name="password" type="password" default="secret"/>
                  <c:simple-property name="boolean" type="boolean" default="true"/>
                  <c:simple-property name="integer" type="integer" default="42"/>
                  <c:simple-property name="long" type="long" default="1000000000000"/>
                  <c:simple-property name="float" type="float" default="3.14"/>
                  <c:simple-property name="double" type="double" default="0.123456789"/>
                  <c:simple-property name="file" type="file" default="/etc/passwd"/>
                  <c:simple-property name="directory" type="directory" default="/tmp"/>

                  <c:simple-property name="enum" default="blue">
                      <c:property-options>
                          <c:option value="red" name="Red"/>
                          <c:option value="green" name="Green"/>
                          <c:option value="blue" name="Blue"/>
                      </c:property-options>
                  </c:simple-property>

                  <c:simple-property name="optional" required="false" default="boo"/>
                  <c:simple-property name="readOnly" readOnly="true" default="fixed"/>

                  <c:map-property name="openMap"/>

                  <c:map-property name="map">
                      <c:simple-property name="mapMember1" default="value1"/>
                      <c:simple-property name="mapMember2" default="value2"/>
                      <c:simple-property name="mapMember3" default="value3"/>
                  </c:map-property>

                  <c:list-property name="listOfMaps">
                      <c:map-property name="listMember">
                          <c:simple-property name="mapInListMember1" default="value1"/>
                          <c:simple-property name="mapInListMember2" default="value2"/>
                          <c:simple-property name="mapInListMember3" default="value3"/>
                      </c:map-property>
                  </c:list-property>
              </c:group>

              <!-- This group just contains a whole bunch of props to give this config some bulk. -->
              <c:group name="group2" displayName="Group 2">
                  <c:simple-property name="string1" default="foo"/>
                  <c:simple-property name="string2" default="foo"/>
                  <c:simple-property name="string3" default="foo"/>
                  <c:simple-property name="string4" default="foo"/>
                  <c:simple-property name="string5" default="foo"/>
                  <c:simple-property name="string6" default="foo"/>
                  <c:simple-property name="string7" default="foo"/>
                  <c:simple-property name="string8" default="foo"/>
                  <c:simple-property name="string9" default="foo"/>
                  <c:simple-property name="string10" default="foo"/>
                  <c:simple-property name="string11" default="foo"/>
                  <c:simple-property name="string12" default="foo"/>
                  <c:simple-property name="string13" default="foo"/>
                  <c:simple-property name="string14" default="foo"/>
                  <c:simple-property name="string15" default="foo"/>
                  <c:simple-property name="string16" default="foo"/>
                  <c:simple-property name="string17" default="foo"/>
                  <c:simple-property name="string18" default="foo"/>
                  <c:simple-property name="string19" default="foo"/>
                  <c:simple-property name="string20" default="foo"/>
              </c:group>

              <!-- Throw in a template for good measure. -->
              <c:template name="template1" description="Template 1">
                  <c:simple-property name="string" default="template1Value"/>
              </c:template>

         </resource-configuration>

         <service name="service-ab" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Nested Service A-B">
            <plugin-configuration>
               <c:simple-property name="grandchildProperty0"/>
            </plugin-configuration>
         </service>

      </service>

   </server>

   <server name="server-b" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Server B">

      <metric displayName="Metric 00" property="metric00" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 01" property="metric01" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 02" property="metric02" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 03" property="metric03" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 04" property="metric04" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 05" property="metric05" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 06" property="metric06" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 07" property="metric07" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 08" property="metric08" defaultOn="true" displayType="summary"/>
      <metric displayName="Metric 09" property="metric09" defaultOn="true" displayType="summary"/>

      <metric displayName="Metric 10" property="metric10" defaultOn="true"/>
      <metric displayName="Metric 11" property="metric11" defaultOn="true"/>
      <metric displayName="Metric 12" property="metric12" defaultOn="true"/>
      <metric displayName="Metric 13" property="metric13" defaultOn="true"/>
      <metric displayName="Metric 14" property="metric14" defaultOn="true"/>
      <metric displayName="Metric 15" property="metric15" defaultOn="true"/>
      <metric displayName="Metric 16" property="metric16" defaultOn="true"/>
      <metric displayName="Metric 17" property="metric17" defaultOn="true"/>
      <metric displayName="Metric 18" property="metric18" defaultOn="true"/>
      <metric displayName="Metric 19" property="metric19" defaultOn="true"/>
      <metric displayName="CallTime"  property="calltime" defaultOn="true" dataType="calltime" defaultInterval="60000" units="milliseconds"/>

      <event name="PerfTestEventType" description="a test event type"/>

      <service name="service-b" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Nested Service B"/>

      <service name="service-b-metrics" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Nested Service B With Metrics">
         <metric property="metric000" defaultOn="true" displayType="summary"/>
         <metric property="metric001" defaultOn="true" displayType="summary"/>
         <metric property="metric002" defaultOn="true" displayType="summary"/>
         <metric property="metric003" defaultOn="true" displayType="summary"/>
         <metric property="metric004" defaultOn="true" displayType="summary"/>
         <metric property="metric005" defaultOn="true" displayType="summary"/>
         <metric property="metric006" defaultOn="true" displayType="summary"/>
         <metric property="metric007" defaultOn="true" displayType="summary"/>
         <metric property="metric008" defaultOn="true" displayType="summary"/>
         <metric property="metric009" defaultOn="true" displayType="summary"/>

         <metric property="metric010" defaultOn="true"/>
         <metric property="metric011" defaultOn="true"/>
         <metric property="metric012" defaultOn="true"/>
         <metric property="metric013" defaultOn="true"/>
         <metric property="metric014" defaultOn="true"/>
         <metric property="metric015" defaultOn="true"/>
         <metric property="metric016" defaultOn="true"/>
         <metric property="metric017" defaultOn="true"/>
         <metric property="metric018" defaultOn="true"/>
         <metric property="metric019" defaultOn="true"/>
      </service>

   </server>

   <server name="server-c" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Server C"/>

   <!-- used to perftest measurement collection w/ the following schedules:
          5 metrics every 10 mins == 0.5 metrics per minute, per service-d-metrics Resource
          3 traits every 1 hour == 0.05 traits per minute, per service-d-metrics Resource
   -->
   <server name="server-d" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Server D">
      <service name="service-d-metrics" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Nested Service D With Metrics">
         <metric property="metric000" defaultOn="true" displayType="summary" defaultInterval="570000"/>
         <metric property="metric001" defaultOn="true" displayType="summary" defaultInterval="570000"/>
         <metric property="metric002" defaultOn="true" displayType="summary" defaultInterval="600000"/>
         <metric property="metric003" defaultOn="true" displayType="summary" defaultInterval="630000"/>
         <metric property="metric004" defaultOn="true" displayType="summary" defaultInterval="630000"/>

         <metric property="trait000"  defaultOn="true" dataType="trait" displayType="summary" defaultInterval="3570000"/>
         <metric property="trait001"  defaultOn="true" dataType="trait" displayType="summary" defaultInterval="3600000"/>
         <metric property="trait002"  defaultOn="true" dataType="trait" displayType="summary" defaultInterval="3630000"/>

         <metric displayName="CallTime" property="calltime" defaultOn="false" dataType="calltime" defaultInterval="2400000" units="milliseconds"/>

         <event name="PerfTestEventType" description="a test event type"/>
      </service>
   </server>

   <server name="server-e" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Test Server E">
      <service name="service-e-metrics" class="PerfTestComponent" discovery="PerfTestDiscoveryComponent" description="Nested Service E With Metrics">
         <metric property="metric000" defaultOn="true" displayType="summary"/>
         <metric property="metric001" defaultOn="true" displayType="summary"/>
         <metric property="metric002" defaultOn="true" displayType="summary"/>
         <metric property="metric003" defaultOn="true" displayType="summary"/>
         <metric property="metric004" defaultOn="true" displayType="summary"/>
      </service>
   </server>

   <server name="server-rogue"
           class="PerfTestRogueComponent"
           discovery="PerfTestRogueDiscoveryComponent"
           description="Test Server That Behaves Badly">
      <!--
      <plugin-configuration>
         <c:simple-property name="avail" type="string" description="Set to true if the resource should be UP, false if DOWN. Anything else, throw an exception"/>
      </plugin-configuration>
       -->
      <operation name="op1">
         <parameters>
            <c:simple-property name="sleep" default="1000" required="true" type="long" description="Set to a number to force the component to sleep that number of milliseconds"/>
            <c:simple-property name="status" default="success" required="true" description="Set to 'success' or 'failure' for the op status. Any other value throws an exception"/>
         </parameters>
      </operation>
      <resource-configuration>
         <c:simple-property name="updateSleep" default="1000" required="true" type="long" description="Set to a number to force the component to sleep that number of milliseconds when updating the config"/>
         <c:simple-property name="updateStatus" default="success" required="true" description="Set to 'success' or 'failure' for the update status. Any other value throws an exception"/>
         <c:simple-property name="loadSleep" default="1000" required="true" type="long" description="Set to a number to force the component to sleep that number of milliseconds when loading the config"/>
         <c:simple-property name="loadStatus" default="success" required="true" description="Set to 'success' or 'failure' for the load status (failure throws an exception during load)"/>
      </resource-configuration>
   </server>

   <server name="server-config"
           class="PerfTestComponent"
           discovery="PerfTestDiscoveryComponent"
           description="A resource that has plugin config and resource config consisting of all types of properties">

      <plugin-configuration>
         <!-- This group contains a sampling of all of the various types of properties - they are required -->
         <c:group name="requiredGroup" displayName="Properties that are required">
            <c:simple-property name="Rstring"     type="string"     default="stringValueDefault"/>
            <c:simple-property name="RlongString" type="longString" default="longStringValueDefault"/>
            <c:simple-property name="Rpassword"   type="password"   default="passwordValueDefault"/>
            <c:simple-property name="Rboolean"    type="boolean"    default="true"/>
            <c:simple-property name="Rinteger"    type="integer"    default="42"/>
            <c:simple-property name="Rlong"       type="long"       default="1000000000000"/>
            <c:simple-property name="Rfloat"      type="float"      default="3.14"/>
            <c:simple-property name="Rdouble"     type="double"     default="0.123456789"/>
            <c:simple-property name="Rfile"       type="file"       default="/a/file"/>
            <c:simple-property name="Rdirectory"  type="directory"  default="/directory"/>

            <c:simple-property name="Renum1" default="blue" description="Few options, renders as radio buttons">
               <c:property-options>
                  <c:option value="red"   name="Red"/>
                  <c:option value="green" name="Green"/>
                  <c:option value="blue"  name="Blue"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property name="Renum2" default="banana" description="Lots of options, renders as drop down menu">
               <c:property-options>
                  <c:option value="apple"      name="Apple"/>
                  <c:option value="banana"     name="Banana"/>
                  <c:option value="peach"      name="Peach"/>
                  <c:option value="strawberry" name="Strawberry"/>
                  <c:option value="watermelon" name="Watermelon"/>
                  <c:option value="lemon"      name="Lemon"/>
                  <c:option value="lime"       name="Lime"/>
                  <c:option value="orange"     name="Orange"/>
                  <c:option value="pear"       name="Pear"/>
                  <c:option value="kiwi"       name="Kiwi"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property required="false" name="Roptional" type="string" default="optionalValueDefault"/>

            <c:map-property name="RopenMap"/>

            <c:map-property name="Rmap">
               <c:simple-property name="mapMember1" type="string"  default="mapMember1ValueDefault"/>
               <c:simple-property name="mapMember2" type="integer" default="42"/>
               <c:simple-property name="mapMember3" type="boolean" default="true"/>
            </c:map-property>

            <c:list-property name="RlistOfMaps">
               <c:map-property name="listMember">
                  <c:simple-property name="mapInListMember1" type="string" default="mapInListMember1ValueDefault"/>
                  <c:simple-property name="mapInListMember2" type="string" default="mapInListMember2ValueDefault"/>
                  <c:simple-property name="mapInListMember3" type="string" default="mapInListMember3ValueDefault"/>
               </c:map-property>
            </c:list-property>
         </c:group>

         <!-- This group contains a sampling of all of the various types of properties  - they are optional -->
         <c:group name="optionalGroup" displayName="Properties that are optional">
            <c:simple-property required="false" name="Ostring"     type="string"     default="stringValueDefault"/>
            <c:simple-property required="false" name="OlongString" type="longString" default="longStringValueDefault"/>
            <c:simple-property required="false" name="Opassword"   type="password"   default="passwordValueDefault"/>
            <c:simple-property required="false" name="Oboolean"    type="boolean"    default="true"/>
            <c:simple-property required="false" name="Ointeger"    type="integer"    default="42"/>
            <c:simple-property required="false" name="Olong"       type="long"       default="1000000000000"/>
            <c:simple-property required="false" name="Ofloat"      type="float"      default="3.14"/>
            <c:simple-property required="false" name="Odouble"     type="double"     default="0.123456789"/>
            <c:simple-property required="false" name="Ofile"       type="file"       default="/a/file"/>
            <c:simple-property required="false" name="Odirectory"  type="directory"  default="/directory"/>

            <c:simple-property required="false" name="Oenum1" default="blue" description="Few options, renders as radio buttons">
               <c:property-options>
                  <c:option value="red"   name="Red"/>
                  <c:option value="green" name="Green"/>
                  <c:option value="blue"  name="Blue"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property required="false" name="Oenum2" default="banana" description="Lots of options, renders as drop down menu">
               <c:property-options>
                  <c:option value="apple"      name="Apple"/>
                  <c:option value="banana"     name="Banana"/>
                  <c:option value="peach"      name="Peach"/>
                  <c:option value="strawberry" name="Strawberry"/>
                  <c:option value="watermelon" name="Watermelon"/>
                  <c:option value="lemon"      name="Lemon"/>
                  <c:option value="lime"       name="Lime"/>
                  <c:option value="orange"     name="Orange"/>
                  <c:option value="pear"       name="Pear"/>
                  <c:option value="kiwi"       name="Kiwi"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property required="true" name="Orequired" type="string" default="requiredValueDefault"/>

            <c:map-property required="false" name="OopenMap"/>

            <c:map-property required="false" name="Omap">
               <c:simple-property required="false" name="mapMember1" type="string"  default="mapMember1ValueDefault"/>
               <c:simple-property required="false" name="mapMember2" type="integer" default="42"/>
               <c:simple-property required="false" name="mapMember3" type="boolean" default="true"/>
            </c:map-property>

            <c:list-property required="false" name="OlistOfMaps">
               <c:map-property required="false" name="listMember">
                  <c:simple-property required="false" name="mapInListMember1" type="string" default="mapInListMember1ValueDefault"/>
                  <c:simple-property required="false" name="mapInListMember2" type="string" default="mapInListMember2ValueDefault"/>
                  <c:simple-property required="false" name="mapInListMember3" type="string" default="mapInListMember3ValueDefault"/>
               </c:map-property>
            </c:list-property>
         </c:group>

         <!-- Throw in a template for good measure. -->
         <c:template name="PCtemplate1" description="Plugin Configuration Template 1">
            <c:simple-property name="string" default="PCtemplate1Default"/>
         </c:template>
      </plugin-configuration>

      <resource-configuration>
         <!-- This group contains a sampling of all of the various types of properties - they are required -->
         <c:group name="requiredGroup" displayName="Properties that are required">
            <c:simple-property name="Rstring"     type="string"     default="stringValueDefault"/>
            <c:simple-property name="RlongString" type="longString" default="longStringValueDefault"/>
            <c:simple-property name="Rpassword"   type="password"   default="passwordValueDefault"/>
            <c:simple-property name="Rboolean"    type="boolean"    default="true"/>
            <c:simple-property name="Rinteger"    type="integer"    default="42"/>
            <c:simple-property name="Rlong"       type="long"       default="1000000000000"/>
            <c:simple-property name="Rfloat"      type="float"      default="3.14"/>
            <c:simple-property name="Rdouble"     type="double"     default="0.123456789"/>
            <c:simple-property name="Rfile"       type="file"       default="/a/file"/>
            <c:simple-property name="Rdirectory"  type="directory"  default="/directory"/>

            <c:simple-property name="Renum1" default="blue" description="Few options, renders as radio buttons">
               <c:property-options>
                  <c:option value="red"   name="Red"/>
                  <c:option value="green" name="Green"/>
                  <c:option value="blue"  name="Blue"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property name="Renum2" default="banana" description="Lots of options, renders as drop down menu">
               <c:property-options>
                  <c:option value="apple"      name="Apple"/>
                  <c:option value="banana"     name="Banana"/>
                  <c:option value="peach"      name="Peach"/>
                  <c:option value="strawberry" name="Strawberry"/>
                  <c:option value="watermelon" name="Watermelon"/>
                  <c:option value="lemon"      name="Lemon"/>
                  <c:option value="lime"       name="Lime"/>
                  <c:option value="orange"     name="Orange"/>
                  <c:option value="pear"       name="Pear"/>
                  <c:option value="kiwi"       name="Kiwi"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property required="false" name="Roptional" type="string" default="optionalValueDefault"/>

            <c:map-property name="RopenMap"/>

            <c:map-property name="Rmap">
               <c:simple-property name="mapMember1" type="string"  default="mapMember1ValueDefault"/>
               <c:simple-property name="mapMember2" type="integer" default="42"/>
               <c:simple-property name="mapMember3" type="boolean" default="true"/>
            </c:map-property>

            <c:list-property name="RlistOfMaps">
               <c:map-property name="listMember">
                  <c:simple-property name="mapInListMember1" type="string" default="mapInListMember1ValueDefault"/>
                  <c:simple-property name="mapInListMember2" type="string" default="mapInListMember2ValueDefault"/>
                  <c:simple-property name="mapInListMember3" type="string" default="mapInListMember3ValueDefault"/>
               </c:map-property>
            </c:list-property>
         </c:group>

         <!-- This group contains a sampling of all of the various types of properties  - they are optional -->
         <c:group name="optionalGroup" displayName="Properties that are optional">
            <c:simple-property required="false" name="Ostring"     type="string"     default="stringValueDefault"/>
            <c:simple-property required="false" name="OlongString" type="longString" default="longStringValueDefault"/>
            <c:simple-property required="false" name="Opassword"   type="password"   default="passwordValueDefault"/>
            <c:simple-property required="false" name="Oboolean"    type="boolean"    default="true"/>
            <c:simple-property required="false" name="Ointeger"    type="integer"    default="42"/>
            <c:simple-property required="false" name="Olong"       type="long"       default="1000000000000"/>
            <c:simple-property required="false" name="Ofloat"      type="float"      default="3.14"/>
            <c:simple-property required="false" name="Odouble"     type="double"     default="0.123456789"/>
            <c:simple-property required="false" name="Ofile"       type="file"       default="/a/file"/>
            <c:simple-property required="false" name="Odirectory"  type="directory"  default="/directory"/>

            <c:simple-property required="false" name="Oenum1" default="blue" description="Few options, renders as radio buttons">
               <c:property-options>
                  <c:option value="red"   name="Red"/>
                  <c:option value="green" name="Green"/>
                  <c:option value="blue"  name="Blue"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property required="false" name="Oenum2" default="banana" description="Lots of options, renders as drop down menu">
               <c:property-options>
                  <c:option value="apple"      name="Apple"/>
                  <c:option value="banana"     name="Banana"/>
                  <c:option value="peach"      name="Peach"/>
                  <c:option value="strawberry" name="Strawberry"/>
                  <c:option value="watermelon" name="Watermelon"/>
                  <c:option value="lemon"      name="Lemon"/>
                  <c:option value="lime"       name="Lime"/>
                  <c:option value="orange"     name="Orange"/>
                  <c:option value="pear"       name="Pear"/>
                  <c:option value="kiwi"       name="Kiwi"/>
               </c:property-options>
            </c:simple-property>

            <c:simple-property required="true" name="Orequired" type="string" default="requiredValueDefault"/>

            <c:map-property required="false" name="OopenMap"/>

            <c:map-property required="false" name="Omap">
               <c:simple-property required="false" name="mapMember1" type="string"  default="mapMember1ValueDefault"/>
               <c:simple-property required="false" name="mapMember2" type="integer" default="42"/>
               <c:simple-property required="false" name="mapMember3" type="boolean" default="true"/>
            </c:map-property>

            <c:list-property required="false" name="OlistOfMaps">
               <c:map-property required="false" name="listMember">
                  <c:simple-property required="false" name="mapInListMember1" type="string" default="mapInListMember1ValueDefault"/>
                  <c:simple-property required="false" name="mapInListMember2" type="string" default="mapInListMember2ValueDefault"/>
                  <c:simple-property required="false" name="mapInListMember3" type="string" default="mapInListMember3ValueDefault"/>
               </c:map-property>
            </c:list-property>
         </c:group>

         <!-- Throw in a template for good measure. -->
         <c:template name="RCtemplate1" description="Resource Configuration Template 1">
            <c:simple-property name="string" default="RCtemplate1Default"/>
         </c:template>
      </resource-configuration>

   </server>

   <help>
      <![CDATA[
         <p>To enable the perftest plugin, start the agent with <tt>-Drhq.perftest.scenario=scenario-name</tt> where the
         scenario name matches one of the included scenario files for an inventory structure you would like to
         simulate.</p>

         <p>The following setup, for example, will use some typical server and service configurations resulting in 10
         servers each with 25 child services each having 2 child services of their own.<p>

         <code><pre>
            -Drhq.perftest.scenario=configurable-average
            -Drhq.perftest.server-a-count=10
            -Drhq.perftest.service-a-count=25
            -Drhq.perftest.service-ab-count=2
         </pre></code>
      ]]>
   </help>

</plugin>
