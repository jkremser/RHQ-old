<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <artifactId>rhq-plugins-parent</artifactId>
    <groupId>org.rhq</groupId>
    <version>1.4.0-SNAPSHOT</version>
  </parent>

  <groupId>org.rhq</groupId>
  <artifactId>rhq-antlr-config-plugin</artifactId>
  <packaging>jar</packaging>
  
  <name>Antlr Configuration file parsing plugin</name>
  <description>A base plugin to be used by others to parse configuration files using grammars.</description>

   <scm>
      <connection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/plugins/antlr-config</connection>
      <developerConnection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/plugins/antlr-config</developerConnection>
   </scm>

   <properties>
      <scm.module.path>modules/plugins/antlr-config/</scm.module.path>
   </properties>

  <dependencies>
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>3.2</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

   <profiles>
      <profile>
         <id>integration-tests</id>
         <activation>
            <property>
               <name>maven.test.skip</name>
               <value>!true</value>
            </property>
         </activation>

         <build>
            <plugins>
               <plugin>
                   <groupId>org.antlr</groupId>
                   <artifactId>antlr3-maven-plugin</artifactId>
                   <version>3.2</version>
                   <executions>
                     <execution>
                       <id>antlr3-sources-compile</id>
                       <phase>process-resources</phase>
                       <goals>
                         <goal>antlr</goal>
                       </goals>
                     </execution>
                     <execution>
                       <id>antlr3-test-sources-compile</id>
                       <phase>generate-test-sources</phase>
                       <goals>
                         <goal>antlr</goal>
                       </goals>
                       <configuration>
                         <outputDirectory>${project.build.directory}/generated-test-sources/antlr3</outputDirectory>
                         <sourceDirectory>${basedir}/src/test/antlr3</sourceDirectory> 
                       </configuration>
                     </execution>
                   </executions>
               </plugin>
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>build-helper-maven-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>add-test-source</id>
                      <phase>generate-test-sources</phase>
                      <goals>
                        <goal>add-test-source</goal>
                      </goals>
                      <configuration>
                        <sources>
                          <source>${project.build.directory}/generated-test-sources/antlr3</source>
                        </sources>
                      </configuration>
                    </execution>
                  </executions>
               </plugin>
               <plugin>
                 <artifactId>maven-dependency-plugin</artifactId>
                 <version>2.0</version>
                 <executions>
                    <execution>
                       <id>copy-dependencies</id>
                       <phase>process-resources</phase>
                       <goals>
                         <goal>copy-dependencies</goal>
                       </goals>
                       <configuration>
                          <includeScope>runtime</includeScope>
                          <excludeTransitive>false</excludeTransitive>
                          <outputDirectory>${project.build.outputDirectory}/lib</outputDirectory>
                       </configuration>
                    </execution>
                  </executions>
               </plugin>       
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>
                     <execution>
                        <phase>pre-integration-test</phase>
                        <configuration>
                           <tasks>
                              <echo>Setting up plugin dependencies for ${project.artifactId}-${project.version}.jar...
                              </echo>
                              <property name="settings.localRepository" location="${user.home}/.m2/repository" />
                              <mkdir dir="target/itest" />
                              <mkdir dir="target/itest/plugins" />
                              <mkdir dir="target/itest/lib" />
                              <copy toDir="target/itest/plugins" flatten="true">
                                 <fileset dir="${settings.localRepository}/">
                                    <include name="org/rhq/rhq-platform-plugin/${project.version}/rhq-platform-plugin-${project.version}.jar" />
                                 </fileset>
                                 <fileset dir="${project.build.directory}">
                                    <include name="${project.artifactId}-${project.version}.jar" />
                                 </fileset>
                              </copy>
                              <unzip dest="target/itest/lib">
                                 <fileset dir="${settings.localRepository}/org/hyperic/sigar-dist/${sigar.version}" includes="*.zip" />
                                 <patternset>
                                    <include name="**/lib/sigar.jar" />
                                    <include name="**/lib/bcel*.jar" />
                                    <include name="**/lib/*.so" />
                                    <include name="**/lib/*.sl" />
                                    <include name="**/lib/*.dll" />
                                    <include name="**/lib/*.dylib" />
                                 </patternset>
                              </unzip>
                              <move todir="target/itest/lib" flatten="true">
                                 <fileset dir="target/itest/lib">
                                    <include name="**/lib/*" />
                                 </fileset>
                              </move>
                              <delete dir="target/itest/lib/hyperic-sigar-${sigar.version}" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>
                  </executions>
               </plugin>

               <!-- Integration testing voodoo to load and test this plugin with its plugin dependencies -->
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
                  <executions>
                     <execution>
                        <id>surefire-it</id>
                        <phase>integration-test</phase>
                        <goals>
                           <goal>test</goal>
                        </goals>
                        <configuration>
                           <skip>${maven.test.skip}</skip>
                           <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
                           <useSystemClassLoader>false</useSystemClassLoader>
                           <argLine>-Dorg.hyperic.sigar.path=${basedir}/target/itest/lib</argLine>
                           <!--<argLine>-Dorg.hyperic.sigar.path=${basedir}/target/itest/lib -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y</argLine>-->
                           <systemProperties>
                              <property>
                                 <name>project.artifactId</name>
                                 <value>${project.artifactId}</value>
                              </property>
                              <property>
                                 <name>project.version</name>
                                 <value>${project.version}</value>
                              </property>
                           </systemProperties>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>

            </plugins>
         </build>
      </profile>

      <profile>
         <id>dev</id>

         <properties>
            <rhq.rootDir>../../..</rhq.rootDir>
            <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
            <rhq.deploymentDir>
               ${rhq.containerDir}/jbossas/server/default/deploy/${rhq.earName}/rhq-downloads/rhq-plugins
            </rhq.deploymentDir>
         </properties>

         <build>
            <plugins>
               <plugin>
                   <groupId>org.antlr</groupId>
                   <artifactId>antlr3-maven-plugin</artifactId>
                   <version>3.2</version>
                   <executions>
                     <execution>
                       <goals>
                         <goal>antlr</goal>
                       </goals>
                     </execution>
                   </executions>
               </plugin>
               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <version>1.1</version>
                  <executions>

                     <execution>
                        <id>deploy</id>
                        <phase>compile</phase>
                        <configuration>
                           <tasks>
                              <mkdir dir="${rhq.deploymentDir}" />
                              <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                              <echo>*** Updating ${deployment.file}...</echo>
                              <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>deploy-jar-meta-inf</id>
                        <phase>package</phase>
                        <configuration>
                          <tasks>                             
                             <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />                             
                             <echo>*** Updating META-INF dir in ${deployment.file}...</echo>
                             <unjar src="${project.build.directory}/${project.build.finalName}.jar" dest="${project.build.outputDirectory}">
                               <patternset><include name="META-INF/**" /></patternset>
                             </unjar>
                             <jar destfile="${deployment.file}" manifest="${project.build.outputDirectory}/META-INF/MANIFEST.MF" update="true">                                
                             </jar>
                          </tasks>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>
                     
                     <execution>
                        <id>undeploy</id>
                        <phase>clean</phase>
                        <configuration>
                           <tasks>
                              <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                              <echo>*** Deleting ${deployment.file}...</echo>
                              <delete file="${deployment.file}" />
                           </tasks>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>

                  </executions>
               </plugin>

            </plugins>
         </build>
      </profile>

   </profiles>
</project>