<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

   <modelVersion>4.0.0</modelVersion>

   <parent>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-parent</artifactId>
      <version>4.7.0-SNAPSHOT</version>
   </parent>

   <artifactId>rhq-core-domain</artifactId>
   <packaging>ejb</packaging>

   <name>RHQ Domain Model</name>
   <description>RHQ domain model classes (i.e. POJOs used by both server and agent)</description>

   <properties>
     <jboss.zip>${settings.localRepository}/org/jboss/as/jboss-as-dist/${jboss.version}/jboss-as-dist-${jboss.version}.zip</jboss.zip>
     <jboss.unzip.location>${basedir}/target/jboss-as-${jboss.version}</jboss.unzip.location>
     <rhq.internal>false</rhq.internal>
     <!-- These properties guide which datasources are used for integration tests. Only one should be true.
          The default is Postgres, specify -Pitest.oracle to use Oracle -->
     <skip.postgres>false</skip.postgres>
     <skip.oracle>true</skip.oracle>     
   </properties>


   <dependencies>

      <!-- the notorious util jar -->
      <dependency>
         <groupId>${rhq.groupId}</groupId>
         <artifactId>rhq-core-util</artifactId>
         <version>${project.version}</version>
      </dependency>

      <!-- provided by AS7 -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-entitymanager</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- required by PersistenceUtil (provided by AS7) -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-core</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- provided by AS7 -->
      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>    
      </dependency>

      <!-- provided by AS7 -->
      <dependency>     
        <groupId>org.jboss.spec.javax.ejb</groupId>
        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
        <scope>provided</scope>    
      </dependency>
      
      <!-- needed if you want to use the logging JDBC wrapper
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-core-dbutils</artifactId>
         <version>${project.version}</version>
      </dependency>
      -->

      <!--================ Test Deps ================-->
      <dependency>
          <groupId>org.jboss.as</groupId>
          <artifactId>jboss-as-dist</artifactId>
          <type>zip</type>
          <scope>test</scope>
      </dependency>

      <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>test-utils</artifactId>
          <version>${project.version}</version>
          <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>org.javassist</groupId>
         <artifactId>javassist</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>postgresql</groupId>
         <artifactId>postgresql</artifactId>
         <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>net.sourceforge.jtds</groupId>
         <artifactId>jtds</artifactId>
         <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
         <scope>test</scope>
      </dependency>

  <dependency>
    <groupId>org.jboss.spec</groupId>
    <artifactId>jboss-javaee-6.0</artifactId>
    <version>${jboss.javaee6.spec.version}</version>
    <scope>provided</scope>
    <type>pom</type>
  </dependency>

  <dependency>
    <groupId>org.jboss.arquillian.testng</groupId>
    <artifactId>arquillian-testng-container</artifactId>    
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.shrinkwrap.resolver</groupId>
    <artifactId>shrinkwrap-resolver-depchain</artifactId>
    <type>pom</type>
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.arquillian.protocol</groupId>
    <artifactId>arquillian-protocol-servlet</artifactId>
    <scope>test</scope>
  </dependency>              

      <!-- NOTE: The remaining test deps correspond to the classes contained in hibernate-all.jar and thirdparty-all.jar. -->

      <dependency>
         <groupId>antlr</groupId>
         <artifactId>antlr</artifactId>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>cglib</groupId>
         <artifactId>cglib-nodep</artifactId>
         <version>2.1_3</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>1.4</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>commons-collections</groupId>
         <artifactId>commons-collections</artifactId>
         <version>3.2</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>commons-codec</groupId>
         <artifactId>commons-codec</artifactId>
         <version>${commons-codec.version}</version>
         <scope>test</scope>
      </dependency>

     <dependency>
         <groupId>dom4j</groupId>
         <artifactId>dom4j</artifactId>
         <version>1.6.1-jboss</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>oswego-concurrent</groupId>
         <artifactId>concurrent</artifactId>
         <version>1.3.4</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>trove</groupId>
         <artifactId>trove</artifactId>
         <version>1.0.2</version>
         <scope>test</scope>
      </dependency>

      <dependency>
         <groupId>xerces</groupId>
         <artifactId>xercesImpl</artifactId>
         <version>${xercesImpl.version}</version>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>

      <finalName>rhq-core-domain-ejb3</finalName>

       <resources>
           <resource>
               <directory>src/main/java</directory>
           </resource>
           <resource>
               <directory>src/main/resources</directory>
           </resource>
       </resources>


       <testResources>
         <testResource>
            <directory>src/test/resources</directory>
            <filtering>true</filtering>
         </testResource>
      </testResources>

      <plugins>

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <id>prepare AS container</id>
              <phase>process-test-resources</phase>
              <configuration>
                <target>
                    <echo>Unzipping JBossAS ${jboss.version} found at ${jboss.zip}</echo>
                    <unzip src="${jboss.zip}" dest="${jboss.unzip.location}/.." />
                    <echo>JBossAS ${jboss.version} should now be at: ${jboss.unzip.location}</echo>
                    <property name="jboss.conf" location="${jboss.unzip.location}/standalone/configuration/standalone.xml" />
                    <echo>Will now add test configuration to JBossAS config file: ${jboss.conf}</echo>
                    <replace file="${jboss.conf}">
                      <replacefilter>
                        <replacetoken>&lt;/extensions></replacetoken>
                        <replacevalue><![CDATA[
    </extensions>
                    
    <!-- FOR RHQ TESTING -->
    <system-properties>
        <property name="jboss.socket.binding.port-offset" value="${jboss.socket.binding.port-offset}" />
    </system-properties>]]></replacevalue>
                      </replacefilter>
                      <replacefilter>
                        <replacetoken>&lt;/drivers></replacetoken>
                        <replacevalue><![CDATA[
                    <!-- FOR RHQ TESTING -->
                    <driver name="postgres" module="org.rhq.postgres">
                        <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>
                    </driver>
                    <driver name="oracle" module="org.rhq.oracle">
                        <xa-datasource-class>oracle.jdbc.xa.client.OracleXADataSource</xa-datasource-class>
                    </driver>
                </drivers>]]></replacevalue>
                      </replacefilter>
                      <replacefilter>
                        <replacetoken>&lt;/security-domains></replacetoken>
                        <replacevalue><![CDATA[
                <!-- FOR RHQ TESTING -->
                <security-domain name="RHQDSSecurityDomain" cache-type="default">
                    <authentication>
                        <login-module code="ConfiguredIdentity" flag="required">
                            <module-option name="userName" value="${rhq.test.ds.user-name}"/>
                            <module-option name="principal" value="${rhq.test.ds.user-name}"/>
                            <module-option name="password" value="${rhq.test.ds.password}"/>
                        </login-module>
                    </authentication>
                </security-domain>
            </security-domains>]]></replacevalue>
                      </replacefilter>
                    </replace>

                    <property name="jboss.modules.dir" location="${jboss.unzip.location}/modules" />
                    <echo>Adding JDBC modules to ${jboss.modules.dir} ...</echo>
                    <copy file="${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar"
                          toDir="${jboss.modules.dir}/org/rhq/oracle/main" failonerror="false" verbose="true" />
                    <echo file="${jboss.modules.dir}/org/rhq/oracle/main/module.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:jboss:module:1.1" name="org.rhq.oracle">
    <resources>
        <resource-root path="ojdbc6-${ojdbc6.version}.jar"/>
    </resources>
    <dependencies>
        <module name="javax.api"/>
        <module name="javax.transaction.api"/>
    </dependencies>
</module>
]]></echo>
                    <copy file="${settings.localRepository}/postgresql/postgresql/${postgresql.version}/postgresql-${postgresql.version}.jar"
                          toDir="${jboss.modules.dir}/org/rhq/postgres/main" verbose="true" />
                    <echo file="${jboss.modules.dir}/org/rhq/postgres/main/module.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:jboss:module:1.1" name="org.rhq.postgres">
    <resources>
        <resource-root path="postgresql-${postgresql.version}.jar"/>
    </resources>
    <dependencies>
        <module name="javax.api"/>
        <module name="javax.transaction.api"/>
    </dependencies>
</module>
]]></echo>

                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            
            <execution>
              <id>prepare Postgres datasource</id>
              <phase>process-test-resources</phase>
              <configuration>
                <skip>${skip.postgres}</skip>
                <target>
                  <property name="jboss.conf" location="${jboss.unzip.location}/standalone/configuration/standalone.xml" />
                  <echo>Will now add test configuration datasource to JBossAS config file: ${jboss.conf}</echo>
                  <replace file="${jboss.conf}">
  
                    <replacefilter>
                      <replacetoken>&lt;/datasource></replacetoken>
                      <replacevalue><![CDATA[
                  </datasource>                    
                  <!-- FOR RHQ TESTING -->
                  <datasource jta="false" jndi-name="java:jboss/datasources/NoTxRHQDS" pool-name="NoTxRHQDS" enabled="true" use-java-context="true">
                      <connection-url>${rhq.test.ds.connection-url}</connection-url>
                      <connection-property name="char.encoding">UTF-8</connection-property>
                      <driver>postgres</driver>
                      <transaction-isolation>TRANSACTION_READ_COMMITTED</transaction-isolation>
                      <pool>
                          <min-pool-size>2</min-pool-size>
                          <max-pool-size>5</max-pool-size>
                      </pool>
                      <security>
                          <security-domain>RHQDSSecurityDomain</security-domain>
                      </security>
                      <validation>
                          <valid-connection-checker class-name="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker"/>
                          <exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter"/>
                      </validation>
                      <timeout>
                          <blocking-timeout-millis>30000</blocking-timeout-millis>
                          <idle-timeout-minutes>15</idle-timeout-minutes>
                      </timeout>
                      <statement>
                          <prepared-statement-cache-size>75</prepared-statement-cache-size>
                      </statement>
                  </datasource>
                  <xa-datasource jta="true" jndi-name="java:jboss/datasources/RHQDS" pool-name="RHQDS" enabled="true" use-java-context="true">
                      <xa-datasource-property name="DatabaseName">${rhq.test.ds.db-name}</xa-datasource-property>
                      <xa-datasource-property name="PortNumber">${rhq.test.ds.port}</xa-datasource-property>
                      <xa-datasource-property name="ServerName">${rhq.test.ds.server-name}</xa-datasource-property>
                      <driver>postgres</driver>
                      <transaction-isolation>TRANSACTION_READ_COMMITTED</transaction-isolation>
                      <xa-pool>
                          <min-pool-size>5</min-pool-size>
                          <max-pool-size>50</max-pool-size>
                      </xa-pool>
                      <security>
                          <security-domain>RHQDSSecurityDomain</security-domain>
                      </security>
                      <validation>
                          <valid-connection-checker class-name="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker"/>
                          <exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter"/>
                      </validation>
                      <timeout>
                          <blocking-timeout-millis>30000</blocking-timeout-millis>
                          <idle-timeout-minutes>15</idle-timeout-minutes>
                      </timeout>
                      <statement>
                          <prepared-statement-cache-size>75</prepared-statement-cache-size>
                      </statement> 
                  </xa-datasource>]]></replacevalue>
                    </replacefilter>
  
                  </replace>
  
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            
            <execution>
              <id>prepare Oracle datasource</id>
              <phase>process-test-resources</phase>
              <configuration>
                <skip>${skip.oracle}</skip>
                <target>
                  <property name="jboss.conf" location="${jboss.unzip.location}/standalone/configuration/standalone.xml" />
                  <echo>Will now add test configuration datasource to JBossAS config file: ${jboss.conf}</echo>
                  <replace file="${jboss.conf}">
  
                    <replacefilter>
                      <replacetoken>&lt;/datasource></replacetoken>
                      <replacevalue><![CDATA[
                  </datasource>                    
                  <!-- FOR RHQ TESTING -->
                  <datasource jta="false" jndi-name="java:jboss/datasources/NoTxRHQDS" pool-name="NoTxRHQDS" enabled="true" use-java-context="true">
                      <connection-url>${rhq.test.ds.connection-url}</connection-url>
                      <connection-property name="char.encoding">UTF-8</connection-property>
                      <driver>oracle</driver>
                      <transaction-isolation>TRANSACTION_READ_COMMITTED</transaction-isolation>
                      <pool>
                          <min-pool-size>2</min-pool-size>
                          <max-pool-size>5</max-pool-size>
                      </pool>
                      <security>
                          <security-domain>RHQDSSecurityDomain</security-domain>
                      </security>
                      <validation>
                          <valid-connection-checker class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleValidConnectionChecker" />
                          <stale-connection-checker class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleStaleConnectionChecker" />
                          <exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleExceptionSorter" />
                      </validation>
                      <timeout>
                          <blocking-timeout-millis>30000</blocking-timeout-millis>
                          <idle-timeout-minutes>15</idle-timeout-minutes>
                      </timeout>
                      <statement>
                          <prepared-statement-cache-size>75</prepared-statement-cache-size>
                      </statement>
                  </datasource>
                  <xa-datasource jta="true" jndi-name="java:jboss/datasources/RHQDS" pool-name="RHQDS" enabled="true" use-java-context="true">
                      <xa-datasource-property name="URL">${rhq.test.ds.connection-url}</xa-datasource-property>
                      <driver>oracle</driver>
                      <transaction-isolation>TRANSACTION_READ_COMMITTED</transaction-isolation>
                      <xa-pool>
                          <min-pool-size>5</min-pool-size>
                          <max-pool-size>50</max-pool-size>
                          <!--
                          Oracle does not like XA connections getting used both inside and outside a JTA transaction.
                          To workaround the problem you can create separate sub-pools for the different contexts using <no-tx-separate-pools/>
                          -->                        
                          <no-tx-separate-pools>true</no-tx-separate-pools>                         
                      </xa-pool>
                      <security>
                          <security-domain>RHQDSSecurityDomain</security-domain>
                      </security>
                      <validation>
                          <valid-connection-checker class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleValidConnectionChecker" />
                          <stale-connection-checker class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleStaleConnectionChecker" />
                          <exception-sorter class-name="org.jboss.jca.adapters.jdbc.extensions.oracle.OracleExceptionSorter" />
                      </validation>
                      <timeout>
                          <blocking-timeout-millis>30000</blocking-timeout-millis>
                          <idle-timeout-minutes>15</idle-timeout-minutes>
                      </timeout>
                      <statement>
                          <prepared-statement-cache-size>75</prepared-statement-cache-size>
                      </statement>
                  </xa-datasource>]]></replacevalue>
                    </replacefilter>
  
                  </replace>
  
                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>
            
          </executions>
        </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.1.2</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.rhq.test.testng.StdoutReporter</value>
                </property>
              </properties>            
              <systemProperties>
                <property>
                  <name>ejbjarDirectory</name>
                  <value>target/classes</value>
                </property>
                <property>
                  <name>hibernate.dialect</name>
                  <value>${rhq.test.ds.hibernate-dialect}</value>
                </property>
              </systemProperties>
              <excludes>                
                <exclude>**/ResourceTypeTest.java</exclude> <!-- TODO: this should be fixed up and reinstated -->
              </excludes>
              <!-- The below is required for tests to run against Oracle. -->
              <additionalClasspathElements>
                 <additionalClasspathElement>${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <executions>
               <execution>
                  <phase>package</phase>
                  <goals>
                     <goal>test-jar</goal>
                  </goals>
                  <configuration>
                     <includes>
                        <include>org/rhq/core/domain/shared/**</include>
                     </includes>
                  </configuration>
               </execution>
            </executions>
         </plugin>
      </plugins>
   </build>


   <profiles>
       <profile>
         <!--
           This profile has been created to avoid unnecessary resolution of test dependencies during a build that
           does not run, compile or need tests.
           More test dependencies are to be moved here if the set of sub-dependencies is complex, references project
           test jars, or conflicts with changing the container version.
         -->
         <id>test.dependencies</id>
         <activation>
           <property>
             <name>maven.test.skip</name>
             <value>!true</value>
           </property>
         </activation>

         <dependencies>
           <dependency>
             <groupId>org.jboss.as</groupId>
             <artifactId>jboss-as-arquillian-container-managed</artifactId>
             <scope>test</scope>
           </dependency>
         </dependencies>
       </profile>

       <!--  If testing against oracle, override the default property settings  -->
       <profile>
         <id>itest.oracle</id>
         <properties>
           <skip.postgres>true</skip.postgres>
           <skip.oracle>false</skip.oracle>
         </properties>
       </profile>

       <profile>
         <id>dev</id>

         <properties>
            <rhq.rootDir>../../..</rhq.rootDir>
            <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
            <rhq.deploymentName>${project.build.finalName}.jar</rhq.deploymentName>
            <rhq.deploymentDir>${rhq.containerDir}/${rhq.earDeployDir}/${rhq.deploymentName}</rhq.deploymentDir>
         </properties>

         <build>
            <plugins>

               <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>

                     <execution>
                        <id>deploy</id>
                        <phase>process-classes</phase>
                        <configuration>
                           <target>
                           <!-- don't instrument...
                           I'm leaving this here as an example of how to apply Hibernate Instrumentation to a class.
                           Instrumentation is useful for various property-level things such as field-level lazy load.
                           Using it turned out not t be a current option since the instrumented class carries with
                           it hibernate imports that we can't put in the domain jar since it's used on the Agent and
                           in Remote Java Clients. But this worked, so here ya go...
                           (update: this may no longer work given the upgrade to H4, also, deps would have changed)                          
                              <taskdef name="instrument" classname="org.hibernate.tool.instrument.javassist.InstrumentTask">
                                 <classpath>
                                    <path refid="maven.runtime.classpath" />
                                    <path refid="maven.plugin.classpath" />
                                 </classpath>
                                 </taskdef>
                              <instrument verbose="true">
                                 <fileset dir="${project.build.outputDirectory}">
                                    <include name="**/domain/**/PackageBits.class" />
                                 </fileset>
                              </instrument>
                           -->
                              <property name="deployment.dir" location="${rhq.deploymentDir}" />
                              <echo>*** Copying updated files from target${file.separator}classes${file.separator} to ${deployment.dir}${file.separator}...</echo>
                              <copy todir="${deployment.dir}" verbose="${rhq.verbose}">
                                 <fileset dir="target/classes" />
                              </copy>
                           </target>
                        </configuration>
                        <goals>
                           <goal>run</goal>
                        </goals>
                     </execution>

                     <execution>
                        <id>undeploy</id>
                        <phase>clean</phase>
                        <configuration>
                          <target>
                            <property name="deployment.dir" location="${rhq.deploymentDir}" />
                            <echo>*** Deleting ${deployment.dir}${file.separator}...</echo>
                            <delete dir="${deployment.dir}" />
                          </target>
                        </configuration>
                        <goals>
                          <goal>run</goal>
                        </goals>
                     </execution>

                   </executions>
               </plugin>

           </plugins>
         </build>
      </profile>

      <profile>
         <id>javadoc</id>
         <activation>
            <property>
               <name>javadoc.outputDirectory</name>
            </property>
         </activation>

         <build>
            <plugins>

               <plugin>
                  <artifactId>maven-javadoc-plugin</artifactId>

                  <executions>
                     <execution>
                        <id>domain-api</id>
                        <phase>compile</phase>
                        <goals>
                           <goal>javadoc</goal>
                        </goals>
                        <configuration>
                           <doctitle>RHQ ${project.version} Domain API</doctitle>
                           <windowtitle>RHQ ${project.version} Domain API</windowtitle>
                           <reportOutputDirectory>${javadoc.outputDirectory}</reportOutputDirectory>
                           <destDir>domain</destDir>
                           <author>false</author>
                           <breakiterator>true</breakiterator>
                           <links>
                              <link>http://java.sun.com/javaee/5/docs/api/</link>
                           </links>
                        </configuration>
                     </execution>
                  </executions>
               </plugin>
            </plugins>
         </build>
      </profile>
        
      <profile>
        <id>itest.debug</id>
        <activation>
          <property>
            <name>itest.debug</name>
          </property>
        </activation>
        <properties>
          <jboss.vm.args.debug>-Xrunjdwp:transport=dt_socket,address=8798,server=y,suspend=y</jboss.vm.args.debug>
        </properties>
      </profile>

    <!-- These two properties allow Arquillian to inspect AS7 through the mgmt port, to determine the ports it needs to interact 
      with when spawning the AS7 instance. This allows the AS7 to run on non-default ports. If these properties are not set (for 
      example, in settings.xml) then we must set the defaults here. The offset is then provided via the standalone.xml properties -->
    <profile>
      <id>arquillian-ports</id>
      <activation>
        <property>
          <name>!jboss.socket.binding.port-offset</name>
        </property>
      </activation>
      <properties>
        <jboss.socket.binding.port-offset>0</jboss.socket.binding.port-offset>
        <jboss.management.native.port>9999</jboss.management.native.port>
      </properties>
    </profile>
      
   </profiles>


   <repositories>

        <repository>
            <id>codehaus</id>
            <name>Codehaus Releases</name>
            <url>http://repository.codehaus.org/</url>
            <snapshots>
               <enabled>false</enabled>
            </snapshots>
        </repository>

   </repositories>

</project>
