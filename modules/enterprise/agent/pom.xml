<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-parent</artifactId>
    <version>3.0.0-SNAPSHOT</version>
  </parent>

  <groupId>org.rhq</groupId>
  <artifactId>rhq-enterprise-agent</artifactId>
  <packaging>jar</packaging>

  <name>RHQ Enterprise Agent</name>
  <description>RHQ Agent</description>

  <scm>
    <connection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/enterprise/agent/</connection>
    <developerConnection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/enterprise/agent/</developerConnection>
  </scm>

  <properties>
    <scm.module.path>modules/enterprise/agent/</scm.module.path>
  </properties>

  <dependencies>

    <!-- Internal Deps -->

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-domain</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-enterprise-comm</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-plugin-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-plugin-container</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-client-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    
   <dependency>
       <groupId>jline</groupId>
       <artifactId>jline</artifactId>
       <version>${jline.version}</version>
    </dependency>

    <dependency>
      <!-- The only reason why this is here is so we can pull this down from the repo.
           Its scope is provided so we don't actually put it anywhere. 
           Our assembly process will place this library in the connector directory.
           I'm not convinced this is actually needed, but it isn't hurting anything. -->
      <groupId>org.rhq</groupId>
      <artifactId>rhq-rtfilter</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- 3rd Party Deps -->

    <dependency>
      <groupId>gnu-getopt</groupId>
      <artifactId>getopt</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
    </dependency>

    <!-- TODO: This is a fix for the Javac bug requiring annotations to be
         available when compiling dependent classes. It is fixed in JDK 6 -->
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jboss-remoting</artifactId>
      <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
    </dependency>

    <dependency>
      <groupId>jboss.jboss-embeddable-ejb3</groupId>
      <artifactId>hibernate-all</artifactId>
      <version>1.0.0.Alpha9</version>
      <scope>provided</scope>
      <!-- needed for referenced domain entities that use Hibernate annotations -->
    </dependency>

  </dependencies>

  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <configuration>
              <tasks>

                <!-- generate the I18N resource bundles -->
                <taskdef name="i18n" classpathref="maven.runtime.classpath" classname="mazz.i18n.ant.I18NAntTask" />

                <i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" append="false" verify="true">
                   <classpath refid="maven.runtime.classpath" />
                   <classfileset dir="${project.build.outputDirectory}">
                      <include name="**/AgentI18NResourceKeys.class" />
                      <include name="**/AgentSetupInstructions.class" />
                   </classfileset>
                </i18n>

                <!-- create our rhq-agent-version.properties file that goes in our jar -->
                <tstamp>
                  <format property="build.time" pattern="dd.MMM.yyyy HH.mm.ss z" />
                </tstamp>

                <echo file="${project.build.outputDirectory}/rhq-agent-version.properties" append="false">Product-Name=${rhq.product.name}
Product-Version=${project.version}
Module-Name=${pom.name}
Module-Version=${pom.version}
Build-Date=${build.time}
Build-Jdk-Vendor=${java.vendor}
Build-Jdk=${java.version}
Build-OS-Name=${os.name}
Build-OS-Version=${os.version}
Build-Number=${buildNumber}
</echo>

              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <!-- TODO [mazz]: get rid of this once we have the agent assembly working -->
          <execution>
            <id>agent-distro-package</id>
            <phase>install</phase>
            <configuration>
              <tasks>
                <ant antfile="${basedir}/ant-run.xml" dir="${basedir}" target="package-dist" inheritAll="false" inheritRefs="false">
                   <property name="settings.localRepository" value="${settings.localRepository}" />
                   <property name="project.version" value="${project.version}" />                   
                   <property name="concurrent.version" value="${concurrent.version}" />
                   <property name="getopt.version" value="${getopt.version}" />
                   <property name="jboss.version" value="${jboss.version}" />
                   <property name="jboss-common.version" value="${jboss-common.version}" />
                   <property name="jboss-remoting.version" value="${jboss-remoting.version}" />
                   <property name="jboss-serialization.version" value="${jboss-serialization.version}" />
                   <property name="sigar.version" value="${sigar.version}" />
                   <property name="jaxb-api.version" value="${jaxb-api.version}" />
                   <property name="jaxb-impl.version" value="${jaxb-impl.version}" />
                   <property name="jline.version" value="${jline.version}" />                   
                </ant>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

          <execution>
            <id>clean-test-dirs</id>
            <phase>test</phase>
            <configuration>
              <tasks>
                <delete dir="${basedir}/data" />
                <delete dir="${basedir}/plugins" />
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifestEntries>
              <Product-Name>${rhq.product.name}</Product-Name>
              <Product-Version>${project.version}</Product-Version>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>

    </plugins>
  </build>

  <reporting>
    <plugins>

      <plugin>
        <artifactId>maven-surefire-report-plugin</artifactId>
      </plugin>

    </plugins>
  </reporting>
    
</project>