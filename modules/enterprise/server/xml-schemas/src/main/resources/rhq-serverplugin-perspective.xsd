<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>

<xs:schema
   xmlns:xs="http://www.w3.org/2001/XMLSchema"
   xmlns:config="urn:xmlns:rhq-configuration"
   xmlns:serverplugin="urn:xmlns:rhq-serverplugin"
   xmlns:perspective="urn:xmlns:rhq-serverplugin.perspective"
   targetNamespace="urn:xmlns:rhq-serverplugin.perspective"
   elementFormDefault="qualified"
   jaxb:version="2.0"
   xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
   blockDefault="">

   <xs:include
      schemaLocation=""></xs:include>
   <xs:import
      namespace="urn:xmlns:rhq-serverplugin"
      schemaLocation="rhq-serverplugin.xsd" />

   <xs:annotation>
      <xs:documentation>Schema for a Perspective Descriptor. Perspective are deployed as Server Plugins.
      </xs:documentation>
      <xs:appinfo>
         <jaxb:schemaBindings>
            <jaxb:package
               name="org.rhq.enterprise.server.xmlschema.generated.serverplugin.perspective" />
         </jaxb:schemaBindings>
      </xs:appinfo>
   </xs:annotation>

   <xs:element
      name="perspective-plugin"
      type="perspective:PerspectivePluginDescriptorType"
      substitutionGroup="serverplugin:server-plugin">
      <xs:annotation>
         <xs:documentation>Defines a Perspective plugin. A Perspective is deployed as a Server Plugin. The Server Plugin
            Container (SPC) handles simple lifecycle management for the deployed plugins (e.g. start, stop). The plugin
            is otherwise standalone and can do everything it needs to do without additional help from the SPC.
         </xs:documentation>
         <xs:appinfo>
            <jaxb:class
               name="PerspectivePluginElement" />
         </xs:appinfo>
      </xs:annotation>
   </xs:element>

   <xs:complexType
      name="PerspectivePluginDescriptorType">
      <xs:annotation>
         <xs:documentation>The perspective descriptor providing the complete perspective definition.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="serverplugin:ServerPluginDescriptorType">
            <xs:sequence>
               <xs:element
                  name="application"
                  type="perspective:ApplicationType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
               <xs:element
                  name="global-task"
                  type="perspective:GlobalTaskType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
               <xs:element
                  name="resource-task"
                  type="perspective:ResourceTaskType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
               <xs:element
                  name="menu-item"
                  type="perspective:MenuItemType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
               <xs:element
                  name="tab"
                  type="perspective:TabType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
               <xs:element
                  name="page"
                  type="perspective:PageType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:element
      name="application"
      type="perspective:ApplicationType">

   </xs:element>

   <xs:complexType
      name="ApplicationType">
      <xs:annotation>
         <xs:documentation>Declares a web application referenced by an extension in the perspective. It is assumed that
            the application will be deployed by the perspective or will be externally available. Extension urls can be
            absolute or relative. Urls starting with "http" are external and processed as is. Urls starting with "/" are
            relative to the root application (rhq-portal.war). Any other urls are assumed relative and will prepend the
            baseUrl of the declared application (required in this case). specify an application will resolve url's
            relatively to the root application (It is assumed that the root application (rhq-portal.war)
         </xs:documentation>
      </xs:annotation>
      <xs:attribute
         name="name"
         type="perspective:NameType"
         use="required">
         <xs:annotation>
            <xs:documentation>Internal name for referencing the application by the extensions. By convention, the
               context root.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute
         name="baseUrl"
         type="xs:string"
         use="required">
         <xs:annotation>
            <xs:documentation>The base url prepended to all extension urls declaring this application.
            </xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>

   <xs:complexType
      name="ExtensionType"
      abstract="true">
      <xs:annotation>
         <xs:documentation>All extensions extend this type.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element
            name="description"
            type="perspective:DescriptionType"
            minOccurs="0"
            maxOccurs="1">
            <xs:annotation>
               <xs:documentation>An optional verbose description for the extension - may be displayed via a tooltip or
                  some other means in the GUI.
                </xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>

      <xs:attribute
         name="name"
         type="perspective:NameType"
         use="required">
         <xs:annotation>
            <xs:documentation>Internal name for this extension. Unique within extensions of a certain type defined by
               the perspective.
             </xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute
         name="application"
         type="xs:string"
         use="optional">
         <xs:annotation>
            <xs:documentation>The application servicing the URLs for this extension. Default is root (rhq-portal.war).
            </xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute
         name="url"
         type="xs:anyURI"
         use="optional">
         <xs:annotation>
            <xs:documentation>The request URL for this extension. Typically kicks off a wizard or similar workflow.
            </xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:anyAttribute />
   </xs:complexType>

   <xs:complexType
      name="RenderedExtensionType"
      abstract="true">
      <xs:annotation>
         <xs:documentation>All rendered extensions extend this type.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ExtensionType">

            <xs:attribute
               name="displayName"
               type="perspective:DisplayNameType"
               use="required">
               <xs:annotation>
                  <xs:documentation>The display name for this extension.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="iconUrl"
               type="xs:anyURI"
               use="optional">
               <xs:annotation>
                  <xs:documentation>The request URL for the icon displayed for this extension. If omitted, no icon is
                     displayed. Required if displayName is an empty string.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="action"
               type="perspective:ActionType"
               use="optional"
               default="add">
               <xs:annotation>
                  <xs:documentation>Add the extension or remove an extension with the given name and position that was
                     defined
                     by the Core perspective. For removal, all but the name attribute are ignored. The default is
                     add. Note, a
                     Remove followed by an Add can be used to replace an extension from the Core
                     perspective.
            </xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="TaskType">
      <xs:complexContent>
         <xs:extension
            base="perspective:RenderedExtensionType">
            <xs:attribute
               name="category"
               type="xs:string"
               use="optional">
               <xs:annotation>
                  <xs:documentation>The display category for this task (optional). Tasks with the same category will be
                     grouped together in the task pane.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="ResourceTaskType">
      <xs:complexContent>
         <xs:extension
            base="perspective:TaskType">
            <xs:sequence>
               <xs:element
                  name="activators"
                  type="perspective:ResourceActivatorsType"
                  minOccurs="0"
                  maxOccurs="1">
                  <xs:annotation>
                     <xs:documentation>An optional set of activators. If present, all of them must evaluate to true in
                        order for this resource task to be displayed for a particular Resource or Group page request.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="GlobalTaskType">
      <xs:complexContent>
         <xs:extension
            base="perspective:TaskType">
            <xs:sequence>
               <xs:element
                  name="activators"
                  type="perspective:GlobalActivatorsType"
                  minOccurs="0"
                  maxOccurs="1">
                  <xs:annotation>
                     <xs:documentation>An optional set of activators. If present, all of them must evaluate to true in
                        order for this global task to be displayed for a particular page request.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="MenuItemType">
      <xs:annotation>
         <xs:documentation>A (core) menu extension that adds or removes a top level or sub-menu item.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:RenderedExtensionType">
            <xs:sequence>
               <xs:element
                  name="position"
                  type="perspective:PositionType">
                  <xs:annotation>
                     <xs:documentation>Specifies the position of the menu item.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element
                  name="activators"
                  type="perspective:GlobalActivatorsType"
                  minOccurs="0"
                  maxOccurs="1">
                  <xs:annotation>
                     <xs:documentation>An optional set of activators. If present, all of them must evaluate to true in
                        order for this menu item to be displayed for a particular page request.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>

            <xs:attribute
               name="feature"
               type="perspective:MenuItemFeatureType"
               use="optional">
               <xs:annotation>
                  <xs:documentation>A special built-in rendering feature that should be applied when rendering this menu
                     item.
                    </xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="newWindow"
               type="xs:boolean"
               use="optional"
               default="false">
               <xs:annotation>
                  <xs:documentation>If true, the URL should be directed to a new window. Otherwise the content should be
                     presented in the current page body.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="addBreak"
               type="xs:boolean"
               use="optional"
               default="false">
               <xs:annotation>
                  <xs:documentation>If true, generate a break prior to this menu item.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="TabType">
      <xs:annotation>
         <xs:documentation>An extension that adds or removes a resource tab or subtab.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:RenderedExtensionType">
            <xs:sequence>
               <xs:element
                  name="position"
                  type="perspective:PositionType">
                  <xs:annotation>
                     <xs:documentation>Specifies the position of the tab.</xs:documentation>
                  </xs:annotation>
               </xs:element>
               <xs:element
                  name="activators"
                  type="perspective:ResourceActivatorsType"
                  minOccurs="0"
                  maxOccurs="1">
                  <xs:annotation>
                     <xs:documentation>An optional set of activators. If present, all of them must evaluate to true in
                        order for this resource task to be displayed for a particular Resource or Group page request.
                     </xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="PageType">
      <xs:annotation>
         <xs:documentation>A page extension that injects perspective links into a core page.
         </xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element
            name="page-link"
            type="perspective:PageLinkType"
            minOccurs="1"
            maxOccurs="unbounded">
            <xs:annotation>
               <xs:documentation>A replacement url for a named link on a given page.</xs:documentation>
            </xs:annotation>
         </xs:element>
      </xs:sequence>

      <xs:attribute
         name="name"
         type="xs:string"
         use="required">
         <xs:annotation>
            <xs:documentation>The page extension point name.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
   </xs:complexType>

   <xs:complexType
      name="PageLinkType">
      <xs:annotation>
         <xs:documentation>A page link extension for a named link in a page extension point.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ExtensionType">
            <xs:sequence>
               <xs:element
                  name="activators"
                  type="perspective:GlobalActivatorsType"
                  minOccurs="0"
                  maxOccurs="1">
                  <xs:annotation>
                     <xs:documentation>An optional set of activators. If present, all of them must evaluate to true in
                        order for this page link extension to be active.</xs:documentation>
                  </xs:annotation>
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>


   <!-- =========================================== Activators =============================================
-->
   <xs:complexType
      name="CommonActivatorsType">
      <xs:annotation>
         <xs:documentation>Activators common to global and resource activators.</xs:documentation>
      </xs:annotation>
      <xs:sequence>
         <xs:element
            name="debug-mode"
            type="perspective:DebugModeActivatorType"
            minOccurs="0"
            maxOccurs="1">
         </xs:element>
         <xs:element
            name="license-feature"
            type="perspective:LicenseFeatureActivatorType"
            minOccurs="0"
            maxOccurs="unbounded">
         </xs:element>
         <xs:element
            name="global-permission"
            type="perspective:GlobalPermissionActivatorType"
            minOccurs="0"
            maxOccurs="unbounded">
         </xs:element>
         <xs:element
            name="superuser"
            type="perspective:SuperuserActivatorType"
            minOccurs="0"
            maxOccurs="1">
         </xs:element>
      </xs:sequence>
   </xs:complexType>

   <xs:complexType
      name="GlobalActivatorsType">
      <xs:annotation>
         <xs:documentation>If any of the activator conditions evaluate to true then the global activator is active. In
            other words, there is an implicit OR operation applied. For AND logic it is typical to declare several
            "activators" elements in the declaring element.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:CommonActivatorsType">
            <xs:sequence>
               <xs:element
                  name="inventory"
                  type="perspective:InventoryActivatorType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="ResourceActivatorsType">
      <xs:annotation>
         <xs:documentation>A set of activators that must evaluate to true for the resource-level extension to be active.
            In addition to the activators common to global and resource-level activatation, several more can be
            evaluated against the the resource in context. Facet Activators ensure the specified facet is implemented by
            the resource type of the resource in context. Resource-permission activators ensure the user has the
            specified permission on the resource in context. Trait Activators ensure that the specified trait value
            satisfies the specified pattern for the resource in context. Resource-type Activators can be used if the
            extension is active for one or more different resource types. In this situation resource-permission and
            trait activators can be set in a fine-grained way, differing for each resource type, if necessary.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:CommonActivatorsType">
            <xs:choice>
               <xs:sequence>
                  <xs:element
                     name="facet"
                     type="perspective:FacetActivatorType"
                     minOccurs="1"
                     maxOccurs="unbounded">
                  </xs:element>
                  <xs:element
                     name="resource-permission"
                     type="perspective:ResourcePermissionActivatorType"
                     minOccurs="0"
                     maxOccurs="unbounded">
                  </xs:element>
                  <xs:element
                     name="trait"
                     type="perspective:TraitActivatorType"
                     minOccurs="0"
                     maxOccurs="unbounded">
                  </xs:element>
               </xs:sequence>
               <xs:element
                  name="resource-type"
                  type="perspective:InventoryActivatorType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
            </xs:choice>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="ActivatorType">
      <xs:annotation>
         <xs:documentation>All Activators extend this type.</xs:documentation>
      </xs:annotation>
   </xs:complexType>

   <!-- Global Activators
-->
   <xs:complexType
      name="LicenseFeatureActivatorType">
      <xs:annotation>
         <xs:documentation>A certain license feature (e.g. monitoring) must be active in order to activate the
            extension.
           </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:attribute
               name="name"
               type="perspective:LicenseFeatureType"
               use="required">
               <xs:annotation>
                  <xs:documentation>The type of license that must be installed to activate the extension point.
                  </xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="DebugModeActivatorType">
      <xs:annotation>
         <xs:documentation>Debug mode must be enabled in the GUI in order to activate the extension.
           </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="GlobalPermissionActivatorType">
      <xs:annotation>
         <xs:documentation>The user must possess the global permission in order to activate the extension.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:attribute
               name="name"
               type="perspective:GlobalPermissionType"
               use="required">
               <xs:annotation>
                  <xs:documentation>The required Global permission.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="InventoryActivatorType">
      <xs:annotation>
         <xs:documentation>The user must have in inventory resources as described to activate the extension.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:sequence>
               <xs:element
                  name="resource"
                  type="perspective:ResourceType"
                  minOccurs="1"
                  maxOccurs="unbounded">
               </xs:element>
            </xs:sequence>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="SuperuserActivatorType">
      <xs:annotation>
         <xs:documentation>The user must be superuser in order to activate the extension.
           </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <!--  Resource Activators
-->
   <xs:complexType
      name="FacetActivatorType">
      <xs:annotation>
         <xs:documentation>The resource in context must be of a resource type that implements the specified facet.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:attribute
               name="name"
               type="perspective:FacetType"
               use="required">
               <xs:annotation>
                  <xs:documentation>The facet name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="ResourcePermissionActivatorType">
      <xs:annotation>
         <xs:documentation>The user must possess the specified resource permission on the relevant resource.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:attribute
               name="name"
               type="perspective:ResourcePermissionType"
               use="required">
               <xs:annotation>
                  <xs:documentation>The Resource permission name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <xs:complexType
      name="TraitActivatorType">
      <xs:annotation>
         <xs:documentation>The relevant resource must satisfy the trait condition to activate the extension.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:attribute
               name="name"
               type="xs:string"
               use="required">
               <xs:annotation>
                  <xs:documentation>The name of the trait being tested for activation.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="value"
               type="xs:string"
               use="required">
               <xs:annotation>
                  <xs:documentation>A Java-style regular expression for the value of the trait.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <!-- Global Content Activators
-->

   <xs:complexType
      name="ContentProviderActivatorType">
      <xs:annotation>
         <xs:documentation>The specified Content Provider Type must be installed in order to activate the extension.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:attribute
               name="name"
               type="xs:string"
               use="required">
               <xs:annotation>
                  <xs:documentation>The required Content Provider Type's internal name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>

   <!-- Contextual Content Activators

   Under Construction
-->
   <xs:complexType
      name="ContentActivatorType">
      <xs:annotation>
         <xs:documentation>The content context must satisfy the following conditions to activate the extension.
         </xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:CommonActivatorsType">
            <xs:attribute
               name="providerType"
               type="xs:string"
               use="required">
               <xs:annotation>
                  <xs:documentation>The in-context content provider's type. The internal name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="provider"
               type="xs:string"
               use="optional">
               <xs:annotation>
                  <xs:documentation>The in-context content provider. The name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="product"
               type="xs:string"
               use="optional">
               <xs:annotation>
                  <xs:documentation>The in-context content provider's product. The name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="repo"
               type="xs:string"
               use="optional">
               <xs:annotation>
                  <xs:documentation>The in-context repo. The name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="package-type"
               type="xs:string"
               use="optional">
               <xs:annotation>
                  <xs:documentation>The in-context package's type. The internal name.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>


   <!-- =========================================== Helper Types =============================================
-->

   <xs:complexType
      name="ResourceType">
      <xs:annotation>
         <xs:documentation>Resource level activation definition.</xs:documentation>
      </xs:annotation>
      <xs:complexContent>
         <xs:extension
            base="perspective:ActivatorType">
            <xs:sequence>
               <xs:element
                  name="resource-permission"
                  type="perspective:ResourcePermissionActivatorType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
               <xs:element
                  name="trait"
                  type="perspective:TraitActivatorType"
                  minOccurs="0"
                  maxOccurs="unbounded">
               </xs:element>
            </xs:sequence>
            <xs:attribute
               name="plugin"
               type="xs:string"
               use="required">
               <xs:annotation>
                  <xs:documentation>Plugin for the specified resource type.</xs:documentation>
               </xs:annotation>
            </xs:attribute>
            <xs:attribute
               name="type"
               type="xs:string"
               use="required">
               <xs:annotation>
                  <xs:documentation>Resource Type that must be in inventory to activate the extension point.
                  </xs:documentation>
               </xs:annotation>
            </xs:attribute>
         </xs:extension>
      </xs:complexContent>
   </xs:complexType>


   <xs:complexType
      name="PositionType">
      <xs:annotation>
         <xs:documentation>Defines position of the extension in the UI, relative to other extensions.</xs:documentation>
      </xs:annotation>
      <xs:attribute
         name="name"
         type="perspective:NameType"
         use="optional">
         <xs:annotation>
            <xs:documentation>Position relatively against this extension name. Required for all placement relative to
               another extension.</xs:documentation>
         </xs:annotation>
      </xs:attribute>
      <xs:attribute
         name="placement"
         type="perspective:PlacementType"
         use="required">
      </xs:attribute>
   </xs:complexType>

   <xs:simpleType
      name="ActionType">
      <xs:annotation>
         <xs:documentation>
            Add : Add new extension
            Remove : Remove an extension that was defined by the Core perspective
         </xs:documentation>
      </xs:annotation>
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="add"></xs:enumeration>
         <xs:enumeration
            value="remove"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="DisplayNameType">
      <xs:restriction
         base="xs:string">
         <xs:maxLength
            value="128" />
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="DescriptionType">
      <xs:restriction
         base="xs:string">
         <xs:maxLength
            value="2000" />
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="MenuItemFeatureType">
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="aboutBox"></xs:enumeration>
         <xs:enumeration
            value="groupFavorites"></xs:enumeration>
         <xs:enumeration
            value="groupRecentlyViewed"></xs:enumeration>
         <xs:enumeration
            value="groupSearch"></xs:enumeration>
         <xs:enumeration
            value="resourceFavorites"></xs:enumeration>
         <xs:enumeration
            value="resourceRecentlyViewed"></xs:enumeration>
         <xs:enumeration
            value="resourceSearch"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="NameType">
      <xs:restriction
         base="xs:string">
         <xs:minLength
            value="1" />
         <xs:maxLength
            value="64" />
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="GlobalPermissionType">
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="MANAGE_INVENTORY"></xs:enumeration>
         <xs:enumeration
            value="MANAGE_SECURITY"></xs:enumeration>
         <xs:enumeration
            value="MANAGE_SETTINGS"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="ResourcePermissionType">
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="CONFIGURE"></xs:enumeration>
         <xs:enumeration
            value="CONTROL"></xs:enumeration>
         <xs:enumeration
            value="CREATE_CHILD_RESOURCE"></xs:enumeration>
         <xs:enumeration
            value="DELETE_RESOURCE"></xs:enumeration>
         <xs:enumeration
            value="MANAGE_ALERTS"></xs:enumeration>
         <xs:enumeration
            value="MANAGE_CONTENT"></xs:enumeration>
         <xs:enumeration
            value="MANAGE_MEASUREMENTS"></xs:enumeration>
         <xs:enumeration
            value="MODIFY_RESOURCE"></xs:enumeration>
         <xs:enumeration
            value="VIEW_RESOURCE"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="FacetType">
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="measurement">
            <xs:annotation>
               <xs:documentation>The Resource type defines one or more metrics.</xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="event">
            <xs:annotation>
               <xs:documentation>The Resource type defines one or more events.</xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="plugin_configuration">
            <xs:annotation>
               <xs:documentation>
                  The Resource type defines one or more plugin configuration (aka connection) properties.
               </xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="configuration">
            <xs:annotation>
               <xs:documentation>
                  The Resource type defines one or more resource configuration properties.
               </xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="operation">
            <xs:annotation>
               <xs:documentation>The Resource type defines one or more operations.</xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="content">
            <xs:annotation>
               <xs:documentation>The Resource type defines one or more packages.</xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="call_time">
            <xs:annotation>
               <xs:documentation>The Resource type defines one or more call-time metrics.</xs:documentation>
            </xs:annotation>
         </xs:enumeration>
         <xs:enumeration
            value="support">
            <xs:annotation>
               <xs:documentation>The Resource type defines support snapshots.</xs:documentation>
            </xs:annotation>
         </xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="PlacementType">
      <xs:annotation>
         <xs:documentation>Describes the relative placement of an extension to another extension.</xs:documentation>
      </xs:annotation>
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="before"></xs:enumeration>
         <xs:enumeration
            value="after"></xs:enumeration>
         <xs:enumeration
            value="firstChild"></xs:enumeration>
         <xs:enumeration
            value="lastChild"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

   <xs:simpleType
      name="LicenseFeatureType">
      <xs:annotation>
         <xs:documentation>A license type.</xs:documentation>
      </xs:annotation>
      <xs:restriction
         base="xs:string">
         <xs:enumeration
            value="monitoring"></xs:enumeration>
      </xs:restriction>
   </xs:simpleType>

</xs:schema>
