<?xml version="1.0" encoding="UTF-8" ?>

<content-plugin name="UrlContentSourcePlugin" 
                version="1.0"
                apiVersion="2.0"
                xmlns="urn:xmlns:rhq-serverplugin.content"
                xmlns:c="urn:xmlns:rhq-configuration">

   <contentSourceType name="UrlSource"
                      displayName="Remote URL Content Provider"
                      description="This content provider retrieves packages from a remote system identified by a URL."
                      lazyLoad="true"
                      downloadMode="database"
                      apiClass="org.rhq.enterprise.server.plugins.url.UrlProvider">

      <configuration>
         <c:simple-property name="rootUrl" type="string" required="true" description="The URL that contains all content that is to be served by this content provider."/>
         <c:simple-property name="indexFile" type="string" required="true" default="content-index.txt" description="The index file that defines all the content that can be found on the remote server. If this is not a full URL, it is assumed to be relative to the root URL."/>

         <c:list-property name="packageTypes" required="true" min="0"
                          description="Defines the different package types associated with specific filename filters. These are used only if the index file does not provide the package type information.">
            <c:map-property name="packageType">
               <c:simple-property name="filenameFilter" required="true" summary="true" default=".*" description="A regular expression that identifies a file of this package type (e.g. '.*\.jar', '.*/i686/.*\.rpm$')"/>
               <c:simple-property name="packageTypeName" required="true" summary="true" description="The name that identifies the kind of package this type represents (e.g. 'ear', 'rpm')"/>
               <c:simple-property name="architectureName" required="true" summary="true" default="noarch" description="The specific hardware architecture this type of package can be deployed on. If there is no specific architecture required, use 'noarch'. (e.g. 'i686', 'amd64')"/>
               <c:simple-property name="resourceTypeName" required="true" summary="true" description="The name of the resource type on which this package can be deployed. This is the resource type name as defined in the agent plugin. (e.g. 'Linux', 'JBossAS Server')"/>
               <c:simple-property name="resourceTypePluginName" required="true" summary="true" description="The name of the plugin that defined the resource type. (e.g. 'Platform', 'JBossAS')"/>
            </c:map-property>
         </c:list-property>
      </configuration>

   </contentSourceType>

   <contentSourceType name="HttpSource"
                      displayName="HTTP Content Provider"
                      description="This content provider retrieves packages from a remote HTTP server, possibly via a proxy."
                      lazyLoad="true"
                      downloadMode="database"
                      apiClass="org.rhq.enterprise.server.plugins.url.HttpProvider">

      <configuration>
         <c:simple-property name="rootUrl" type="string" required="true" description="The HTTP URL that contains all content that is to be served by this content provider."/>
         <c:simple-property name="indexFile" type="string" required="true" default="content-index.txt" description="The index file that defines all the content that can be found on the remote server. If this is not a full URL, it is assumed to be relative to the root URL."/>

         <c:list-property name="packageTypes" required="true" min="0"
                          description="Defines the different package types associated with specific filename filters. These are used only if the index file does not provide the package type information.">
            <c:map-property name="packageType">
               <c:simple-property name="filenameFilter" required="true" summary="true" default=".*" description="A regular expression that identifies a file of this package type (e.g. '.*\.jar', '.*/i686/.*\.rpm$')"/>
               <c:simple-property name="packageTypeName" required="true" summary="true" description="The name that identifies the kind of package this type represents (e.g. 'ear', 'rpm')"/>
               <c:simple-property name="architectureName" required="true" summary="true" default="noarch" description="The specific hardware architecture this type of package can be deployed on. If there is no specific architecture required, use 'noarch'. (e.g. 'i686', 'amd64')"/>
               <c:simple-property name="resourceTypeName" required="true" summary="true" description="The name of the resource type on which this package can be deployed. This is the resource type name as defined in the agent plugin. (e.g. 'Linux', 'JBossAS Server')"/>
               <c:simple-property name="resourceTypePluginName" required="true" summary="true" description="The name of the plugin that defined the resource type. (e.g. 'Platform', 'JBossAS')"/>
            </c:map-property>
         </c:list-property>

         <c:group name="security" displayName="Security Settings">
            <c:simple-property name="username" displayName="Username" type="string" required="false"
                               description="Username used to log into the HTTP server"/>
            <c:simple-property name="password" displayName="Password" type="password" required="false"
                               description="Password used to log into the HTTP server"/>
         </c:group>
         <c:group name="proxy" displayName="Proxy Settings" hiddenByDefault="true">
            <c:simple-property name="proxyUrl" displayName="Proxy URL" type="string" required="false"
                               description="Optional. URL of the proxy server to use for this connection."/>
            <c:simple-property name="proxyPort" displayName="Proxy Port" type="string" required="false"
                               description="Optional. Port of the proxy server to use for this connection."/>
            <c:simple-property name="proxyUsername" displayName="Proxy Username" type="string" required="false"
                               description="Optional. If the proxy requires authentication, this is the user to log in as."/>
            <c:simple-property name="proxyPassword" displayName="Proxy Password" type="password" required="false"
                               description="Optional. If the proxy requires authentitcation, this is the password for the user."/>
         </c:group>
      </configuration>

   </contentSourceType>

</content-plugin>