<?xml version="1.0" encoding="UTF-8"?>

<deployment xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
            xsi:schemaLocation="urn:jboss:bean-deployer:2.0 bean-deployer_2_0.xsd"
            xmlns="urn:jboss:bean-deployer:2.0">
   <bean name="jboss.mq:service=JMSProviderLoader,name=JMSProvider" class="org.jboss.jms.jndi.JNDIProviderAdapter">
      <property name="factoryRef">java:/JmsXA</property>
      <property name="queueFactoryRef">java:/JmsXA</property>
      <property name="topicFactoryRef">java:/JmsXA</property>
      <property name="properties" class="java.util.Properties">
               <map keyClass="java.lang.String" valueClass="java.lang.String">
                  <entry>
                     <key>java.naming.factory.initial</key>
                     <value>org.jnp.interfaces.LocalOnlyContextFactory</value>
                  </entry>
                  <entry>
                      <key>java.naming.factory.url.pkgs</key>
                      <value>org.jboss.naming:org.jnp.interfaces</value>
                  </entry>
               </map>
      </property>
   </bean>

   <bean name="b1" class="org.jboss.ejb3.embedded.JndiBinder">
      <property name="jndiProperties"><inject bean="InitialContextProperties"/></property>
      <property name="target"><inject bean="jboss.mq:service=JMSProviderLoader,name=JMSProvider"/></property>
      <property name="bindTo">java:/DefaultJMSProvider</property>
      <property name="serializable">true</property>
   </bean>

   <bean name="jboss.mq:service=ServerSessionPoolMBean,name=StdJMSPool" class="org.jboss.jms.asf.StdServerSessionPoolFactory">
      <property name="name">StdJMSPool</property>
      <property name="xidFactory"><inject bean="XidFactoryMBean"/></property>
      <property name="transactionManager"><inject bean="TransactionManager"/></property>
   </bean>

   <bean name="b2" class="org.jboss.ejb3.embedded.JndiBinder">
      <property name="jndiProperties"><inject bean="InitialContextProperties"/></property>
      <property name="target"><inject bean="jboss.mq:service=ServerSessionPoolMBean,name=StdJMSPool"/></property>
      <property name="bindTo">java:/StdJMSPool</property>
      <property name="serializable">false</property>
   </bean>


   <bean name="jboss.mq:service=PersistenceManager" class="org.jboss.mq.pm.none.PersistenceManager">
   </bean>

   <bean name="jboss.mq:service=MessageCache" class="org.jboss.mq.kernel.MessageCache">
      <property name="persistenceManager"><inject bean="jboss.mq:service=PersistenceManager"/></property>
      <property name="highMemoryMark">50</property>
      <property name="maxMemoryMark">60</property>
   </bean>

   <bean name="jms-rar-WorkManager" class="org.jboss.ejb3.embedded.resource.JBossWorkManager">
   </bean>

   <bean name="jms-rar-DeploymentInfo" class="org.jboss.ejb3.embedded.resource.Ejb3DeploymentInfo">
      <constructor>
         <parameter class="java.lang.String">jms-ra.rar</parameter>
         <parameter class="java.lang.String">javax.jms.MessageListener</parameter>
         <parameter class="java.lang.String">org.jboss.resource.adapter.jms.inflow.JmsActivationSpec</parameter>
      </constructor>
   </bean>

   <bean name="jboss.jca:name='jms-ra.rar',service=RARDeployment" class="org.jboss.ejb3.embedded.resource.RARDeployment">
      <constructor>
         <parameter class="org.jboss.deployment.DeploymentInfo">
            <inject bean="jms-rar-DeploymentInfo"/>
         </parameter>
      </constructor>
      <property name="workManager"><inject bean="jms-rar-WorkManager"/></property>
   </bean>

   <bean name="jboss.mq:service=StateManager" class="org.jboss.mq.sm.none.NullStateManager">
   </bean>

   <bean name="BasicQueueParameters" class="org.jboss.mq.server.BasicQueueParameters"/>

   <bean name="jboss.mq:service=ThreadPool" class="org.jboss.util.threadpool.BasicThreadPool">
      <property name="name">JMSThread</property>
      <property name="threadGroupName">JBossMQ Server Threads</property>
      <!-- The max number of threads in the pool -->
      <property name="maximumPoolSize">10</property>
      <!-- The max number of tasks before the queue is full -->
      <property name="maximumQueueSize">1000</property>
      <!-- The behavior of the pool when a task is added and the queue is full.
      abort - a RuntimeException is thrown
      run - the calling thread executes the task
      wait - the calling thread blocks until the queue has room
      discard - the task is silently discarded without being run
      discardOldest - check to see if a task is about to complete and enque
         the new task if possible, else run the task in the calling thread
      -->
      <property name="blockingMode">run</property>
   </bean>

   <bean name="jboss.mq:service=DestinationManager" class="org.jboss.mq.server.JMSDestinationManager">
      <constructor>
         <parameter class="org.jboss.mq.server.BasicQueueParameters">
            <inject bean="BasicQueueParameters"/>
         </parameter>
      </constructor>
      <property name="persistenceManager"><inject bean="jboss.mq:service=PersistenceManager"/></property>
      <property name="messageCache"><inject bean="jboss.mq:service=MessageCache"/></property>
      <property name="stateManager"><inject bean="jboss.mq:service=StateManager"/></property>
      <property name="threadPool"><inject bean="jboss.mq:service=ThreadPool"/></property>
      <property name="threadGroup"><inject bean="jboss.mq:service=ThreadPool" property="threadGroup"/></property>
      <start method="startServer"/>
      <stop method="stopServer"/>
   </bean>

   <bean name="jboss.mq.destination:service=Queue,name=DLQ" class="org.jboss.mq.kernel.Queue">
     <property name="destinationManagerPojo"><inject bean="jboss.mq:service=DestinationManager"/></property>
     <property name="initialContextProperties"><inject bean="InitialContextProperties"/></property>
      <property name="destinationName">DLQ</property>
   </bean>

   <bean name="jboss.mq:service=Invoker" class="org.jboss.mq.server.JMSServerInvoker">
      <property name="next"><inject bean="jboss.mq:service=DestinationManager"/></property>
   </bean>

   <bean name="jboss.mq:service=invocationlayer,type=JVM" class="org.jboss.mq.kernel.JVMIL">
     <property name="jmsInvoker"><inject bean="jboss.mq:service=Invoker"/></property>
     <!-- notice we actually switched - the non-xa connection factory JNDI Ref is the JNDI name our EJBs use -->
     <!-- the embedded EJB container doesn't support XA, so the connection factory our JmsXA JNDI lookup will return will be a non-XA factory -->
     <property name="connectionFactoryJNDIRef">java:/JmsXA</property>
     <property name="XAConnectionFactoryJNDIRef">java:/ConnectionFactory</property>
     <property name="pingPeriod">0</property>
      <property name="initialContextProperties"><inject bean="InitialContextProperties"/></property>
   </bean>

</deployment>
