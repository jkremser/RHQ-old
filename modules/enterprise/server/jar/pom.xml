<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-parent</artifactId>
    <version>4.6.0-SNAPSHOT</version>
    <relativePath>../../../../pom.xml</relativePath>
  </parent>

  <artifactId>rhq-enterprise-server</artifactId>
  <packaging>ejb</packaging>

  <name>RHQ Enterprise Server JAR</name>
  <description>RHQ enterprise server main JAR</description>

  <properties>
    <jboss.zip>${settings.localRepository}/org/jboss/as/jboss-as-dist/${jboss.version}/jboss-as-dist-${jboss.version}.zip</jboss.zip>
    <jboss.unzip.location>${basedir}/target/jboss-as-${jboss.version}</jboss.unzip.location>

    <clean.db>true</clean.db>

    <rhq.internal>false</rhq.internal>
  </properties>

  <dependencies>
    
      <!-- Internal Deps -->

  <!-- rhq-enterprise-comm pulls in the old version of jboss remoting.  The old version of remoting
       depends on jboss/jboss-common/1.2.1.GA/jboss-common-1.2.1.GA.jar, which includes on old
       implementation of the org.jboss.logging package.  Arquillian testing leverages AS7 modules
       (xnio e.g.) that require the up to date logging impl.  Since server jar depends on
       rhq-enterprise-comm to run, and arquillian to test, place the current version jboss-logging
       as a dependency before the rhq-comm dependency. This ensure the classpath is set up to use the
       newer package impl.  -->
  <dependency>
    <groupId>org.jboss.logging</groupId>
    <artifactId>jboss-logging</artifactId>
    <version>3.1.0.GA</version>
    <scope>test</scope>
  </dependency>
  <dependency>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-enterprise-comm</artifactId>
    <version>${project.version}</version>
  </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-enterprise-server-xml-schemas</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-domain</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope> <!-- by ear -->
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-client-api</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-dbutils</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>safe-invoker</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-common-drift</artifactId>
      <version>${project.version}</version>
    </dependency>
 
    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-container-lib</artifactId>
      <version>${project.version}</version>
    </dependency>
   
    <dependency>
      <groupId>com.googlecode.java-diff-utils</groupId>
      <artifactId>diffutils</artifactId>
      <version>1.2.1</version>
    </dependency>

  <dependency>
    <groupId>org.rhq</groupId>
    <artifactId>rhq-jboss-as-dmr-client</artifactId>
    <version>${project.version}</version>
  </dependency>

  <dependency>
    <groupId>org.jboss.as</groupId>
    <artifactId>jboss-as-server</artifactId>
    <version>${jboss.version}</version>
    <scope>provided</scope> <!-- provided by AS7 -->
  </dependency>


      <!--================ Test Deps ================-->

      <!-- Note, the test deps are intentionally placed above the other scoped deps because of classpath
           reasons.  Maven orders the [test] classpath in the order listed in the pom.  -->
 
    
  <dependency>
    <groupId>org.jboss.as</groupId>
    <artifactId>jboss-as-dist</artifactId>
    <type>zip</type>
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.spec</groupId>
    <artifactId>jboss-javaee-6.0</artifactId>
    <version>${jboss.javaee6.spec.version}</version>
    <scope>provided</scope>
    <type>pom</type>
  </dependency>
 
  <dependency>
    <groupId>org.jboss.as</groupId>
    <artifactId>jboss-as-arquillian-container-managed</artifactId>
    <version>${jboss.version}</version>
    <scope>test</scope>
  </dependency>
         
  <dependency>
    <groupId>org.jboss.arquillian.testng</groupId>
    <artifactId>arquillian-testng-container</artifactId>    
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.shrinkwrap</groupId>
    <artifactId>shrinkwrap-impl-base</artifactId>
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.shrinkwrap.resolver</groupId>
    <artifactId>shrinkwrap-resolver-api</artifactId>
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.shrinkwrap.resolver</groupId>
    <artifactId>shrinkwrap-resolver-api-maven</artifactId>
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.shrinkwrap.resolver</groupId>
    <artifactId>shrinkwrap-resolver-impl-maven</artifactId>
    <scope>test</scope>
  </dependency>

  <dependency>
    <groupId>org.jboss.arquillian.protocol</groupId>
    <artifactId>arquillian-protocol-servlet</artifactId>
    <scope>test</scope>
  </dependency>              

    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>test-utils</artifactId>
      <version>${project.version}</version>
      <scope>test-compile</scope>
      <exclusions>
        <exclusion>
          <groupId>org.testng</groupId>
          <artifactId>testng</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
 
    <dependency>
      <groupId>org.rhq</groupId>
      <artifactId>rhq-core-domain</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
  
     <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>rhq-core-client-api</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.rhq.helpers</groupId>
      <artifactId>perftest-support</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>ant</groupId>
          <artifactId>ant</artifactId>
        </exclusion>
        <exclusion>
          <groupId>ant</groupId>
          <artifactId>ant-launcher</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
 
      <!-- NOTE: The remaining test deps correspond to the classes contained in hibernate-all.jar and thirdparty-all.jar. -->
<!-- 
    <dependency>
      <groupId>org.javassist</groupId>
      <artifactId>javassist</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>trove</groupId>
      <artifactId>trove</artifactId>
      <version>1.0.2</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>xerces</groupId>
      <artifactId>xercesImpl</artifactId>
      <version>${xercesImpl.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>1.8</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>commons-jxpath</groupId>
      <artifactId>commons-jxpath</artifactId>
      <version>1.3</version>
      <scope>test</scope>
    </dependency>
 -->

      <!-- 3rd Party Deps -->

    <!-- do we really need this version, for now use the version provided by AS7, declare just below --> 
    <dependency>
      <groupId>org.antlr</groupId>
      <artifactId>antlr-runtime</artifactId>
      <version>3.2</version>  
      <exclusions>
        <exclusion>
          <groupId>antlr</groupId>
          <artifactId>antlr</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.antlr</groupId>
          <artifactId>antlr</artifactId>
        </exclusion>        
      </exclusions>      
    </dependency>    

    <dependency>
      <groupId>antlr</groupId>
      <artifactId>antlr</artifactId>  
      <scope>provided</scope>
    </dependency>

    <dependency>
       <groupId>org.infinispan</groupId>
       <artifactId>infinispan-core</artifactId>
       <version>${infinispan.version}</version>
       <scope>provided</scope>
    </dependency>

      <!-- Required by a couple APL and Lather classes - TODO: Remove this once APL and Lather have been excised. -->
    <dependency>
      <groupId>commons-beanutils</groupId>
      <artifactId>commons-beanutils</artifactId>
      <version>1.6.1</version>
    </dependency>

      <!-- Required by a couple APL classes - TODO: Remove this once APL has been removed. -->
      <!-- also required by EJB3 Embedded (test scope) -->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>3.2</version>
    </dependency>

    <dependency>
      <groupId>commons-httpclient</groupId>
      <artifactId>commons-httpclient</artifactId>
      <version>3.0.1</version>
    </dependency>

    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.4</version>
    </dependency>

      <!-- Required by a couple APL classes - TODO: Remove this once APL has been removed. -->
    <dependency>
      <groupId>commons-validator</groupId>
      <artifactId>commons-validator</artifactId>
      <version>1.1.4</version>
    </dependency>

      <!-- required by RHQ server classes, as well as EJB3 Embedded 
    <dependency>
      <groupId>dom4j</groupId>
      <artifactId>dom4j</artifactId>
      <version>1.6.1-jboss</version>
      <scope>provided</scope>
    </dependency>
-->
    <dependency>
      <groupId>gnu-getopt</groupId>
      <artifactId>getopt</artifactId>
    </dependency>

 
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <scope>provided</scope>
    </dependency>

 <!-- 
    <dependency>
      <groupId>i18nlog</groupId>
      <artifactId>i18nlog</artifactId>
    </dependency>
     -->
<!-- 
    <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>mail</artifactId>
      <version>${javax.mail.api.version}</version>
      <scope>provided</scope>
    </dependency>
 -->
<!-- 
    <dependency>
      <groupId>javax.persistence</groupId>
      <artifactId>persistence-api</artifactId>
      <version>1.0.2</version>
      <scope>provided</scope>
    </dependency>
 -->
 
 <!-- 
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>jsp-api</artifactId>
      <version>2.0</version>
      <scope>provided</scope>
    </dependency>
 -->
 

    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jboss-cache</artifactId>        
      <scope>compile</scope>
    </dependency>


    <dependency>
      <groupId>org.jboss</groupId>
      <artifactId>jboss-common-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- JBoss annotations like @TransactionTimeout --> 
    <dependency>
       <groupId>org.jboss.ejb3</groupId>
       <artifactId>jboss-ejb3-ext-api</artifactId>
       <scope>provided</scope>
    </dependency>
 
 
    <!-- annotations like @ExcludeDefaultInterceptors -->
    <dependency>
       <groupId>org.jboss.spec.javax.interceptor</groupId>
       <artifactId>jboss-interceptors-api_1.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>

    <!-- annotations @javax.transaction.TransactionManager -->
    <dependency>
       <groupId>org.jboss.spec.javax.transaction</groupId>
       <artifactId>jboss-transaction-api_1.1_spec</artifactId>
       <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.annotation</groupId>
      <artifactId>jboss-annotations-api_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.spec.javax.ejb</groupId>
      <artifactId>jboss-ejb-api_3.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.jboss.spec.javax.jms</groupId>
      <artifactId>jboss-jms-api_1.1_spec</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- for some Jboss custom things like code to obfuscate passwords -->
    <dependency>
      <groupId>org.picketbox</groupId>
      <artifactId>picketbox</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- TODO: find out the AS7 equivalent
    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jboss-jmx</artifactId>
    </dependency>
     -->
 
    <!-- TODO: find out the AS7 equivalent 
    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jboss-system</artifactId>
    </dependency>
    -->

    <!-- TODO: find out the AS7 equivalent 
    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jbosssx</artifactId>
    </dependency>
 -->
 <!-- 
    <dependency>
      <groupId>jboss</groupId>
      <artifactId>jbpm</artifactId>
      <version>3.1.1</version>
    </dependency>
 -->    
 
    <dependency>
      <groupId>org.jboss.jbossts</groupId>
      <artifactId>jbossjts</artifactId>
      <version>${jboss-jts.version}</version>
      <scope>provided</scope>
    </dependency>

 
      <!-- TODO: remove this - tests should all be moved under the test source tree 
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
    </dependency>
    -->

    <dependency>
      <groupId>org.opensymphony.quartz</groupId>
      <artifactId>quartz</artifactId>
         <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
      <scope>provided</scope> <!-- by JBossAS itself, which the container build has packaged with 1.6.5 -->
    </dependency>

    <dependency>
      <groupId>org.opensymphony.quartz</groupId>
      <artifactId>quartz-oracle</artifactId>
         <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
      <scope>provided</scope> <!-- by JBossAS itself, which the container build has packaged with 1.6.5 -->
    </dependency>

    <dependency>
      <groupId>org.easymock</groupId>
      <artifactId>easymockclassextension</artifactId>
      <version>2.2</version>
      <scope>test</scope>
         <!-- somehow this is needed otherwise the hibernate stuff doesn't initialize in our tests -->
    </dependency>

    <dependency>
      <groupId>org.snmp4j</groupId>
      <artifactId>snmp4j</artifactId>
      <version>1.8.2</version>
    </dependency>

      <!-- required by RHQ server classes, as well as EJB3 Embedded -->
    <dependency>
      <groupId>oswego-concurrent</groupId>
      <artifactId>concurrent</artifactId>
      <version>1.3.4</version>
    </dependency>

    <dependency>
      <groupId>rss4j</groupId>
      <artifactId>rss4j</artifactId>
      <version>0.92-on.2</version>
    </dependency>

    <dependency>
      <groupId>tomcat</groupId>
      <artifactId>catalina</artifactId>
      <version>5.5.20</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>tomcat</groupId>
      <artifactId>tomcat-jk</artifactId>
      <version>4.1.31</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <version>0.1.29</version>
    </dependency>

    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxrs</artifactId>
      <version>${resteasy.version}</version>
      <scope>provided</scope> <!-- by container -->
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jackson-provider</artifactId>
      <version>${resteasy.version}</version>
      <scope>provided</scope> <!-- by container -->
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-links</artifactId>
      <version>${resteasy.version}</version>
      <scope>provided</scope> <!-- by container -->
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-yaml-provider</artifactId>
      <version>${resteasy.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.resteasy</groupId>
      <artifactId>resteasy-jaxb-provider</artifactId>
      <version>${resteasy.version}</version>
      <scope>provided</scope>
      <exclusions>
        <exclusion>
          <groupId>com.sun.xml.bind</groupId>
          <artifactId>jaxb-impl</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.sun.xml.stream</groupId>
          <artifactId>sjsxp</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.wordnik</groupId>
      <artifactId>swagger-annotations_2.9.1</artifactId>
      <version>1.1-SNAPSHOT</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>1.8</version>
    </dependency>
    
    <!-- 
    <dependency>    
      <groupId>org.jboss.el</groupId>
      <artifactId>jboss-el</artifactId>
      <version>2.0.1.GA</version>
      <scope>provided</scope>
    </dependency>
     -->
     
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.18</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-testng</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${powermock.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>2.0.3</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <finalName>${project.artifactId}</finalName>

    <resources>
      <!-- Redefine which directories to treat like resources (which are filtered). -->
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>

    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <filtering>true</filtering>
      </testResource>
    </testResources>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-ejb-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <ejbVersion>3.0</ejbVersion>
          <generateClient>true</generateClient>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>

          <execution>
            <phase>process-classes</phase>
            <configuration>
              <target>
                        <!-- generate the I18N resource bundles -->
                <taskdef name="i18n" classpathref="maven.runtime.classpath" classname="mazz.i18n.ant.I18NAntTask"/>

                <i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" append="false"
                  verify="true">
                  <classpath refid="maven.runtime.classpath"/>
                  <classfileset dir="${project.build.outputDirectory}">
                    <include name="**/ServerI18NResourceKeys.class"/>
                    <include name="**/AlertI18NResourceKeys.class"/>
                  </classfileset>
                </i18n>

                        <!-- create our rhq-server-version.properties file that goes in our jar -->
                <tstamp>
                  <format property="build.time" pattern="dd.MMM.yyyy HH.mm.ss z"/>
                </tstamp>

                <echo file="${project.build.outputDirectory}/rhq-server-version.properties" append="false">Product-Name=${rhq.product.name}
                  Product-Version=${project.version}
                  Module-Name=${project.name}
                  Module-Version=${project.version}
                  Build-Number=${buildNumber}
                  Build-Date=${build.time}
                  Build-Jdk-Vendor=${java.vendor}
                  Build-Jdk=${java.version}
                  Build-OS-Name=${os.name}
                  Build-OS-Version=${os.version}
</echo>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>

            <execution>
              <id>prepare AS container</id>
              <phase>process-test-resources</phase>
              <configuration>
                <target>
                    <echo>Unzipping JBossAS ${jboss.version} found at ${jboss.zip}</echo>
                    <unzip src="${jboss.zip}" dest="${jboss.unzip.location}/.." />
                    <echo>JBossAS ${jboss.version} should now be at: ${jboss.unzip.location}</echo>
                    <property name="jboss.conf" location="${jboss.unzip.location}/standalone/configuration/standalone.xml" />
                    <echo>Will now add test configuration to JBossAS config file: ${jboss.conf}</echo>
                    <replace file="${jboss.conf}">
                      <replacefilter>
                        <replacetoken>&lt;/drivers></replacetoken>
                        <replacevalue><![CDATA[
                    <!-- FOR RHQ TESTING -->
                    <driver name="postgres" module="org.rhq.postgres">
                        <xa-datasource-class>org.postgresql.xa.PGXADataSource</xa-datasource-class>
                    </driver>
                    <driver name="oracle" module="org.rhq.oracle">
                        <xa-datasource-class>oracle.jdbc.xa.client.OracleXADataSource</xa-datasource-class>
                    </driver>
                </drivers>]]></replacevalue>
                      </replacefilter>
                      <replacefilter>
                        <replacetoken>&lt;/security-domains></replacetoken>
                        <replacevalue><![CDATA[
                <!-- FOR RHQ TESTING -->
                <security-domain name="RHQDSSecurityDomain" cache-type="default">
                    <authentication>
                        <login-module code="SecureIdentity" flag="required">
                            <module-option name="username" value="rhqadmin"/>
                            <module-option name="password" value="1eeb2f255e832171df8592078de921bc"/>
                        </login-module>
                    </authentication>
                </security-domain>
            </security-domains>]]></replacevalue>
                      </replacefilter>
                    </replace>

                    <property name="jboss.modules.dir" location="${jboss.unzip.location}/modules" />
                    <echo>Adding JDBC modules to ${jboss.modules.dir} ...</echo>
                    <copy file="${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar"
                          toDir="${jboss.modules.dir}/org/rhq/oracle/main" failonerror="false" verbose="true" />
                    <echo file="${jboss.modules.dir}/org/rhq/oracle/main/module.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:jboss:module:1.1" name="org.rhq.oracle">
    <resources>
        <resource-root path="ojdbc6-${ojdbc6.version}.jar"/>
    </resources>
    <dependencies>
        <module name="javax.api"/>
        <module name="javax.transaction.api"/>
    </dependencies>
</module>
]]></echo>
                    <copy file="${settings.localRepository}/postgresql/postgresql/${postgresql.version}/postgresql-${postgresql.version}.jar"
                          toDir="${jboss.modules.dir}/org/rhq/postgres/main" verbose="true" />
                    <echo file="${jboss.modules.dir}/org/rhq/postgres/main/module.xml"><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<module xmlns="urn:jboss:module:1.1" name="org.rhq.postgres">
    <resources>
        <resource-root path="postgresql-${postgresql.version}.jar"/>
    </resources>
    <dependencies>
        <module name="javax.api"/>
        <module name="javax.transaction.api"/>
    </dependencies>
</module>
]]></echo>

                </target>
              </configuration>
              <goals>
                <goal>run</goal>
              </goals>
            </execution>

        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
            <!-- Everything but the web service tests, this is the standard test execution -->
        <configuration>
          <skipTests>true</skipTests>
          <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
          <groups>${rhq.testng.includedGroups}</groups>
          <properties>
            <property>
              <name>listener</name>
              <value>org.rhq.test.testng.StdoutReporter</value>
            </property>
          </properties>
          <systemPropertyVariables>
            <embeddedDeployment>true</embeddedDeployment>
            <deploymentDirectory>target/classes</deploymentDirectory>
            <hibernate.dialect>${rhq.test.ds.hibernate-dialect}</hibernate.dialect>
            <clean.db>${clean.db}</clean.db>
            <log4j.configDebug>false</log4j.configDebug>
          </systemPropertyVariables>
          <additionalClasspathElements>
                  <!-- The below is required for tests to run against Oracle. -->
            <additionalClasspathElement>${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar</additionalClasspathElement>
          </additionalClasspathElements>
        </configuration>

        <executions>

          <execution>
            <id>allExceptDbTests</id>
            <goals>
              <goal>test</goal>
            </goals>
            <configuration>
              <skipTests>${skipTests}</skipTests>
              <excludes>
                <exclude>com/**/*.java</exclude>
                <exclude>org/rhq/**/performance/**/*.java</exclude>
                <exclude>org/rhq/enterprise/server/db/**</exclude>
              </excludes>
            </configuration>
          </execution>

        </executions>
      </plugin>

      <plugin>
        <groupId>org.antlr</groupId>
        <artifactId>antlr3-maven-plugin</artifactId>
        <version>3.2</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>antlr</goal>
            </goals>
            <configuration>
              <conversionTimeout>30000</conversionTimeout>
              <debug>false</debug>
              <dfa>false</dfa>
              <nfa>false</nfa>
              <excludes>

              </excludes>
              <includes>

              </includes>
              <libDirectory>src/main/antlr3/imports</libDirectory>
              <messageFormat>antlr</messageFormat>
              <outputDirectory>target/generated-sources/antlr3</outputDirectory>
              <printGrammar>false</printGrammar>
              <profile>false</profile>
              <report>false</report>
              <sourceDirectory>src/main/antlr3</sourceDirectory>
              <trace>false</trace>
              <verbose>true</verbose>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-antlr-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${basedir}/target/generated-sources/antlr3</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

  </build>

  <repositories>
    <repository>
      <!-- TODO change when the annotations are puplished. This is temporary for the swagger annotations for REST-docu -->
      <id>sonatype-oss-snapshot</id>
      <name>Sonatype OSS Snapshot repository</name>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </repository>

  </repositories>

  <profiles>

    <profile>
         <!-- only if we are not running an individual set of tests via -Dtest do we do this -->
      <id>no-individual-test</id>
      <activation>
        <property>
          <name>!test</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-surefire-plugin</artifactId>
                  <!-- Everything but the web service tests, this is the standard test execution -->
            <configuration>
              <skipTests>true</skipTests>
              <excludedGroups>${rhq.testng.excludedGroups}</excludedGroups>
              <groups>${rhq.testng.includedGroups}</groups>
              <properties>
                <property>
                  <name>listener</name>
                  <value>org.rhq.test.testng.StdoutReporter</value>
                </property>
              </properties>
              <systemPropertyVariables>
                <embeddedDeployment>true</embeddedDeployment>
                <deploymentDirectory>target/classes</deploymentDirectory>
                <hibernate.dialect>${rhq.test.ds.hibernate-dialect}</hibernate.dialect>
                <clean.db>${clean.db}</clean.db>
                <log4j.configDebug>false</log4j.configDebug>
              </systemPropertyVariables>
              <additionalClasspathElements>
                     <!-- The below is required for tests to run against Oracle. -->
                <additionalClasspathElement>${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar</additionalClasspathElement>
              </additionalClasspathElements>
            </configuration>
            <executions>
              <execution>
                <id>dbTestsOnly</id>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <skipTests>${skipTests}</skipTests>
                  <includes>
                    <include>org/rhq/enterprise/server/db/**</include>
                  </includes>
                  <failIfNoTests>false</failIfNoTests>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- if you want to test on oracle, this can pull down the oracle jdbc driver that is needed -->
    <profile>
        <id>ojdbc-driver</id>
        <dependencies>
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${ojdbc6.version}</version>
            </dependency>
        </dependencies>
    </profile>


    <profile>
      <id>dev</id>

      <properties>
        <rhq.rootDir>../../../..</rhq.rootDir>
        <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
        <rhq.deploymentName>${project.build.finalName}-ejb3.jar</rhq.deploymentName>
        <rhq.deploymentDir>${rhq.containerDir}/jbossas/standalone/deployments/${rhq.earName}/${rhq.deploymentName}</rhq.deploymentDir>
      </properties>

      <build>
        <plugins>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>

              <execution>
                <id>deploy</id>
                <phase>process-classes</phase>
                <configuration>
                  <target>
                    <property name="deployment.dir" location="${rhq.deploymentDir}"/>
                    <echo>*** Copying updated files from target/classes to ${deployment.dir}...</echo>
                    <copy todir="${deployment.dir}" verbose="${rhq.verbose}">
                      <fileset dir="target/classes"/>
                    </copy>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

                     <!--
                        NOTE: The below execution is necessary to make sure the META-INF/MANIFEST.MF and
                        META-INF/maven/** files, which get created by the ejb plugin during the package phase, get
                        copied over to the deployment dir.
                     -->
              <execution>
                <id>deploy-jar-meta-inf</id>
                <phase>package</phase>
                <configuration>
                  <target>
                    <unjar src="${project.build.directory}/${project.build.finalName}.jar" dest="${rhq.deploymentDir}"
                      overwrite="false">
                      <patternset>
                        <include name="META-INF/**"/>
                      </patternset>
                    </unjar>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

              <execution>
                <id>undeploy</id>
                <phase>clean</phase>
                <configuration>
                  <target>
                    <property name="deployment.dir" location="${rhq.deploymentDir}"/>
                    <echo>*** Deleting ${deployment.dir}${file.separator}...</echo>
                    <delete dir="${deployment.dir}"/>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

    <profile>
      <id>javadoc</id>
      <activation>
        <property>
          <name>javadoc.outputDirectory</name>
        </property>
      </activation>

      <build>
        <plugins>
          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>

              <execution>
                <id>remote-api</id>
                <phase>compile</phase>
                <configuration>
                  <target>
                    <property name="javadoc.outputDirectory" value="${javadoc.outputDirectory}"/>
                    <property name="project.dir" value="./src/main/java/org/rhq/enterprise/server"/>
                    <property name="maven.compile.classpath" refid="maven.compile.classpath"/>

                    <mkdir dir="${javadoc.outputDirectory}/remote-api"/>
                    <javadoc destdir="${javadoc.outputDirectory}/remote-api" author="false" version="true"
                      windowtitle="RHQ ${project.version} Remote API" noindex="false">
                      <classpath>
                        <pathelement path="${maven.compile.classpath}"/>
                      </classpath>
                      <fileset dir="${project.dir}" defaultexcludes="yes">
                        <include name="**/*Remote.java"/>
                      </fileset>
                      <link href="../domain/"/>
                      <link href="http://download.oracle.com/javase/6/docs/api/"/>
                      <bottom><![CDATA[Copyright &#169; 2005-2011 <a href="http://redhat.com/">Red Hat, Inc.</a>. All Rights Reserved.]]></bottom>
                    </javadoc>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>

            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>
  </profiles>

  <reporting>
     <plugins>
        <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>clirr-maven-plugin</artifactId>
           <configuration>
              <includes>
                 <include>**/*Remote</include>
                 <include>**/ServerVersion</include>
              </includes>
           </configuration>
        </plugin>
     </plugins>
  </reporting>
</project>
