<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.rhq</groupId>
        <artifactId>rhq-parent</artifactId>
        <version>4.1.0-SNAPSHOT</version>
        <relativePath>../../../../pom.xml</relativePath>
    </parent>

    <groupId>org.rhq</groupId>
    <artifactId>rhq-rest</artifactId>
    <packaging>war</packaging>

    <name>RHQ REST interface</name>
    <description>RHQ Rest interface for the RHQ server</description>


    <scm>
       <connection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/enterprise/gui/rest-war/</connection>
       <developerConnection>scm:git:ssh://git.fedorahosted.org/git/rhq.git/modules/enterprise/gui/rest-war/</developerConnection>
    </scm>


    <properties>
       <scm.module.path>modules/enterprise/gui/rest-war/</scm.module.path>


       <!-- Note: The product info properties now live in the RHQ root pom. -->
    </properties>

    <dependencies>
        <dependency>
           <groupId>org.rhq</groupId>
           <artifactId>rhq-core-domain</artifactId>
           <version>${project.version}</version>
           <scope>provided</scope> <!-- by rhq.ear (as ejb-jar) -->
        </dependency>

        <dependency>
           <groupId>org.rhq</groupId>
           <artifactId>rhq-enterprise-server</artifactId>
           <version>${project.version}</version>
           <scope>provided</scope> <!-- by rhq.ear (as ejb-jar) -->
        </dependency>

        <!-- 3rd Party Deps -->

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
            <scope>provided</scope> <!-- by JBossAS -->
        </dependency>



        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- needed for EJB3 annotations (e.g. ApplicationException) -->
        <dependency>
           <groupId>jboss</groupId>
           <artifactId>jboss-ejb3x</artifactId>
           <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
           <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <!-- needed for referenced domain entities that use JPA annotations (due to JDK5 bug) -->
        <dependency>
           <groupId>javax.persistence</groupId>
           <artifactId>persistence-api</artifactId>
           <version>1.0</version>
           <scope>provided</scope> <!-- by JBossAS -->
        </dependency>


        <!-- needed for referenced domain entities that use Hibernate annotations (due to JDK5 bug) -->
        <dependency>
           <groupId>hibernate-annotations</groupId>
           <artifactId>hibernate-annotations</artifactId>
           <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
           <scope>provided</scope> <!-- by JBossAS -->
        </dependency>

        <!-- Needed due to JDK 1.5 bug. -->
        <dependency>
           <groupId>jboss</groupId>
           <artifactId>jboss-annotations-ejb3</artifactId>
           <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
           <scope>provided</scope> <!-- by JBossAS -->
        </dependency>


    </dependencies>
    <build>
        <finalName>rhq-rest</finalName>

        <plugins>

           <plugin>
              <artifactId>maven-war-plugin</artifactId>
              <version>2.1-alpha-1</version>
              <configuration>
                 <archive>
                    <manifest>
                       <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                       <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                    </manifest>
                    <manifestEntries>
                       <Build-Number>${buildNumber}</Build-Number>
                    </manifestEntries>
                 </archive>
                 <webResources>
                    <resource>
                       <filtering>false</filtering>
                       <directory>${basedir}/src/main/webapp</directory>
                    </resource>
                 </webResources>
              </configuration>
           </plugin>

        </plugins>

    </build>


    <profiles>

       <profile>
          <id>dev</id>

          <properties>
             <rhq.rootDir>../../../..</rhq.rootDir>
             <rhq.containerDir>${rhq.rootDir}/${rhq.defaultDevContainerPath}</rhq.containerDir>
             <rhq.deploymentName>${project.build.finalName}.war</rhq.deploymentName>
             <rhq.deploymentDir>${rhq.containerDir}/jbossas/server/default/deploy/${rhq.earName}/${rhq.deploymentName}</rhq.deploymentDir>
          </properties>

          <build>
             <plugins>

                <plugin>
                  <artifactId>maven-antrun-plugin</artifactId>
                  <executions>

                      <execution>
                         <id>deploy-classes</id>
                         <phase>compile</phase>
                         <configuration>
                           <tasks>
                             <property name="classes.dir" location="${rhq.deploymentDir}/WEB-INF/classes" />
                             <echo>*** Copying updated files from target/classes to ${classes.dir}...</echo>
                             <copy todir="${classes.dir}" verbose="${rhq.verbose}">
                                <fileset dir="target/classes" />
                             </copy>
                             <property name="deployment.dir" location="${rhq.deploymentDir}" />
                             <echo>*** Copying updated files from src${file.separator}main${file.separator}webapp${file.separator} to ${deployment.dir}${file.separator}...</echo>
                             <copy todir="${deployment.dir}" verbose="${rhq.verbose}">
                                <fileset dir="${basedir}/src/main/webapp" />
                             </copy>
                             <!-- TODO: Also copy the files from src/main/webapp-filtered/, and then filter them ourselves. -->
                           </tasks>
                         </configuration>
                         <goals>
                           <goal>run</goal>
                         </goals>
                      </execution>

                      <execution>
                         <id>deploy</id>
                         <phase>package</phase>
                         <configuration>
                           <tasks>
                             <property name="deployment.dir" location="${rhq.deploymentDir}" />
                             <echo>*** Copying updated files from target${file.separator}${project.build.finalName}${file.separator} to ${deployment.dir}${file.separator}...</echo>
                             <copy todir="${deployment.dir}" verbose="${rhq.verbose}">
                                <fileset dir="${basedir}/target/${project.build.finalName}" />
                             </copy>
                           </tasks>
                         </configuration>
                         <goals>
                           <goal>run</goal>
                         </goals>
                      </execution>

                      <execution>
                         <id>undeploy</id>
                         <phase>clean</phase>
                         <configuration>
                           <tasks>
                             <property name="deployment.dir" location="${rhq.deploymentDir}" />
                             <echo>*** Deleting ${deployment.dir}${file.separator}...</echo>
                             <delete dir="${deployment.dir}" />
                           </tasks>
                         </configuration>
                         <goals>
                           <goal>run</goal>
                         </goals>
                      </execution>

                   </executions>
                </plugin>

             </plugins>
          </build>
       </profile>

        <profile>
       <id>cobertura</id>
       <activation>
         <activeByDefault>false</activeByDefault>
       </activation>
         <build>
          <plugins>
            <plugin>
              <artifactId>maven-antrun-plugin</artifactId>
               <dependencies>
                <dependency>
                  <groupId>net.sourceforge.cobertura</groupId>
                  <artifactId>cobertura</artifactId>
                  <version>${cobertura.version}</version>
                </dependency>
              </dependencies>
              <executions>
               <execution>
                <id>cobertura-instrument</id>
                <phase>process-test-classes</phase>
                  <configuration>
                    <tasks>
                    <!-- prepare directory structure for cobertura-->
                    <mkdir dir="target/cobertura" />
                    <mkdir dir="target/cobertura/backup" />
                    <!-- backup all classes so that we can instrument the original classes-->
                    <copy toDir="target/cobertura/backup" verbose="true" overwrite="true">
                       <fileset dir="target/classes">
                           <include name="org/rhq/enterprise/gui/util/LookupComponent.class" />
                           <include name="org/rhq/enterprise/gui/common/time/converter/RelativeDurationConverter.class" />
                       </fileset>
                    </copy>
                    <!-- create a properties file and save there location of cobertura data file-->
                    <touch file="target/classes/cobertura.properties" />
                    <echo file="target/classes/cobertura.properties">net.sourceforge.cobertura.datafile=${project.build.directory}/cobertura/cobertura.ser</echo>
                    <taskdef classpathref="maven.plugin.classpath" resource="tasks.properties" />
                    <!-- instrument all classes in target/classes directory -->
                    <cobertura-instrument datafile="${project.build.directory}/cobertura/cobertura.ser" todir="${project.build.directory}/classes">
                      <fileset dir="${project.build.directory}/classes">
                         <include name="org/rhq/enterprise/gui/util/LookupComponent.class" />
                         <include name="org/rhq/enterprise/gui/common/time/converter/RelativeDurationConverter.class" />
                       </fileset>
                     </cobertura-instrument>
                    </tasks>
                  </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
               </execution>
               <execution>
                <id>cobertura-report</id>
                <phase>prepare-package</phase>
                  <configuration>
                    <tasks>
                      <taskdef classpathref="maven.plugin.classpath" resource="tasks.properties" />
                      <!-- prepare directory structure for cobertura-->
                      <mkdir dir="target/cobertura" />
                      <mkdir dir="target/site/cobertura" />
                      <!-- restore classes from backup folder to classes folder -->
                      <copy toDir="target/classes" verbose="true" overwrite="true">
                       <fileset dir="target/cobertura/backup">
                          <include name="org/rhq/enterprise/gui/util/LookupComponent.class" />
                          <include name="org/rhq/enterprise/gui/common/time/converter/RelativeDurationConverter.class" />
                       </fileset>
                      </copy>
                      <!-- delete backup folder-->
                      <delete dir="target/cobertura/backup" />
                      <!-- create a code coverage report -->
                      <cobertura-report format="html" datafile="${project.build.directory}/cobertura/cobertura.ser" destdir="${project.build.directory}/site/cobertura">
                       <fileset dir="${basedir}/src/main/java">
                          <include name="org/rhq/enterprise/gui/util/LookupComponent.java" />
                         <include name="org/rhq/enterprise/gui/common/time/converter/RelativeDurationConverter.java" />
                       </fileset>
                      </cobertura-report>
                      <!-- delete cobertura.properties file -->
                      <delete file="target/classes/cobertura.properties" />
                    </tasks>
                  </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
                </execution>
             </executions>
            </plugin>
           </plugins>
        </build>
      </profile>
    </profiles>

</project>
